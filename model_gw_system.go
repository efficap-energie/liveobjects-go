/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// GwSystem struct for GwSystem
type GwSystem struct {
	// GPS state
	GpsState *string `json:"gpsState,omitempty"`
	// Power state
	PowerState *string `json:"powerState,omitempty"`
	// Time synchronization
	TimeSync *string `json:"timeSync,omitempty"`
}

// NewGwSystem instantiates a new GwSystem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGwSystem() *GwSystem {
	this := GwSystem{}
	return &this
}

// NewGwSystemWithDefaults instantiates a new GwSystem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGwSystemWithDefaults() *GwSystem {
	this := GwSystem{}
	return &this
}

// GetGpsState returns the GpsState field value if set, zero value otherwise.
func (o *GwSystem) GetGpsState() string {
	if o == nil || o.GpsState == nil {
		var ret string
		return ret
	}
	return *o.GpsState
}

// GetGpsStateOk returns a tuple with the GpsState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GwSystem) GetGpsStateOk() (*string, bool) {
	if o == nil || o.GpsState == nil {
		return nil, false
	}
	return o.GpsState, true
}

// HasGpsState returns a boolean if a field has been set.
func (o *GwSystem) HasGpsState() bool {
	if o != nil && o.GpsState != nil {
		return true
	}

	return false
}

// SetGpsState gets a reference to the given string and assigns it to the GpsState field.
func (o *GwSystem) SetGpsState(v string) {
	o.GpsState = &v
}

// GetPowerState returns the PowerState field value if set, zero value otherwise.
func (o *GwSystem) GetPowerState() string {
	if o == nil || o.PowerState == nil {
		var ret string
		return ret
	}
	return *o.PowerState
}

// GetPowerStateOk returns a tuple with the PowerState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GwSystem) GetPowerStateOk() (*string, bool) {
	if o == nil || o.PowerState == nil {
		return nil, false
	}
	return o.PowerState, true
}

// HasPowerState returns a boolean if a field has been set.
func (o *GwSystem) HasPowerState() bool {
	if o != nil && o.PowerState != nil {
		return true
	}

	return false
}

// SetPowerState gets a reference to the given string and assigns it to the PowerState field.
func (o *GwSystem) SetPowerState(v string) {
	o.PowerState = &v
}

// GetTimeSync returns the TimeSync field value if set, zero value otherwise.
func (o *GwSystem) GetTimeSync() string {
	if o == nil || o.TimeSync == nil {
		var ret string
		return ret
	}
	return *o.TimeSync
}

// GetTimeSyncOk returns a tuple with the TimeSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GwSystem) GetTimeSyncOk() (*string, bool) {
	if o == nil || o.TimeSync == nil {
		return nil, false
	}
	return o.TimeSync, true
}

// HasTimeSync returns a boolean if a field has been set.
func (o *GwSystem) HasTimeSync() bool {
	if o != nil && o.TimeSync != nil {
		return true
	}

	return false
}

// SetTimeSync gets a reference to the given string and assigns it to the TimeSync field.
func (o *GwSystem) SetTimeSync(v string) {
	o.TimeSync = &v
}

func (o GwSystem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GpsState != nil {
		toSerialize["gpsState"] = o.GpsState
	}
	if o.PowerState != nil {
		toSerialize["powerState"] = o.PowerState
	}
	if o.TimeSync != nil {
		toSerialize["timeSync"] = o.TimeSync
	}
	return json.Marshal(toSerialize)
}

type NullableGwSystem struct {
	value *GwSystem
	isSet bool
}

func (v NullableGwSystem) Get() *GwSystem {
	return v.value
}

func (v *NullableGwSystem) Set(val *GwSystem) {
	v.value = val
	v.isSet = true
}

func (v NullableGwSystem) IsSet() bool {
	return v.isSet
}

func (v *NullableGwSystem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGwSystem(val *GwSystem) *NullableGwSystem {
	return &NullableGwSystem{value: val, isSet: true}
}

func (v NullableGwSystem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGwSystem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


