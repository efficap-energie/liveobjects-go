/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// ResourceUpdateWeb struct for ResourceUpdateWeb
type ResourceUpdateWeb struct {
	Created *string `json:"created,omitempty"`
	DeviceErrorCode *string `json:"deviceErrorCode,omitempty"`
	ErrorCode *string `json:"errorCode,omitempty"`
	ErrorDetails *string `json:"errorDetails,omitempty"`
	ErrorOrigin *string `json:"errorOrigin,omitempty"`
	Id *string `json:"id,omitempty"`
	InitialVersion *string `json:"initialVersion,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	Progress *float64 `json:"progress,omitempty"`
	RequestedVersion *string `json:"requestedVersion,omitempty"`
	Status *string `json:"status,omitempty"`
	Updated *string `json:"updated,omitempty"`
}

// NewResourceUpdateWeb instantiates a new ResourceUpdateWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceUpdateWeb() *ResourceUpdateWeb {
	this := ResourceUpdateWeb{}
	return &this
}

// NewResourceUpdateWebWithDefaults instantiates a new ResourceUpdateWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceUpdateWebWithDefaults() *ResourceUpdateWeb {
	this := ResourceUpdateWeb{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *ResourceUpdateWeb) SetCreated(v string) {
	o.Created = &v
}

// GetDeviceErrorCode returns the DeviceErrorCode field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetDeviceErrorCode() string {
	if o == nil || o.DeviceErrorCode == nil {
		var ret string
		return ret
	}
	return *o.DeviceErrorCode
}

// GetDeviceErrorCodeOk returns a tuple with the DeviceErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetDeviceErrorCodeOk() (*string, bool) {
	if o == nil || o.DeviceErrorCode == nil {
		return nil, false
	}
	return o.DeviceErrorCode, true
}

// HasDeviceErrorCode returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasDeviceErrorCode() bool {
	if o != nil && o.DeviceErrorCode != nil {
		return true
	}

	return false
}

// SetDeviceErrorCode gets a reference to the given string and assigns it to the DeviceErrorCode field.
func (o *ResourceUpdateWeb) SetDeviceErrorCode(v string) {
	o.DeviceErrorCode = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetErrorCode() string {
	if o == nil || o.ErrorCode == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetErrorCodeOk() (*string, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *ResourceUpdateWeb) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorDetails returns the ErrorDetails field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetErrorDetails() string {
	if o == nil || o.ErrorDetails == nil {
		var ret string
		return ret
	}
	return *o.ErrorDetails
}

// GetErrorDetailsOk returns a tuple with the ErrorDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetErrorDetailsOk() (*string, bool) {
	if o == nil || o.ErrorDetails == nil {
		return nil, false
	}
	return o.ErrorDetails, true
}

// HasErrorDetails returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasErrorDetails() bool {
	if o != nil && o.ErrorDetails != nil {
		return true
	}

	return false
}

// SetErrorDetails gets a reference to the given string and assigns it to the ErrorDetails field.
func (o *ResourceUpdateWeb) SetErrorDetails(v string) {
	o.ErrorDetails = &v
}

// GetErrorOrigin returns the ErrorOrigin field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetErrorOrigin() string {
	if o == nil || o.ErrorOrigin == nil {
		var ret string
		return ret
	}
	return *o.ErrorOrigin
}

// GetErrorOriginOk returns a tuple with the ErrorOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetErrorOriginOk() (*string, bool) {
	if o == nil || o.ErrorOrigin == nil {
		return nil, false
	}
	return o.ErrorOrigin, true
}

// HasErrorOrigin returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasErrorOrigin() bool {
	if o != nil && o.ErrorOrigin != nil {
		return true
	}

	return false
}

// SetErrorOrigin gets a reference to the given string and assigns it to the ErrorOrigin field.
func (o *ResourceUpdateWeb) SetErrorOrigin(v string) {
	o.ErrorOrigin = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ResourceUpdateWeb) SetId(v string) {
	o.Id = &v
}

// GetInitialVersion returns the InitialVersion field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetInitialVersion() string {
	if o == nil || o.InitialVersion == nil {
		var ret string
		return ret
	}
	return *o.InitialVersion
}

// GetInitialVersionOk returns a tuple with the InitialVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetInitialVersionOk() (*string, bool) {
	if o == nil || o.InitialVersion == nil {
		return nil, false
	}
	return o.InitialVersion, true
}

// HasInitialVersion returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasInitialVersion() bool {
	if o != nil && o.InitialVersion != nil {
		return true
	}

	return false
}

// SetInitialVersion gets a reference to the given string and assigns it to the InitialVersion field.
func (o *ResourceUpdateWeb) SetInitialVersion(v string) {
	o.InitialVersion = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *ResourceUpdateWeb) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetProgress() float64 {
	if o == nil || o.Progress == nil {
		var ret float64
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetProgressOk() (*float64, bool) {
	if o == nil || o.Progress == nil {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasProgress() bool {
	if o != nil && o.Progress != nil {
		return true
	}

	return false
}

// SetProgress gets a reference to the given float64 and assigns it to the Progress field.
func (o *ResourceUpdateWeb) SetProgress(v float64) {
	o.Progress = &v
}

// GetRequestedVersion returns the RequestedVersion field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetRequestedVersion() string {
	if o == nil || o.RequestedVersion == nil {
		var ret string
		return ret
	}
	return *o.RequestedVersion
}

// GetRequestedVersionOk returns a tuple with the RequestedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetRequestedVersionOk() (*string, bool) {
	if o == nil || o.RequestedVersion == nil {
		return nil, false
	}
	return o.RequestedVersion, true
}

// HasRequestedVersion returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasRequestedVersion() bool {
	if o != nil && o.RequestedVersion != nil {
		return true
	}

	return false
}

// SetRequestedVersion gets a reference to the given string and assigns it to the RequestedVersion field.
func (o *ResourceUpdateWeb) SetRequestedVersion(v string) {
	o.RequestedVersion = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ResourceUpdateWeb) SetStatus(v string) {
	o.Status = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *ResourceUpdateWeb) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceUpdateWeb) GetUpdatedOk() (*string, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *ResourceUpdateWeb) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *ResourceUpdateWeb) SetUpdated(v string) {
	o.Updated = &v
}

func (o ResourceUpdateWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.DeviceErrorCode != nil {
		toSerialize["deviceErrorCode"] = o.DeviceErrorCode
	}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorDetails != nil {
		toSerialize["errorDetails"] = o.ErrorDetails
	}
	if o.ErrorOrigin != nil {
		toSerialize["errorOrigin"] = o.ErrorOrigin
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InitialVersion != nil {
		toSerialize["initialVersion"] = o.InitialVersion
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Progress != nil {
		toSerialize["progress"] = o.Progress
	}
	if o.RequestedVersion != nil {
		toSerialize["requestedVersion"] = o.RequestedVersion
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	return json.Marshal(toSerialize)
}

type NullableResourceUpdateWeb struct {
	value *ResourceUpdateWeb
	isSet bool
}

func (v NullableResourceUpdateWeb) Get() *ResourceUpdateWeb {
	return v.value
}

func (v *NullableResourceUpdateWeb) Set(val *ResourceUpdateWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceUpdateWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceUpdateWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceUpdateWeb(val *ResourceUpdateWeb) *NullableResourceUpdateWeb {
	return &NullableResourceUpdateWeb{value: val, isSet: true}
}

func (v NullableResourceUpdateWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceUpdateWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


