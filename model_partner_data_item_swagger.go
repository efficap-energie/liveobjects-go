/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// PartnerDataItemSwagger struct for PartnerDataItemSwagger
type PartnerDataItemSwagger struct {
	Metadata Metadata `json:"metadata"`
	// Model of the injected data. Data with the same model must have coherent types in each value fields. This field is required to perform an advanced search on the data. Can not contains space or dot characters. Should not be empty or blank.
	Model *string `json:"model,omitempty"`
	// StreamId in which the data will be added. Should not contains following character or space : ' \\ \" ; { } ( )
	StreamId *string `json:"streamId,omitempty"`
	// Easy way to 'tag' the data in order to ease up advanced search through all streams and models
	Tags *[]string `json:"tags,omitempty"`
	// ISO 8601 date time
	Timestamp *string `json:"timestamp,omitempty"`
	// Must be a JsonObject (primitive objects like string or int are not allowed)
	Value map[string]interface{} `json:"value"`
}

// NewPartnerDataItemSwagger instantiates a new PartnerDataItemSwagger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartnerDataItemSwagger(metadata Metadata, value map[string]interface{}, ) *PartnerDataItemSwagger {
	this := PartnerDataItemSwagger{}
	this.Metadata = metadata
	this.Value = value
	return &this
}

// NewPartnerDataItemSwaggerWithDefaults instantiates a new PartnerDataItemSwagger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartnerDataItemSwaggerWithDefaults() *PartnerDataItemSwagger {
	this := PartnerDataItemSwagger{}
	return &this
}

// GetMetadata returns the Metadata field value
func (o *PartnerDataItemSwagger) GetMetadata() Metadata {
	if o == nil  {
		var ret Metadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *PartnerDataItemSwagger) GetMetadataOk() (*Metadata, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *PartnerDataItemSwagger) SetMetadata(v Metadata) {
	o.Metadata = v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *PartnerDataItemSwagger) GetModel() string {
	if o == nil || o.Model == nil {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDataItemSwagger) GetModelOk() (*string, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *PartnerDataItemSwagger) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *PartnerDataItemSwagger) SetModel(v string) {
	o.Model = &v
}

// GetStreamId returns the StreamId field value if set, zero value otherwise.
func (o *PartnerDataItemSwagger) GetStreamId() string {
	if o == nil || o.StreamId == nil {
		var ret string
		return ret
	}
	return *o.StreamId
}

// GetStreamIdOk returns a tuple with the StreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDataItemSwagger) GetStreamIdOk() (*string, bool) {
	if o == nil || o.StreamId == nil {
		return nil, false
	}
	return o.StreamId, true
}

// HasStreamId returns a boolean if a field has been set.
func (o *PartnerDataItemSwagger) HasStreamId() bool {
	if o != nil && o.StreamId != nil {
		return true
	}

	return false
}

// SetStreamId gets a reference to the given string and assigns it to the StreamId field.
func (o *PartnerDataItemSwagger) SetStreamId(v string) {
	o.StreamId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PartnerDataItemSwagger) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDataItemSwagger) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PartnerDataItemSwagger) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *PartnerDataItemSwagger) SetTags(v []string) {
	o.Tags = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *PartnerDataItemSwagger) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartnerDataItemSwagger) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *PartnerDataItemSwagger) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *PartnerDataItemSwagger) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetValue returns the Value field value
func (o *PartnerDataItemSwagger) GetValue() map[string]interface{} {
	if o == nil  {
		var ret map[string]interface{}
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PartnerDataItemSwagger) GetValueOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *PartnerDataItemSwagger) SetValue(v map[string]interface{}) {
	o.Value = v
}

func (o PartnerDataItemSwagger) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Model != nil {
		toSerialize["model"] = o.Model
	}
	if o.StreamId != nil {
		toSerialize["streamId"] = o.StreamId
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullablePartnerDataItemSwagger struct {
	value *PartnerDataItemSwagger
	isSet bool
}

func (v NullablePartnerDataItemSwagger) Get() *PartnerDataItemSwagger {
	return v.value
}

func (v *NullablePartnerDataItemSwagger) Set(val *PartnerDataItemSwagger) {
	v.value = val
	v.isSet = true
}

func (v NullablePartnerDataItemSwagger) IsSet() bool {
	return v.isSet
}

func (v *NullablePartnerDataItemSwagger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartnerDataItemSwagger(val *PartnerDataItemSwagger) *NullablePartnerDataItemSwagger {
	return &NullablePartnerDataItemSwagger{value: val, isSet: true}
}

func (v NullablePartnerDataItemSwagger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartnerDataItemSwagger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


