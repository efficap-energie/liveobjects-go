/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// PayloadDescriptionTestResult struct for PayloadDescriptionTestResult
type PayloadDescriptionTestResult struct {
	DecodingFailureReason *string `json:"decodingFailureReason,omitempty"`
	DecodingResult *map[string]interface{} `json:"decodingResult,omitempty"`
	DescriptionValid *bool `json:"descriptionValid,omitempty"`
	ParsingOk *bool `json:"parsingOk,omitempty"`
	TemplatingOK *bool `json:"templatingOK,omitempty"`
}

// NewPayloadDescriptionTestResult instantiates a new PayloadDescriptionTestResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayloadDescriptionTestResult() *PayloadDescriptionTestResult {
	this := PayloadDescriptionTestResult{}
	return &this
}

// NewPayloadDescriptionTestResultWithDefaults instantiates a new PayloadDescriptionTestResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayloadDescriptionTestResultWithDefaults() *PayloadDescriptionTestResult {
	this := PayloadDescriptionTestResult{}
	return &this
}

// GetDecodingFailureReason returns the DecodingFailureReason field value if set, zero value otherwise.
func (o *PayloadDescriptionTestResult) GetDecodingFailureReason() string {
	if o == nil || o.DecodingFailureReason == nil {
		var ret string
		return ret
	}
	return *o.DecodingFailureReason
}

// GetDecodingFailureReasonOk returns a tuple with the DecodingFailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadDescriptionTestResult) GetDecodingFailureReasonOk() (*string, bool) {
	if o == nil || o.DecodingFailureReason == nil {
		return nil, false
	}
	return o.DecodingFailureReason, true
}

// HasDecodingFailureReason returns a boolean if a field has been set.
func (o *PayloadDescriptionTestResult) HasDecodingFailureReason() bool {
	if o != nil && o.DecodingFailureReason != nil {
		return true
	}

	return false
}

// SetDecodingFailureReason gets a reference to the given string and assigns it to the DecodingFailureReason field.
func (o *PayloadDescriptionTestResult) SetDecodingFailureReason(v string) {
	o.DecodingFailureReason = &v
}

// GetDecodingResult returns the DecodingResult field value if set, zero value otherwise.
func (o *PayloadDescriptionTestResult) GetDecodingResult() map[string]interface{} {
	if o == nil || o.DecodingResult == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.DecodingResult
}

// GetDecodingResultOk returns a tuple with the DecodingResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadDescriptionTestResult) GetDecodingResultOk() (*map[string]interface{}, bool) {
	if o == nil || o.DecodingResult == nil {
		return nil, false
	}
	return o.DecodingResult, true
}

// HasDecodingResult returns a boolean if a field has been set.
func (o *PayloadDescriptionTestResult) HasDecodingResult() bool {
	if o != nil && o.DecodingResult != nil {
		return true
	}

	return false
}

// SetDecodingResult gets a reference to the given map[string]interface{} and assigns it to the DecodingResult field.
func (o *PayloadDescriptionTestResult) SetDecodingResult(v map[string]interface{}) {
	o.DecodingResult = &v
}

// GetDescriptionValid returns the DescriptionValid field value if set, zero value otherwise.
func (o *PayloadDescriptionTestResult) GetDescriptionValid() bool {
	if o == nil || o.DescriptionValid == nil {
		var ret bool
		return ret
	}
	return *o.DescriptionValid
}

// GetDescriptionValidOk returns a tuple with the DescriptionValid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadDescriptionTestResult) GetDescriptionValidOk() (*bool, bool) {
	if o == nil || o.DescriptionValid == nil {
		return nil, false
	}
	return o.DescriptionValid, true
}

// HasDescriptionValid returns a boolean if a field has been set.
func (o *PayloadDescriptionTestResult) HasDescriptionValid() bool {
	if o != nil && o.DescriptionValid != nil {
		return true
	}

	return false
}

// SetDescriptionValid gets a reference to the given bool and assigns it to the DescriptionValid field.
func (o *PayloadDescriptionTestResult) SetDescriptionValid(v bool) {
	o.DescriptionValid = &v
}

// GetParsingOk returns the ParsingOk field value if set, zero value otherwise.
func (o *PayloadDescriptionTestResult) GetParsingOk() bool {
	if o == nil || o.ParsingOk == nil {
		var ret bool
		return ret
	}
	return *o.ParsingOk
}

// GetParsingOkOk returns a tuple with the ParsingOk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadDescriptionTestResult) GetParsingOkOk() (*bool, bool) {
	if o == nil || o.ParsingOk == nil {
		return nil, false
	}
	return o.ParsingOk, true
}

// HasParsingOk returns a boolean if a field has been set.
func (o *PayloadDescriptionTestResult) HasParsingOk() bool {
	if o != nil && o.ParsingOk != nil {
		return true
	}

	return false
}

// SetParsingOk gets a reference to the given bool and assigns it to the ParsingOk field.
func (o *PayloadDescriptionTestResult) SetParsingOk(v bool) {
	o.ParsingOk = &v
}

// GetTemplatingOK returns the TemplatingOK field value if set, zero value otherwise.
func (o *PayloadDescriptionTestResult) GetTemplatingOK() bool {
	if o == nil || o.TemplatingOK == nil {
		var ret bool
		return ret
	}
	return *o.TemplatingOK
}

// GetTemplatingOKOk returns a tuple with the TemplatingOK field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadDescriptionTestResult) GetTemplatingOKOk() (*bool, bool) {
	if o == nil || o.TemplatingOK == nil {
		return nil, false
	}
	return o.TemplatingOK, true
}

// HasTemplatingOK returns a boolean if a field has been set.
func (o *PayloadDescriptionTestResult) HasTemplatingOK() bool {
	if o != nil && o.TemplatingOK != nil {
		return true
	}

	return false
}

// SetTemplatingOK gets a reference to the given bool and assigns it to the TemplatingOK field.
func (o *PayloadDescriptionTestResult) SetTemplatingOK(v bool) {
	o.TemplatingOK = &v
}

func (o PayloadDescriptionTestResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DecodingFailureReason != nil {
		toSerialize["decodingFailureReason"] = o.DecodingFailureReason
	}
	if o.DecodingResult != nil {
		toSerialize["decodingResult"] = o.DecodingResult
	}
	if o.DescriptionValid != nil {
		toSerialize["descriptionValid"] = o.DescriptionValid
	}
	if o.ParsingOk != nil {
		toSerialize["parsingOk"] = o.ParsingOk
	}
	if o.TemplatingOK != nil {
		toSerialize["templatingOK"] = o.TemplatingOK
	}
	return json.Marshal(toSerialize)
}

type NullablePayloadDescriptionTestResult struct {
	value *PayloadDescriptionTestResult
	isSet bool
}

func (v NullablePayloadDescriptionTestResult) Get() *PayloadDescriptionTestResult {
	return v.value
}

func (v *NullablePayloadDescriptionTestResult) Set(val *PayloadDescriptionTestResult) {
	v.value = val
	v.isSet = true
}

func (v NullablePayloadDescriptionTestResult) IsSet() bool {
	return v.isSet
}

func (v *NullablePayloadDescriptionTestResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayloadDescriptionTestResult(val *PayloadDescriptionTestResult) *NullablePayloadDescriptionTestResult {
	return &NullablePayloadDescriptionTestResult{value: val, isSet: true}
}

func (v NullablePayloadDescriptionTestResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayloadDescriptionTestResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


