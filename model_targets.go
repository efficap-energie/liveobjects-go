/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// Targets defines the targeted device of an ActivityRule
type Targets struct {
	// List of targeted device ids. This field should not be empty if groupPaths is empty.
	DeviceIds *[]string `json:"deviceIds,omitempty"`
	// list of targeted group paths. This field should not be empty if deviceIds is empty.
	GroupPaths *[]GroupPath `json:"groupPaths,omitempty"`
}

// NewTargets instantiates a new Targets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargets() *Targets {
	this := Targets{}
	return &this
}

// NewTargetsWithDefaults instantiates a new Targets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetsWithDefaults() *Targets {
	this := Targets{}
	return &this
}

// GetDeviceIds returns the DeviceIds field value if set, zero value otherwise.
func (o *Targets) GetDeviceIds() []string {
	if o == nil || o.DeviceIds == nil {
		var ret []string
		return ret
	}
	return *o.DeviceIds
}

// GetDeviceIdsOk returns a tuple with the DeviceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Targets) GetDeviceIdsOk() (*[]string, bool) {
	if o == nil || o.DeviceIds == nil {
		return nil, false
	}
	return o.DeviceIds, true
}

// HasDeviceIds returns a boolean if a field has been set.
func (o *Targets) HasDeviceIds() bool {
	if o != nil && o.DeviceIds != nil {
		return true
	}

	return false
}

// SetDeviceIds gets a reference to the given []string and assigns it to the DeviceIds field.
func (o *Targets) SetDeviceIds(v []string) {
	o.DeviceIds = &v
}

// GetGroupPaths returns the GroupPaths field value if set, zero value otherwise.
func (o *Targets) GetGroupPaths() []GroupPath {
	if o == nil || o.GroupPaths == nil {
		var ret []GroupPath
		return ret
	}
	return *o.GroupPaths
}

// GetGroupPathsOk returns a tuple with the GroupPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Targets) GetGroupPathsOk() (*[]GroupPath, bool) {
	if o == nil || o.GroupPaths == nil {
		return nil, false
	}
	return o.GroupPaths, true
}

// HasGroupPaths returns a boolean if a field has been set.
func (o *Targets) HasGroupPaths() bool {
	if o != nil && o.GroupPaths != nil {
		return true
	}

	return false
}

// SetGroupPaths gets a reference to the given []GroupPath and assigns it to the GroupPaths field.
func (o *Targets) SetGroupPaths(v []GroupPath) {
	o.GroupPaths = &v
}

func (o Targets) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeviceIds != nil {
		toSerialize["deviceIds"] = o.DeviceIds
	}
	if o.GroupPaths != nil {
		toSerialize["groupPaths"] = o.GroupPaths
	}
	return json.Marshal(toSerialize)
}

type NullableTargets struct {
	value *Targets
	isSet bool
}

func (v NullableTargets) Get() *Targets {
	return v.value
}

func (v *NullableTargets) Set(val *Targets) {
	v.value = val
	v.isSet = true
}

func (v NullableTargets) IsSet() bool {
	return v.isSet
}

func (v *NullableTargets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargets(val *Targets) *NullableTargets {
	return &NullableTargets{value: val, isSet: true}
}

func (v NullableTargets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


