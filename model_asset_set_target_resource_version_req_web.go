/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// AssetSetTargetResourceVersionReqWeb Set Target Resource Version data in Set Request
type AssetSetTargetResourceVersionReqWeb struct {
	// the asset's resource target version. Expected string (max 255 characters)
	TargetVersion string `json:"targetVersion"`
}

// NewAssetSetTargetResourceVersionReqWeb instantiates a new AssetSetTargetResourceVersionReqWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetSetTargetResourceVersionReqWeb(targetVersion string, ) *AssetSetTargetResourceVersionReqWeb {
	this := AssetSetTargetResourceVersionReqWeb{}
	this.TargetVersion = targetVersion
	return &this
}

// NewAssetSetTargetResourceVersionReqWebWithDefaults instantiates a new AssetSetTargetResourceVersionReqWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetSetTargetResourceVersionReqWebWithDefaults() *AssetSetTargetResourceVersionReqWeb {
	this := AssetSetTargetResourceVersionReqWeb{}
	return &this
}

// GetTargetVersion returns the TargetVersion field value
func (o *AssetSetTargetResourceVersionReqWeb) GetTargetVersion() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.TargetVersion
}

// GetTargetVersionOk returns a tuple with the TargetVersion field value
// and a boolean to check if the value has been set.
func (o *AssetSetTargetResourceVersionReqWeb) GetTargetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TargetVersion, true
}

// SetTargetVersion sets field value
func (o *AssetSetTargetResourceVersionReqWeb) SetTargetVersion(v string) {
	o.TargetVersion = v
}

func (o AssetSetTargetResourceVersionReqWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["targetVersion"] = o.TargetVersion
	}
	return json.Marshal(toSerialize)
}

type NullableAssetSetTargetResourceVersionReqWeb struct {
	value *AssetSetTargetResourceVersionReqWeb
	isSet bool
}

func (v NullableAssetSetTargetResourceVersionReqWeb) Get() *AssetSetTargetResourceVersionReqWeb {
	return v.value
}

func (v *NullableAssetSetTargetResourceVersionReqWeb) Set(val *AssetSetTargetResourceVersionReqWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetSetTargetResourceVersionReqWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetSetTargetResourceVersionReqWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetSetTargetResourceVersionReqWeb(val *AssetSetTargetResourceVersionReqWeb) *NullableAssetSetTargetResourceVersionReqWeb {
	return &NullableAssetSetTargetResourceVersionReqWeb{value: val, isSet: true}
}

func (v NullableAssetSetTargetResourceVersionReqWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetSetTargetResourceVersionReqWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


