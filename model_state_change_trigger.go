/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// StateChangeTrigger struct for StateChangeTrigger
type StateChangeTrigger struct {
	Filter *StateChangeFilter `json:"filter,omitempty"`
	// requested object version
	Version int32 `json:"version"`
}

// NewStateChangeTrigger instantiates a new StateChangeTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStateChangeTrigger(version int32, ) *StateChangeTrigger {
	this := StateChangeTrigger{}
	this.Version = version
	return &this
}

// NewStateChangeTriggerWithDefaults instantiates a new StateChangeTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStateChangeTriggerWithDefaults() *StateChangeTrigger {
	this := StateChangeTrigger{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *StateChangeTrigger) GetFilter() StateChangeFilter {
	if o == nil || o.Filter == nil {
		var ret StateChangeFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StateChangeTrigger) GetFilterOk() (*StateChangeFilter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *StateChangeTrigger) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given StateChangeFilter and assigns it to the Filter field.
func (o *StateChangeTrigger) SetFilter(v StateChangeFilter) {
	o.Filter = &v
}

// GetVersion returns the Version field value
func (o *StateChangeTrigger) GetVersion() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *StateChangeTrigger) GetVersionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *StateChangeTrigger) SetVersion(v int32) {
	o.Version = v
}

func (o StateChangeTrigger) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableStateChangeTrigger struct {
	value *StateChangeTrigger
	isSet bool
}

func (v NullableStateChangeTrigger) Get() *StateChangeTrigger {
	return v.value
}

func (v *NullableStateChangeTrigger) Set(val *StateChangeTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableStateChangeTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableStateChangeTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStateChangeTrigger(val *StateChangeTrigger) *NullableStateChangeTrigger {
	return &NullableStateChangeTrigger{value: val, isSet: true}
}

func (v NullableStateChangeTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStateChangeTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


