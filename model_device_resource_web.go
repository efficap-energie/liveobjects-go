/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// DeviceResourceWeb a device resource state
type DeviceResourceWeb struct {
	// metadata associated with this device resource
	Metadata *map[string]string `json:"metadata,omitempty"`
	Reported *DeviceResourceVersionValueWeb `json:"reported,omitempty"`
	Requested *DeviceResourceVersionValueWeb `json:"requested,omitempty"`
}

// NewDeviceResourceWeb instantiates a new DeviceResourceWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceResourceWeb() *DeviceResourceWeb {
	this := DeviceResourceWeb{}
	return &this
}

// NewDeviceResourceWebWithDefaults instantiates a new DeviceResourceWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceResourceWebWithDefaults() *DeviceResourceWeb {
	this := DeviceResourceWeb{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *DeviceResourceWeb) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceResourceWeb) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *DeviceResourceWeb) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *DeviceResourceWeb) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetReported returns the Reported field value if set, zero value otherwise.
func (o *DeviceResourceWeb) GetReported() DeviceResourceVersionValueWeb {
	if o == nil || o.Reported == nil {
		var ret DeviceResourceVersionValueWeb
		return ret
	}
	return *o.Reported
}

// GetReportedOk returns a tuple with the Reported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceResourceWeb) GetReportedOk() (*DeviceResourceVersionValueWeb, bool) {
	if o == nil || o.Reported == nil {
		return nil, false
	}
	return o.Reported, true
}

// HasReported returns a boolean if a field has been set.
func (o *DeviceResourceWeb) HasReported() bool {
	if o != nil && o.Reported != nil {
		return true
	}

	return false
}

// SetReported gets a reference to the given DeviceResourceVersionValueWeb and assigns it to the Reported field.
func (o *DeviceResourceWeb) SetReported(v DeviceResourceVersionValueWeb) {
	o.Reported = &v
}

// GetRequested returns the Requested field value if set, zero value otherwise.
func (o *DeviceResourceWeb) GetRequested() DeviceResourceVersionValueWeb {
	if o == nil || o.Requested == nil {
		var ret DeviceResourceVersionValueWeb
		return ret
	}
	return *o.Requested
}

// GetRequestedOk returns a tuple with the Requested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceResourceWeb) GetRequestedOk() (*DeviceResourceVersionValueWeb, bool) {
	if o == nil || o.Requested == nil {
		return nil, false
	}
	return o.Requested, true
}

// HasRequested returns a boolean if a field has been set.
func (o *DeviceResourceWeb) HasRequested() bool {
	if o != nil && o.Requested != nil {
		return true
	}

	return false
}

// SetRequested gets a reference to the given DeviceResourceVersionValueWeb and assigns it to the Requested field.
func (o *DeviceResourceWeb) SetRequested(v DeviceResourceVersionValueWeb) {
	o.Requested = &v
}

func (o DeviceResourceWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Reported != nil {
		toSerialize["reported"] = o.Reported
	}
	if o.Requested != nil {
		toSerialize["requested"] = o.Requested
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceResourceWeb struct {
	value *DeviceResourceWeb
	isSet bool
}

func (v NullableDeviceResourceWeb) Get() *DeviceResourceWeb {
	return v.value
}

func (v *NullableDeviceResourceWeb) Set(val *DeviceResourceWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceResourceWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceResourceWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceResourceWeb(val *DeviceResourceWeb) *NullableDeviceResourceWeb {
	return &NullableDeviceResourceWeb{value: val, isSet: true}
}

func (v NullableDeviceResourceWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceResourceWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


