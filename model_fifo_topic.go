/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// FifoTopic body of FIFO data
type FifoTopic struct {
	// Number of active consumers
	Consumers *int64 `json:"consumers,omitempty"`
	// Maximum number of bytes that can be stored
	MaxLengthBytes *int64 `json:"maxLengthBytes,omitempty"`
	// Total number of bytes stored
	MessageBytes *int64 `json:"messageBytes,omitempty"`
	// Time in seconds before a message is dropped if not consumed
	MessageTtl *int32 `json:"messageTtl,omitempty"`
	// Total number of bytes of unacknowledged messages
	MessageUnacknowledged *int64 `json:"messageUnacknowledged,omitempty"`
	// Total number of bytes of unacknowledged messages
	MessageUnacknowledgedBytes *int64 `json:"messageUnacknowledgedBytes,omitempty"`
	// Number of message stored
	Messages *int64 `json:"messages,omitempty"`
	// Topic name of the FIFO
	Name string `json:"name"`
}

// NewFifoTopic instantiates a new FifoTopic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFifoTopic(name string, ) *FifoTopic {
	this := FifoTopic{}
	this.Name = name
	return &this
}

// NewFifoTopicWithDefaults instantiates a new FifoTopic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFifoTopicWithDefaults() *FifoTopic {
	this := FifoTopic{}
	return &this
}

// GetConsumers returns the Consumers field value if set, zero value otherwise.
func (o *FifoTopic) GetConsumers() int64 {
	if o == nil || o.Consumers == nil {
		var ret int64
		return ret
	}
	return *o.Consumers
}

// GetConsumersOk returns a tuple with the Consumers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FifoTopic) GetConsumersOk() (*int64, bool) {
	if o == nil || o.Consumers == nil {
		return nil, false
	}
	return o.Consumers, true
}

// HasConsumers returns a boolean if a field has been set.
func (o *FifoTopic) HasConsumers() bool {
	if o != nil && o.Consumers != nil {
		return true
	}

	return false
}

// SetConsumers gets a reference to the given int64 and assigns it to the Consumers field.
func (o *FifoTopic) SetConsumers(v int64) {
	o.Consumers = &v
}

// GetMaxLengthBytes returns the MaxLengthBytes field value if set, zero value otherwise.
func (o *FifoTopic) GetMaxLengthBytes() int64 {
	if o == nil || o.MaxLengthBytes == nil {
		var ret int64
		return ret
	}
	return *o.MaxLengthBytes
}

// GetMaxLengthBytesOk returns a tuple with the MaxLengthBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FifoTopic) GetMaxLengthBytesOk() (*int64, bool) {
	if o == nil || o.MaxLengthBytes == nil {
		return nil, false
	}
	return o.MaxLengthBytes, true
}

// HasMaxLengthBytes returns a boolean if a field has been set.
func (o *FifoTopic) HasMaxLengthBytes() bool {
	if o != nil && o.MaxLengthBytes != nil {
		return true
	}

	return false
}

// SetMaxLengthBytes gets a reference to the given int64 and assigns it to the MaxLengthBytes field.
func (o *FifoTopic) SetMaxLengthBytes(v int64) {
	o.MaxLengthBytes = &v
}

// GetMessageBytes returns the MessageBytes field value if set, zero value otherwise.
func (o *FifoTopic) GetMessageBytes() int64 {
	if o == nil || o.MessageBytes == nil {
		var ret int64
		return ret
	}
	return *o.MessageBytes
}

// GetMessageBytesOk returns a tuple with the MessageBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FifoTopic) GetMessageBytesOk() (*int64, bool) {
	if o == nil || o.MessageBytes == nil {
		return nil, false
	}
	return o.MessageBytes, true
}

// HasMessageBytes returns a boolean if a field has been set.
func (o *FifoTopic) HasMessageBytes() bool {
	if o != nil && o.MessageBytes != nil {
		return true
	}

	return false
}

// SetMessageBytes gets a reference to the given int64 and assigns it to the MessageBytes field.
func (o *FifoTopic) SetMessageBytes(v int64) {
	o.MessageBytes = &v
}

// GetMessageTtl returns the MessageTtl field value if set, zero value otherwise.
func (o *FifoTopic) GetMessageTtl() int32 {
	if o == nil || o.MessageTtl == nil {
		var ret int32
		return ret
	}
	return *o.MessageTtl
}

// GetMessageTtlOk returns a tuple with the MessageTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FifoTopic) GetMessageTtlOk() (*int32, bool) {
	if o == nil || o.MessageTtl == nil {
		return nil, false
	}
	return o.MessageTtl, true
}

// HasMessageTtl returns a boolean if a field has been set.
func (o *FifoTopic) HasMessageTtl() bool {
	if o != nil && o.MessageTtl != nil {
		return true
	}

	return false
}

// SetMessageTtl gets a reference to the given int32 and assigns it to the MessageTtl field.
func (o *FifoTopic) SetMessageTtl(v int32) {
	o.MessageTtl = &v
}

// GetMessageUnacknowledged returns the MessageUnacknowledged field value if set, zero value otherwise.
func (o *FifoTopic) GetMessageUnacknowledged() int64 {
	if o == nil || o.MessageUnacknowledged == nil {
		var ret int64
		return ret
	}
	return *o.MessageUnacknowledged
}

// GetMessageUnacknowledgedOk returns a tuple with the MessageUnacknowledged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FifoTopic) GetMessageUnacknowledgedOk() (*int64, bool) {
	if o == nil || o.MessageUnacknowledged == nil {
		return nil, false
	}
	return o.MessageUnacknowledged, true
}

// HasMessageUnacknowledged returns a boolean if a field has been set.
func (o *FifoTopic) HasMessageUnacknowledged() bool {
	if o != nil && o.MessageUnacknowledged != nil {
		return true
	}

	return false
}

// SetMessageUnacknowledged gets a reference to the given int64 and assigns it to the MessageUnacknowledged field.
func (o *FifoTopic) SetMessageUnacknowledged(v int64) {
	o.MessageUnacknowledged = &v
}

// GetMessageUnacknowledgedBytes returns the MessageUnacknowledgedBytes field value if set, zero value otherwise.
func (o *FifoTopic) GetMessageUnacknowledgedBytes() int64 {
	if o == nil || o.MessageUnacknowledgedBytes == nil {
		var ret int64
		return ret
	}
	return *o.MessageUnacknowledgedBytes
}

// GetMessageUnacknowledgedBytesOk returns a tuple with the MessageUnacknowledgedBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FifoTopic) GetMessageUnacknowledgedBytesOk() (*int64, bool) {
	if o == nil || o.MessageUnacknowledgedBytes == nil {
		return nil, false
	}
	return o.MessageUnacknowledgedBytes, true
}

// HasMessageUnacknowledgedBytes returns a boolean if a field has been set.
func (o *FifoTopic) HasMessageUnacknowledgedBytes() bool {
	if o != nil && o.MessageUnacknowledgedBytes != nil {
		return true
	}

	return false
}

// SetMessageUnacknowledgedBytes gets a reference to the given int64 and assigns it to the MessageUnacknowledgedBytes field.
func (o *FifoTopic) SetMessageUnacknowledgedBytes(v int64) {
	o.MessageUnacknowledgedBytes = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *FifoTopic) GetMessages() int64 {
	if o == nil || o.Messages == nil {
		var ret int64
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FifoTopic) GetMessagesOk() (*int64, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *FifoTopic) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given int64 and assigns it to the Messages field.
func (o *FifoTopic) SetMessages(v int64) {
	o.Messages = &v
}

// GetName returns the Name field value
func (o *FifoTopic) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FifoTopic) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FifoTopic) SetName(v string) {
	o.Name = v
}

func (o FifoTopic) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Consumers != nil {
		toSerialize["consumers"] = o.Consumers
	}
	if o.MaxLengthBytes != nil {
		toSerialize["maxLengthBytes"] = o.MaxLengthBytes
	}
	if o.MessageBytes != nil {
		toSerialize["messageBytes"] = o.MessageBytes
	}
	if o.MessageTtl != nil {
		toSerialize["messageTtl"] = o.MessageTtl
	}
	if o.MessageUnacknowledged != nil {
		toSerialize["messageUnacknowledged"] = o.MessageUnacknowledged
	}
	if o.MessageUnacknowledgedBytes != nil {
		toSerialize["messageUnacknowledgedBytes"] = o.MessageUnacknowledgedBytes
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableFifoTopic struct {
	value *FifoTopic
	isSet bool
}

func (v NullableFifoTopic) Get() *FifoTopic {
	return v.value
}

func (v *NullableFifoTopic) Set(val *FifoTopic) {
	v.value = val
	v.isSet = true
}

func (v NullableFifoTopic) IsSet() bool {
	return v.isSet
}

func (v *NullableFifoTopic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFifoTopic(val *FifoTopic) *NullableFifoTopic {
	return &NullableFifoTopic{value: val, isSet: true}
}

func (v NullableFifoTopic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFifoTopic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


