/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// TenantStatsWeb struct for TenantStatsWeb
type TenantStatsWeb struct {
	Properties *map[string]string `json:"properties,omitempty"`
	// all statistics per day
	StatisticsPerDay *map[string]map[string]ConnectorStatistics `json:"statisticsPerDay,omitempty"`
	// Statistics per month : number of distinct sources (lora, mqtt, datazone)
	StatisticsPerMonth *map[string]map[string]ConnectorStatistics `json:"statisticsPerMonth,omitempty"`
	// The tenant Id
	TenantId *string `json:"tenantId,omitempty"`
	// The tenant name
	TenantName *string `json:"tenantName,omitempty"`
	// Aggregation of all statistics
	Total *map[string]ConnectorStatistics `json:"total,omitempty"`
}

// NewTenantStatsWeb instantiates a new TenantStatsWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantStatsWeb() *TenantStatsWeb {
	this := TenantStatsWeb{}
	return &this
}

// NewTenantStatsWebWithDefaults instantiates a new TenantStatsWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantStatsWebWithDefaults() *TenantStatsWeb {
	this := TenantStatsWeb{}
	return &this
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *TenantStatsWeb) GetProperties() map[string]string {
	if o == nil || o.Properties == nil {
		var ret map[string]string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatsWeb) GetPropertiesOk() (*map[string]string, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *TenantStatsWeb) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]string and assigns it to the Properties field.
func (o *TenantStatsWeb) SetProperties(v map[string]string) {
	o.Properties = &v
}

// GetStatisticsPerDay returns the StatisticsPerDay field value if set, zero value otherwise.
func (o *TenantStatsWeb) GetStatisticsPerDay() map[string]map[string]ConnectorStatistics {
	if o == nil || o.StatisticsPerDay == nil {
		var ret map[string]map[string]ConnectorStatistics
		return ret
	}
	return *o.StatisticsPerDay
}

// GetStatisticsPerDayOk returns a tuple with the StatisticsPerDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatsWeb) GetStatisticsPerDayOk() (*map[string]map[string]ConnectorStatistics, bool) {
	if o == nil || o.StatisticsPerDay == nil {
		return nil, false
	}
	return o.StatisticsPerDay, true
}

// HasStatisticsPerDay returns a boolean if a field has been set.
func (o *TenantStatsWeb) HasStatisticsPerDay() bool {
	if o != nil && o.StatisticsPerDay != nil {
		return true
	}

	return false
}

// SetStatisticsPerDay gets a reference to the given map[string]map[string]ConnectorStatistics and assigns it to the StatisticsPerDay field.
func (o *TenantStatsWeb) SetStatisticsPerDay(v map[string]map[string]ConnectorStatistics) {
	o.StatisticsPerDay = &v
}

// GetStatisticsPerMonth returns the StatisticsPerMonth field value if set, zero value otherwise.
func (o *TenantStatsWeb) GetStatisticsPerMonth() map[string]map[string]ConnectorStatistics {
	if o == nil || o.StatisticsPerMonth == nil {
		var ret map[string]map[string]ConnectorStatistics
		return ret
	}
	return *o.StatisticsPerMonth
}

// GetStatisticsPerMonthOk returns a tuple with the StatisticsPerMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatsWeb) GetStatisticsPerMonthOk() (*map[string]map[string]ConnectorStatistics, bool) {
	if o == nil || o.StatisticsPerMonth == nil {
		return nil, false
	}
	return o.StatisticsPerMonth, true
}

// HasStatisticsPerMonth returns a boolean if a field has been set.
func (o *TenantStatsWeb) HasStatisticsPerMonth() bool {
	if o != nil && o.StatisticsPerMonth != nil {
		return true
	}

	return false
}

// SetStatisticsPerMonth gets a reference to the given map[string]map[string]ConnectorStatistics and assigns it to the StatisticsPerMonth field.
func (o *TenantStatsWeb) SetStatisticsPerMonth(v map[string]map[string]ConnectorStatistics) {
	o.StatisticsPerMonth = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *TenantStatsWeb) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatsWeb) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *TenantStatsWeb) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *TenantStatsWeb) SetTenantId(v string) {
	o.TenantId = &v
}

// GetTenantName returns the TenantName field value if set, zero value otherwise.
func (o *TenantStatsWeb) GetTenantName() string {
	if o == nil || o.TenantName == nil {
		var ret string
		return ret
	}
	return *o.TenantName
}

// GetTenantNameOk returns a tuple with the TenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatsWeb) GetTenantNameOk() (*string, bool) {
	if o == nil || o.TenantName == nil {
		return nil, false
	}
	return o.TenantName, true
}

// HasTenantName returns a boolean if a field has been set.
func (o *TenantStatsWeb) HasTenantName() bool {
	if o != nil && o.TenantName != nil {
		return true
	}

	return false
}

// SetTenantName gets a reference to the given string and assigns it to the TenantName field.
func (o *TenantStatsWeb) SetTenantName(v string) {
	o.TenantName = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *TenantStatsWeb) GetTotal() map[string]ConnectorStatistics {
	if o == nil || o.Total == nil {
		var ret map[string]ConnectorStatistics
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantStatsWeb) GetTotalOk() (*map[string]ConnectorStatistics, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *TenantStatsWeb) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given map[string]ConnectorStatistics and assigns it to the Total field.
func (o *TenantStatsWeb) SetTotal(v map[string]ConnectorStatistics) {
	o.Total = &v
}

func (o TenantStatsWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.StatisticsPerDay != nil {
		toSerialize["statisticsPerDay"] = o.StatisticsPerDay
	}
	if o.StatisticsPerMonth != nil {
		toSerialize["statisticsPerMonth"] = o.StatisticsPerMonth
	}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	if o.TenantName != nil {
		toSerialize["tenantName"] = o.TenantName
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableTenantStatsWeb struct {
	value *TenantStatsWeb
	isSet bool
}

func (v NullableTenantStatsWeb) Get() *TenantStatsWeb {
	return v.value
}

func (v *NullableTenantStatsWeb) Set(val *TenantStatsWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantStatsWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantStatsWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantStatsWeb(val *TenantStatsWeb) *NullableTenantStatsWeb {
	return &NullableTenantStatsWeb{value: val, isSet: true}
}

func (v NullableTenantStatsWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantStatsWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


