/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// LoraNetworkFilter struct for LoraNetworkFilter
type LoraNetworkFilter struct {
	// list of filtered all messageTypes. Null or empty to accept all message types
	MessageTypes *[]string `json:"messageTypes,omitempty"`
}

// NewLoraNetworkFilter instantiates a new LoraNetworkFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoraNetworkFilter() *LoraNetworkFilter {
	this := LoraNetworkFilter{}
	return &this
}

// NewLoraNetworkFilterWithDefaults instantiates a new LoraNetworkFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoraNetworkFilterWithDefaults() *LoraNetworkFilter {
	this := LoraNetworkFilter{}
	return &this
}

// GetMessageTypes returns the MessageTypes field value if set, zero value otherwise.
func (o *LoraNetworkFilter) GetMessageTypes() []string {
	if o == nil || o.MessageTypes == nil {
		var ret []string
		return ret
	}
	return *o.MessageTypes
}

// GetMessageTypesOk returns a tuple with the MessageTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraNetworkFilter) GetMessageTypesOk() (*[]string, bool) {
	if o == nil || o.MessageTypes == nil {
		return nil, false
	}
	return o.MessageTypes, true
}

// HasMessageTypes returns a boolean if a field has been set.
func (o *LoraNetworkFilter) HasMessageTypes() bool {
	if o != nil && o.MessageTypes != nil {
		return true
	}

	return false
}

// SetMessageTypes gets a reference to the given []string and assigns it to the MessageTypes field.
func (o *LoraNetworkFilter) SetMessageTypes(v []string) {
	o.MessageTypes = &v
}

func (o LoraNetworkFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MessageTypes != nil {
		toSerialize["messageTypes"] = o.MessageTypes
	}
	return json.Marshal(toSerialize)
}

type NullableLoraNetworkFilter struct {
	value *LoraNetworkFilter
	isSet bool
}

func (v NullableLoraNetworkFilter) Get() *LoraNetworkFilter {
	return v.value
}

func (v *NullableLoraNetworkFilter) Set(val *LoraNetworkFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableLoraNetworkFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableLoraNetworkFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoraNetworkFilter(val *LoraNetworkFilter) *NullableLoraNetworkFilter {
	return &NullableLoraNetworkFilter{value: val, isSet: true}
}

func (v NullableLoraNetworkFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoraNetworkFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


