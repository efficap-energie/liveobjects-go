/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// GroupPath defines targeted group path
type GroupPath struct {
	// if true, all sub-paths will be targeted by this ActivityRule 
	IncludeSubPath bool `json:"includeSubPath"`
	// path of the group
	Path string `json:"path"`
}

// NewGroupPath instantiates a new GroupPath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupPath(includeSubPath bool, path string, ) *GroupPath {
	this := GroupPath{}
	this.IncludeSubPath = includeSubPath
	this.Path = path
	return &this
}

// NewGroupPathWithDefaults instantiates a new GroupPath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupPathWithDefaults() *GroupPath {
	this := GroupPath{}
	return &this
}

// GetIncludeSubPath returns the IncludeSubPath field value
func (o *GroupPath) GetIncludeSubPath() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.IncludeSubPath
}

// GetIncludeSubPathOk returns a tuple with the IncludeSubPath field value
// and a boolean to check if the value has been set.
func (o *GroupPath) GetIncludeSubPathOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IncludeSubPath, true
}

// SetIncludeSubPath sets field value
func (o *GroupPath) SetIncludeSubPath(v bool) {
	o.IncludeSubPath = v
}

// GetPath returns the Path field value
func (o *GroupPath) GetPath() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *GroupPath) GetPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *GroupPath) SetPath(v string) {
	o.Path = v
}

func (o GroupPath) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["includeSubPath"] = o.IncludeSubPath
	}
	if true {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableGroupPath struct {
	value *GroupPath
	isSet bool
}

func (v NullableGroupPath) Get() *GroupPath {
	return v.value
}

func (v *NullableGroupPath) Set(val *GroupPath) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupPath) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupPath(val *GroupPath) *NullableGroupPath {
	return &NullableGroupPath{value: val, isSet: true}
}

func (v NullableGroupPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


