/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// AssetResourceWeb Resource data associated to an Asset
type AssetResourceWeb struct {
	// the asset id
	AssetId *string `json:"assetId,omitempty"`
	// the asset namespace
	AssetIdNamespace *string `json:"assetIdNamespace,omitempty"`
	// the connector metadata
	ConnectorMetadata *map[string]string `json:"connectorMetadata,omitempty"`
	// the current resource version
	CurrentVersion *string `json:"currentVersion,omitempty"`
	// the current resource version timestamp
	CurrentVersionChangeTs *int64 `json:"currentVersionChangeTs,omitempty"`
	// the current resource version timestamp
	CurrentVersionTs *int64 `json:"currentVersionTs,omitempty"`
	// the resource's identifier
	ResourceId *string `json:"resourceId,omitempty"`
	// the target resource version timestamp
	TargetVersion *string `json:"targetVersion,omitempty"`
	// the target resource version timestamp
	TargetVersionTs *int64 `json:"targetVersionTs,omitempty"`
	// identifier of tenant account
	TenantId *string `json:"tenantId,omitempty"`
}

// NewAssetResourceWeb instantiates a new AssetResourceWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetResourceWeb() *AssetResourceWeb {
	this := AssetResourceWeb{}
	return &this
}

// NewAssetResourceWebWithDefaults instantiates a new AssetResourceWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetResourceWebWithDefaults() *AssetResourceWeb {
	this := AssetResourceWeb{}
	return &this
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *AssetResourceWeb) GetAssetId() string {
	if o == nil || o.AssetId == nil {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetResourceWeb) GetAssetIdOk() (*string, bool) {
	if o == nil || o.AssetId == nil {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *AssetResourceWeb) HasAssetId() bool {
	if o != nil && o.AssetId != nil {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *AssetResourceWeb) SetAssetId(v string) {
	o.AssetId = &v
}

// GetAssetIdNamespace returns the AssetIdNamespace field value if set, zero value otherwise.
func (o *AssetResourceWeb) GetAssetIdNamespace() string {
	if o == nil || o.AssetIdNamespace == nil {
		var ret string
		return ret
	}
	return *o.AssetIdNamespace
}

// GetAssetIdNamespaceOk returns a tuple with the AssetIdNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetResourceWeb) GetAssetIdNamespaceOk() (*string, bool) {
	if o == nil || o.AssetIdNamespace == nil {
		return nil, false
	}
	return o.AssetIdNamespace, true
}

// HasAssetIdNamespace returns a boolean if a field has been set.
func (o *AssetResourceWeb) HasAssetIdNamespace() bool {
	if o != nil && o.AssetIdNamespace != nil {
		return true
	}

	return false
}

// SetAssetIdNamespace gets a reference to the given string and assigns it to the AssetIdNamespace field.
func (o *AssetResourceWeb) SetAssetIdNamespace(v string) {
	o.AssetIdNamespace = &v
}

// GetConnectorMetadata returns the ConnectorMetadata field value if set, zero value otherwise.
func (o *AssetResourceWeb) GetConnectorMetadata() map[string]string {
	if o == nil || o.ConnectorMetadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.ConnectorMetadata
}

// GetConnectorMetadataOk returns a tuple with the ConnectorMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetResourceWeb) GetConnectorMetadataOk() (*map[string]string, bool) {
	if o == nil || o.ConnectorMetadata == nil {
		return nil, false
	}
	return o.ConnectorMetadata, true
}

// HasConnectorMetadata returns a boolean if a field has been set.
func (o *AssetResourceWeb) HasConnectorMetadata() bool {
	if o != nil && o.ConnectorMetadata != nil {
		return true
	}

	return false
}

// SetConnectorMetadata gets a reference to the given map[string]string and assigns it to the ConnectorMetadata field.
func (o *AssetResourceWeb) SetConnectorMetadata(v map[string]string) {
	o.ConnectorMetadata = &v
}

// GetCurrentVersion returns the CurrentVersion field value if set, zero value otherwise.
func (o *AssetResourceWeb) GetCurrentVersion() string {
	if o == nil || o.CurrentVersion == nil {
		var ret string
		return ret
	}
	return *o.CurrentVersion
}

// GetCurrentVersionOk returns a tuple with the CurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetResourceWeb) GetCurrentVersionOk() (*string, bool) {
	if o == nil || o.CurrentVersion == nil {
		return nil, false
	}
	return o.CurrentVersion, true
}

// HasCurrentVersion returns a boolean if a field has been set.
func (o *AssetResourceWeb) HasCurrentVersion() bool {
	if o != nil && o.CurrentVersion != nil {
		return true
	}

	return false
}

// SetCurrentVersion gets a reference to the given string and assigns it to the CurrentVersion field.
func (o *AssetResourceWeb) SetCurrentVersion(v string) {
	o.CurrentVersion = &v
}

// GetCurrentVersionChangeTs returns the CurrentVersionChangeTs field value if set, zero value otherwise.
func (o *AssetResourceWeb) GetCurrentVersionChangeTs() int64 {
	if o == nil || o.CurrentVersionChangeTs == nil {
		var ret int64
		return ret
	}
	return *o.CurrentVersionChangeTs
}

// GetCurrentVersionChangeTsOk returns a tuple with the CurrentVersionChangeTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetResourceWeb) GetCurrentVersionChangeTsOk() (*int64, bool) {
	if o == nil || o.CurrentVersionChangeTs == nil {
		return nil, false
	}
	return o.CurrentVersionChangeTs, true
}

// HasCurrentVersionChangeTs returns a boolean if a field has been set.
func (o *AssetResourceWeb) HasCurrentVersionChangeTs() bool {
	if o != nil && o.CurrentVersionChangeTs != nil {
		return true
	}

	return false
}

// SetCurrentVersionChangeTs gets a reference to the given int64 and assigns it to the CurrentVersionChangeTs field.
func (o *AssetResourceWeb) SetCurrentVersionChangeTs(v int64) {
	o.CurrentVersionChangeTs = &v
}

// GetCurrentVersionTs returns the CurrentVersionTs field value if set, zero value otherwise.
func (o *AssetResourceWeb) GetCurrentVersionTs() int64 {
	if o == nil || o.CurrentVersionTs == nil {
		var ret int64
		return ret
	}
	return *o.CurrentVersionTs
}

// GetCurrentVersionTsOk returns a tuple with the CurrentVersionTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetResourceWeb) GetCurrentVersionTsOk() (*int64, bool) {
	if o == nil || o.CurrentVersionTs == nil {
		return nil, false
	}
	return o.CurrentVersionTs, true
}

// HasCurrentVersionTs returns a boolean if a field has been set.
func (o *AssetResourceWeb) HasCurrentVersionTs() bool {
	if o != nil && o.CurrentVersionTs != nil {
		return true
	}

	return false
}

// SetCurrentVersionTs gets a reference to the given int64 and assigns it to the CurrentVersionTs field.
func (o *AssetResourceWeb) SetCurrentVersionTs(v int64) {
	o.CurrentVersionTs = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *AssetResourceWeb) GetResourceId() string {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetResourceWeb) GetResourceIdOk() (*string, bool) {
	if o == nil || o.ResourceId == nil {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *AssetResourceWeb) HasResourceId() bool {
	if o != nil && o.ResourceId != nil {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *AssetResourceWeb) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetTargetVersion returns the TargetVersion field value if set, zero value otherwise.
func (o *AssetResourceWeb) GetTargetVersion() string {
	if o == nil || o.TargetVersion == nil {
		var ret string
		return ret
	}
	return *o.TargetVersion
}

// GetTargetVersionOk returns a tuple with the TargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetResourceWeb) GetTargetVersionOk() (*string, bool) {
	if o == nil || o.TargetVersion == nil {
		return nil, false
	}
	return o.TargetVersion, true
}

// HasTargetVersion returns a boolean if a field has been set.
func (o *AssetResourceWeb) HasTargetVersion() bool {
	if o != nil && o.TargetVersion != nil {
		return true
	}

	return false
}

// SetTargetVersion gets a reference to the given string and assigns it to the TargetVersion field.
func (o *AssetResourceWeb) SetTargetVersion(v string) {
	o.TargetVersion = &v
}

// GetTargetVersionTs returns the TargetVersionTs field value if set, zero value otherwise.
func (o *AssetResourceWeb) GetTargetVersionTs() int64 {
	if o == nil || o.TargetVersionTs == nil {
		var ret int64
		return ret
	}
	return *o.TargetVersionTs
}

// GetTargetVersionTsOk returns a tuple with the TargetVersionTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetResourceWeb) GetTargetVersionTsOk() (*int64, bool) {
	if o == nil || o.TargetVersionTs == nil {
		return nil, false
	}
	return o.TargetVersionTs, true
}

// HasTargetVersionTs returns a boolean if a field has been set.
func (o *AssetResourceWeb) HasTargetVersionTs() bool {
	if o != nil && o.TargetVersionTs != nil {
		return true
	}

	return false
}

// SetTargetVersionTs gets a reference to the given int64 and assigns it to the TargetVersionTs field.
func (o *AssetResourceWeb) SetTargetVersionTs(v int64) {
	o.TargetVersionTs = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *AssetResourceWeb) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetResourceWeb) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *AssetResourceWeb) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *AssetResourceWeb) SetTenantId(v string) {
	o.TenantId = &v
}

func (o AssetResourceWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssetId != nil {
		toSerialize["assetId"] = o.AssetId
	}
	if o.AssetIdNamespace != nil {
		toSerialize["assetIdNamespace"] = o.AssetIdNamespace
	}
	if o.ConnectorMetadata != nil {
		toSerialize["connectorMetadata"] = o.ConnectorMetadata
	}
	if o.CurrentVersion != nil {
		toSerialize["currentVersion"] = o.CurrentVersion
	}
	if o.CurrentVersionChangeTs != nil {
		toSerialize["currentVersionChangeTs"] = o.CurrentVersionChangeTs
	}
	if o.CurrentVersionTs != nil {
		toSerialize["currentVersionTs"] = o.CurrentVersionTs
	}
	if o.ResourceId != nil {
		toSerialize["resourceId"] = o.ResourceId
	}
	if o.TargetVersion != nil {
		toSerialize["targetVersion"] = o.TargetVersion
	}
	if o.TargetVersionTs != nil {
		toSerialize["targetVersionTs"] = o.TargetVersionTs
	}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	return json.Marshal(toSerialize)
}

type NullableAssetResourceWeb struct {
	value *AssetResourceWeb
	isSet bool
}

func (v NullableAssetResourceWeb) Get() *AssetResourceWeb {
	return v.value
}

func (v *NullableAssetResourceWeb) Set(val *AssetResourceWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetResourceWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetResourceWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetResourceWeb(val *AssetResourceWeb) *NullableAssetResourceWeb {
	return &NullableAssetResourceWeb{value: val, isSet: true}
}

func (v NullableAssetResourceWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetResourceWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


