/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// HttpPushTestResult struct for HttpPushTestResult
type HttpPushTestResult struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	HttpResponseBody *string `json:"httpResponseBody,omitempty"`
	HttpResponseStatusCode *int32 `json:"httpResponseStatusCode,omitempty"`
	Success *bool `json:"success,omitempty"`
	UrlBlacklisted *bool `json:"urlBlacklisted,omitempty"`
}

// NewHttpPushTestResult instantiates a new HttpPushTestResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpPushTestResult() *HttpPushTestResult {
	this := HttpPushTestResult{}
	return &this
}

// NewHttpPushTestResultWithDefaults instantiates a new HttpPushTestResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpPushTestResultWithDefaults() *HttpPushTestResult {
	this := HttpPushTestResult{}
	return &this
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *HttpPushTestResult) GetErrorMessage() string {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpPushTestResult) GetErrorMessageOk() (*string, bool) {
	if o == nil || o.ErrorMessage == nil {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *HttpPushTestResult) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *HttpPushTestResult) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetHttpResponseBody returns the HttpResponseBody field value if set, zero value otherwise.
func (o *HttpPushTestResult) GetHttpResponseBody() string {
	if o == nil || o.HttpResponseBody == nil {
		var ret string
		return ret
	}
	return *o.HttpResponseBody
}

// GetHttpResponseBodyOk returns a tuple with the HttpResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpPushTestResult) GetHttpResponseBodyOk() (*string, bool) {
	if o == nil || o.HttpResponseBody == nil {
		return nil, false
	}
	return o.HttpResponseBody, true
}

// HasHttpResponseBody returns a boolean if a field has been set.
func (o *HttpPushTestResult) HasHttpResponseBody() bool {
	if o != nil && o.HttpResponseBody != nil {
		return true
	}

	return false
}

// SetHttpResponseBody gets a reference to the given string and assigns it to the HttpResponseBody field.
func (o *HttpPushTestResult) SetHttpResponseBody(v string) {
	o.HttpResponseBody = &v
}

// GetHttpResponseStatusCode returns the HttpResponseStatusCode field value if set, zero value otherwise.
func (o *HttpPushTestResult) GetHttpResponseStatusCode() int32 {
	if o == nil || o.HttpResponseStatusCode == nil {
		var ret int32
		return ret
	}
	return *o.HttpResponseStatusCode
}

// GetHttpResponseStatusCodeOk returns a tuple with the HttpResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpPushTestResult) GetHttpResponseStatusCodeOk() (*int32, bool) {
	if o == nil || o.HttpResponseStatusCode == nil {
		return nil, false
	}
	return o.HttpResponseStatusCode, true
}

// HasHttpResponseStatusCode returns a boolean if a field has been set.
func (o *HttpPushTestResult) HasHttpResponseStatusCode() bool {
	if o != nil && o.HttpResponseStatusCode != nil {
		return true
	}

	return false
}

// SetHttpResponseStatusCode gets a reference to the given int32 and assigns it to the HttpResponseStatusCode field.
func (o *HttpPushTestResult) SetHttpResponseStatusCode(v int32) {
	o.HttpResponseStatusCode = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *HttpPushTestResult) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpPushTestResult) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *HttpPushTestResult) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *HttpPushTestResult) SetSuccess(v bool) {
	o.Success = &v
}

// GetUrlBlacklisted returns the UrlBlacklisted field value if set, zero value otherwise.
func (o *HttpPushTestResult) GetUrlBlacklisted() bool {
	if o == nil || o.UrlBlacklisted == nil {
		var ret bool
		return ret
	}
	return *o.UrlBlacklisted
}

// GetUrlBlacklistedOk returns a tuple with the UrlBlacklisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpPushTestResult) GetUrlBlacklistedOk() (*bool, bool) {
	if o == nil || o.UrlBlacklisted == nil {
		return nil, false
	}
	return o.UrlBlacklisted, true
}

// HasUrlBlacklisted returns a boolean if a field has been set.
func (o *HttpPushTestResult) HasUrlBlacklisted() bool {
	if o != nil && o.UrlBlacklisted != nil {
		return true
	}

	return false
}

// SetUrlBlacklisted gets a reference to the given bool and assigns it to the UrlBlacklisted field.
func (o *HttpPushTestResult) SetUrlBlacklisted(v bool) {
	o.UrlBlacklisted = &v
}

func (o HttpPushTestResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ErrorMessage != nil {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if o.HttpResponseBody != nil {
		toSerialize["httpResponseBody"] = o.HttpResponseBody
	}
	if o.HttpResponseStatusCode != nil {
		toSerialize["httpResponseStatusCode"] = o.HttpResponseStatusCode
	}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	if o.UrlBlacklisted != nil {
		toSerialize["urlBlacklisted"] = o.UrlBlacklisted
	}
	return json.Marshal(toSerialize)
}

type NullableHttpPushTestResult struct {
	value *HttpPushTestResult
	isSet bool
}

func (v NullableHttpPushTestResult) Get() *HttpPushTestResult {
	return v.value
}

func (v *NullableHttpPushTestResult) Set(val *HttpPushTestResult) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpPushTestResult) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpPushTestResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpPushTestResult(val *HttpPushTestResult) *NullableHttpPushTestResult {
	return &NullableHttpPushTestResult{value: val, isSet: true}
}

func (v NullableHttpPushTestResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpPushTestResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


