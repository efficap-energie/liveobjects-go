/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// CaCertificateCreateReqWeb struct for CaCertificateCreateReqWeb
type CaCertificateCreateReqWeb struct {
	// PEM X.509 public certificate
	Certificate string `json:"certificate"`
	// Certificate description.
	Comment string `json:"comment"`
}

// NewCaCertificateCreateReqWeb instantiates a new CaCertificateCreateReqWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaCertificateCreateReqWeb(certificate string, comment string, ) *CaCertificateCreateReqWeb {
	this := CaCertificateCreateReqWeb{}
	this.Certificate = certificate
	this.Comment = comment
	return &this
}

// NewCaCertificateCreateReqWebWithDefaults instantiates a new CaCertificateCreateReqWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaCertificateCreateReqWebWithDefaults() *CaCertificateCreateReqWeb {
	this := CaCertificateCreateReqWeb{}
	return &this
}

// GetCertificate returns the Certificate field value
func (o *CaCertificateCreateReqWeb) GetCertificate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value
// and a boolean to check if the value has been set.
func (o *CaCertificateCreateReqWeb) GetCertificateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Certificate, true
}

// SetCertificate sets field value
func (o *CaCertificateCreateReqWeb) SetCertificate(v string) {
	o.Certificate = v
}

// GetComment returns the Comment field value
func (o *CaCertificateCreateReqWeb) GetComment() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Comment
}

// GetCommentOk returns a tuple with the Comment field value
// and a boolean to check if the value has been set.
func (o *CaCertificateCreateReqWeb) GetCommentOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Comment, true
}

// SetComment sets field value
func (o *CaCertificateCreateReqWeb) SetComment(v string) {
	o.Comment = v
}

func (o CaCertificateCreateReqWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["certificate"] = o.Certificate
	}
	if true {
		toSerialize["comment"] = o.Comment
	}
	return json.Marshal(toSerialize)
}

type NullableCaCertificateCreateReqWeb struct {
	value *CaCertificateCreateReqWeb
	isSet bool
}

func (v NullableCaCertificateCreateReqWeb) Get() *CaCertificateCreateReqWeb {
	return v.value
}

func (v *NullableCaCertificateCreateReqWeb) Set(val *CaCertificateCreateReqWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableCaCertificateCreateReqWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableCaCertificateCreateReqWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaCertificateCreateReqWeb(val *CaCertificateCreateReqWeb) *NullableCaCertificateCreateReqWeb {
	return &NullableCaCertificateCreateReqWeb{value: val, isSet: true}
}

func (v NullableCaCertificateCreateReqWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaCertificateCreateReqWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


