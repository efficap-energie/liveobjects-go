/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// ResourceAddReqWeb body of add resource request
type ResourceAddReqWeb struct {
	// the resource's connector. A connector must respect the following regular expression <code>([\\w\\-_]{1,128})</code> (max 128 characters)
	Connector string `json:"connector"`
	// the resource's description. Expected string (max 255 characters)
	Description *string `json:"description,omitempty"`
	// the resource's label. Expected string (max 255 characters)
	Label string `json:"label"`
	// the resource metadata. Max number of metadata is 100. Metadata name max length is 255. Metadata value max length is 255.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// the resource's id. Expected string (max 255 characters)
	ResourceId string `json:"resourceId"`
}

// NewResourceAddReqWeb instantiates a new ResourceAddReqWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceAddReqWeb(connector string, label string, resourceId string, ) *ResourceAddReqWeb {
	this := ResourceAddReqWeb{}
	this.Connector = connector
	this.Label = label
	this.ResourceId = resourceId
	return &this
}

// NewResourceAddReqWebWithDefaults instantiates a new ResourceAddReqWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceAddReqWebWithDefaults() *ResourceAddReqWeb {
	this := ResourceAddReqWeb{}
	return &this
}

// GetConnector returns the Connector field value
func (o *ResourceAddReqWeb) GetConnector() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Connector
}

// GetConnectorOk returns a tuple with the Connector field value
// and a boolean to check if the value has been set.
func (o *ResourceAddReqWeb) GetConnectorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Connector, true
}

// SetConnector sets field value
func (o *ResourceAddReqWeb) SetConnector(v string) {
	o.Connector = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceAddReqWeb) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceAddReqWeb) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceAddReqWeb) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceAddReqWeb) SetDescription(v string) {
	o.Description = &v
}

// GetLabel returns the Label field value
func (o *ResourceAddReqWeb) GetLabel() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *ResourceAddReqWeb) GetLabelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *ResourceAddReqWeb) SetLabel(v string) {
	o.Label = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ResourceAddReqWeb) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceAddReqWeb) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ResourceAddReqWeb) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *ResourceAddReqWeb) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetResourceId returns the ResourceId field value
func (o *ResourceAddReqWeb) GetResourceId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *ResourceAddReqWeb) GetResourceIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *ResourceAddReqWeb) SetResourceId(v string) {
	o.ResourceId = v
}

func (o ResourceAddReqWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connector"] = o.Connector
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["resourceId"] = o.ResourceId
	}
	return json.Marshal(toSerialize)
}

type NullableResourceAddReqWeb struct {
	value *ResourceAddReqWeb
	isSet bool
}

func (v NullableResourceAddReqWeb) Get() *ResourceAddReqWeb {
	return v.value
}

func (v *NullableResourceAddReqWeb) Set(val *ResourceAddReqWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceAddReqWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceAddReqWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceAddReqWeb(val *ResourceAddReqWeb) *NullableResourceAddReqWeb {
	return &NullableResourceAddReqWeb{value: val, isSet: true}
}

func (v NullableResourceAddReqWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceAddReqWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


