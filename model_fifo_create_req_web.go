/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// FifoCreateReqWeb  Fifo Topic data in Create Request
type FifoCreateReqWeb struct {
	// Maximum number of bytes that can be stored (0 means no storage, else min value is 524288 and max value depends of your account settings)
	MaxLengthBytes int64 `json:"maxLengthBytes"`
	// Time in seconds before messages are dropped if they are not consumed
	MessageTtl *int32 `json:"messageTtl,omitempty"`
	// Topic name of the FIFO. Fifo name must respect the following regular expression <code>[A-Za-z\\d-_~]+</code> (max 255 characters)
	Name string `json:"name"`
}

// NewFifoCreateReqWeb instantiates a new FifoCreateReqWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFifoCreateReqWeb(maxLengthBytes int64, name string, ) *FifoCreateReqWeb {
	this := FifoCreateReqWeb{}
	this.MaxLengthBytes = maxLengthBytes
	this.Name = name
	return &this
}

// NewFifoCreateReqWebWithDefaults instantiates a new FifoCreateReqWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFifoCreateReqWebWithDefaults() *FifoCreateReqWeb {
	this := FifoCreateReqWeb{}
	return &this
}

// GetMaxLengthBytes returns the MaxLengthBytes field value
func (o *FifoCreateReqWeb) GetMaxLengthBytes() int64 {
	if o == nil  {
		var ret int64
		return ret
	}

	return o.MaxLengthBytes
}

// GetMaxLengthBytesOk returns a tuple with the MaxLengthBytes field value
// and a boolean to check if the value has been set.
func (o *FifoCreateReqWeb) GetMaxLengthBytesOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxLengthBytes, true
}

// SetMaxLengthBytes sets field value
func (o *FifoCreateReqWeb) SetMaxLengthBytes(v int64) {
	o.MaxLengthBytes = v
}

// GetMessageTtl returns the MessageTtl field value if set, zero value otherwise.
func (o *FifoCreateReqWeb) GetMessageTtl() int32 {
	if o == nil || o.MessageTtl == nil {
		var ret int32
		return ret
	}
	return *o.MessageTtl
}

// GetMessageTtlOk returns a tuple with the MessageTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FifoCreateReqWeb) GetMessageTtlOk() (*int32, bool) {
	if o == nil || o.MessageTtl == nil {
		return nil, false
	}
	return o.MessageTtl, true
}

// HasMessageTtl returns a boolean if a field has been set.
func (o *FifoCreateReqWeb) HasMessageTtl() bool {
	if o != nil && o.MessageTtl != nil {
		return true
	}

	return false
}

// SetMessageTtl gets a reference to the given int32 and assigns it to the MessageTtl field.
func (o *FifoCreateReqWeb) SetMessageTtl(v int32) {
	o.MessageTtl = &v
}

// GetName returns the Name field value
func (o *FifoCreateReqWeb) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FifoCreateReqWeb) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FifoCreateReqWeb) SetName(v string) {
	o.Name = v
}

func (o FifoCreateReqWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["maxLengthBytes"] = o.MaxLengthBytes
	}
	if o.MessageTtl != nil {
		toSerialize["messageTtl"] = o.MessageTtl
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableFifoCreateReqWeb struct {
	value *FifoCreateReqWeb
	isSet bool
}

func (v NullableFifoCreateReqWeb) Get() *FifoCreateReqWeb {
	return v.value
}

func (v *NullableFifoCreateReqWeb) Set(val *FifoCreateReqWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableFifoCreateReqWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableFifoCreateReqWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFifoCreateReqWeb(val *FifoCreateReqWeb) *NullableFifoCreateReqWeb {
	return &NullableFifoCreateReqWeb{value: val, isSet: true}
}

func (v NullableFifoCreateReqWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFifoCreateReqWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


