/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// LoraCommandWeb struct for LoraCommandWeb
type LoraCommandWeb struct {
	// Network ack confirmation
	Confirmed bool `json:"confirmed"`
	// Hexadecimal raw data of the command
	Data string `json:"data"`
	// Port of the device on which the command was sent (cf. LoRaWan)
	Port int32 `json:"port"`
}

// NewLoraCommandWeb instantiates a new LoraCommandWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoraCommandWeb(confirmed bool, data string, port int32, ) *LoraCommandWeb {
	this := LoraCommandWeb{}
	this.Confirmed = confirmed
	this.Data = data
	this.Port = port
	return &this
}

// NewLoraCommandWebWithDefaults instantiates a new LoraCommandWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoraCommandWebWithDefaults() *LoraCommandWeb {
	this := LoraCommandWeb{}
	return &this
}

// GetConfirmed returns the Confirmed field value
func (o *LoraCommandWeb) GetConfirmed() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Confirmed
}

// GetConfirmedOk returns a tuple with the Confirmed field value
// and a boolean to check if the value has been set.
func (o *LoraCommandWeb) GetConfirmedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Confirmed, true
}

// SetConfirmed sets field value
func (o *LoraCommandWeb) SetConfirmed(v bool) {
	o.Confirmed = v
}

// GetData returns the Data field value
func (o *LoraCommandWeb) GetData() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *LoraCommandWeb) GetDataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *LoraCommandWeb) SetData(v string) {
	o.Data = v
}

// GetPort returns the Port field value
func (o *LoraCommandWeb) GetPort() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *LoraCommandWeb) GetPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *LoraCommandWeb) SetPort(v int32) {
	o.Port = v
}

func (o LoraCommandWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["confirmed"] = o.Confirmed
	}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["port"] = o.Port
	}
	return json.Marshal(toSerialize)
}

type NullableLoraCommandWeb struct {
	value *LoraCommandWeb
	isSet bool
}

func (v NullableLoraCommandWeb) Get() *LoraCommandWeb {
	return v.value
}

func (v *NullableLoraCommandWeb) Set(val *LoraCommandWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableLoraCommandWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableLoraCommandWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoraCommandWeb(val *LoraCommandWeb) *NullableLoraCommandWeb {
	return &NullableLoraCommandWeb{value: val, isSet: true}
}

func (v NullableLoraCommandWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoraCommandWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


