/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// DeviceStatusFilter struct for DeviceStatusFilter
type DeviceStatusFilter struct {
	// list of filtered connectors. Null or empty to accept all connectors
	Connectors *[]string `json:"connectors,omitempty"`
	// list of filtered group paths. Null or empty to accept all group paths
	GroupPaths *[]GroupPath `json:"groupPaths,omitempty"`
}

// NewDeviceStatusFilter instantiates a new DeviceStatusFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceStatusFilter() *DeviceStatusFilter {
	this := DeviceStatusFilter{}
	return &this
}

// NewDeviceStatusFilterWithDefaults instantiates a new DeviceStatusFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceStatusFilterWithDefaults() *DeviceStatusFilter {
	this := DeviceStatusFilter{}
	return &this
}

// GetConnectors returns the Connectors field value if set, zero value otherwise.
func (o *DeviceStatusFilter) GetConnectors() []string {
	if o == nil || o.Connectors == nil {
		var ret []string
		return ret
	}
	return *o.Connectors
}

// GetConnectorsOk returns a tuple with the Connectors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceStatusFilter) GetConnectorsOk() (*[]string, bool) {
	if o == nil || o.Connectors == nil {
		return nil, false
	}
	return o.Connectors, true
}

// HasConnectors returns a boolean if a field has been set.
func (o *DeviceStatusFilter) HasConnectors() bool {
	if o != nil && o.Connectors != nil {
		return true
	}

	return false
}

// SetConnectors gets a reference to the given []string and assigns it to the Connectors field.
func (o *DeviceStatusFilter) SetConnectors(v []string) {
	o.Connectors = &v
}

// GetGroupPaths returns the GroupPaths field value if set, zero value otherwise.
func (o *DeviceStatusFilter) GetGroupPaths() []GroupPath {
	if o == nil || o.GroupPaths == nil {
		var ret []GroupPath
		return ret
	}
	return *o.GroupPaths
}

// GetGroupPathsOk returns a tuple with the GroupPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceStatusFilter) GetGroupPathsOk() (*[]GroupPath, bool) {
	if o == nil || o.GroupPaths == nil {
		return nil, false
	}
	return o.GroupPaths, true
}

// HasGroupPaths returns a boolean if a field has been set.
func (o *DeviceStatusFilter) HasGroupPaths() bool {
	if o != nil && o.GroupPaths != nil {
		return true
	}

	return false
}

// SetGroupPaths gets a reference to the given []GroupPath and assigns it to the GroupPaths field.
func (o *DeviceStatusFilter) SetGroupPaths(v []GroupPath) {
	o.GroupPaths = &v
}

func (o DeviceStatusFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Connectors != nil {
		toSerialize["connectors"] = o.Connectors
	}
	if o.GroupPaths != nil {
		toSerialize["groupPaths"] = o.GroupPaths
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceStatusFilter struct {
	value *DeviceStatusFilter
	isSet bool
}

func (v NullableDeviceStatusFilter) Get() *DeviceStatusFilter {
	return v.value
}

func (v *NullableDeviceStatusFilter) Set(val *DeviceStatusFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceStatusFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceStatusFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceStatusFilter(val *DeviceStatusFilter) *NullableDeviceStatusFilter {
	return &NullableDeviceStatusFilter{value: val, isSet: true}
}

func (v NullableDeviceStatusFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceStatusFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


