/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// AddPartnerTenantRequest struct for AddPartnerTenantRequest
type AddPartnerTenantRequest struct {
	// email of the main user account
	Email string `json:"email"`
	// Initial language of the user account
	Language string `json:"language"`
	// login of the main user account (unique)
	Login string `json:"login"`
	// name (unique) of the main user account
	Name string `json:"name"`
	// identifier of the offer mapping
	OfferMappingId string `json:"offerMappingId"`
	// options definition
	Options *[]OptionPartnerTenant `json:"options,omitempty"`
	// tenant properties
	Properties *map[string]string `json:"properties,omitempty"`
}

// NewAddPartnerTenantRequest instantiates a new AddPartnerTenantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddPartnerTenantRequest(email string, language string, login string, name string, offerMappingId string, ) *AddPartnerTenantRequest {
	this := AddPartnerTenantRequest{}
	this.Email = email
	this.Language = language
	this.Login = login
	this.Name = name
	this.OfferMappingId = offerMappingId
	return &this
}

// NewAddPartnerTenantRequestWithDefaults instantiates a new AddPartnerTenantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddPartnerTenantRequestWithDefaults() *AddPartnerTenantRequest {
	this := AddPartnerTenantRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *AddPartnerTenantRequest) GetEmail() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *AddPartnerTenantRequest) GetEmailOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *AddPartnerTenantRequest) SetEmail(v string) {
	o.Email = v
}

// GetLanguage returns the Language field value
func (o *AddPartnerTenantRequest) GetLanguage() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *AddPartnerTenantRequest) GetLanguageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *AddPartnerTenantRequest) SetLanguage(v string) {
	o.Language = v
}

// GetLogin returns the Login field value
func (o *AddPartnerTenantRequest) GetLogin() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Login
}

// GetLoginOk returns a tuple with the Login field value
// and a boolean to check if the value has been set.
func (o *AddPartnerTenantRequest) GetLoginOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Login, true
}

// SetLogin sets field value
func (o *AddPartnerTenantRequest) SetLogin(v string) {
	o.Login = v
}

// GetName returns the Name field value
func (o *AddPartnerTenantRequest) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddPartnerTenantRequest) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddPartnerTenantRequest) SetName(v string) {
	o.Name = v
}

// GetOfferMappingId returns the OfferMappingId field value
func (o *AddPartnerTenantRequest) GetOfferMappingId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.OfferMappingId
}

// GetOfferMappingIdOk returns a tuple with the OfferMappingId field value
// and a boolean to check if the value has been set.
func (o *AddPartnerTenantRequest) GetOfferMappingIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OfferMappingId, true
}

// SetOfferMappingId sets field value
func (o *AddPartnerTenantRequest) SetOfferMappingId(v string) {
	o.OfferMappingId = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *AddPartnerTenantRequest) GetOptions() []OptionPartnerTenant {
	if o == nil || o.Options == nil {
		var ret []OptionPartnerTenant
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPartnerTenantRequest) GetOptionsOk() (*[]OptionPartnerTenant, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *AddPartnerTenantRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []OptionPartnerTenant and assigns it to the Options field.
func (o *AddPartnerTenantRequest) SetOptions(v []OptionPartnerTenant) {
	o.Options = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *AddPartnerTenantRequest) GetProperties() map[string]string {
	if o == nil || o.Properties == nil {
		var ret map[string]string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPartnerTenantRequest) GetPropertiesOk() (*map[string]string, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *AddPartnerTenantRequest) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]string and assigns it to the Properties field.
func (o *AddPartnerTenantRequest) SetProperties(v map[string]string) {
	o.Properties = &v
}

func (o AddPartnerTenantRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["language"] = o.Language
	}
	if true {
		toSerialize["login"] = o.Login
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["offerMappingId"] = o.OfferMappingId
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableAddPartnerTenantRequest struct {
	value *AddPartnerTenantRequest
	isSet bool
}

func (v NullableAddPartnerTenantRequest) Get() *AddPartnerTenantRequest {
	return v.value
}

func (v *NullableAddPartnerTenantRequest) Set(val *AddPartnerTenantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddPartnerTenantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddPartnerTenantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddPartnerTenantRequest(val *AddPartnerTenantRequest) *NullableAddPartnerTenantRequest {
	return &NullableAddPartnerTenantRequest{value: val, isSet: true}
}

func (v NullableAddPartnerTenantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddPartnerTenantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


