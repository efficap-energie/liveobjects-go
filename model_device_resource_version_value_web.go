/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// DeviceResourceVersionValueWeb a resource version
type DeviceResourceVersionValueWeb struct {
	// resource version associated date/time
	Timestamp *string `json:"timestamp,omitempty"`
	// resource version. Expected string (max 255 characters)
	Version *string `json:"version,omitempty"`
}

// NewDeviceResourceVersionValueWeb instantiates a new DeviceResourceVersionValueWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceResourceVersionValueWeb() *DeviceResourceVersionValueWeb {
	this := DeviceResourceVersionValueWeb{}
	return &this
}

// NewDeviceResourceVersionValueWebWithDefaults instantiates a new DeviceResourceVersionValueWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceResourceVersionValueWebWithDefaults() *DeviceResourceVersionValueWeb {
	this := DeviceResourceVersionValueWeb{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *DeviceResourceVersionValueWeb) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceResourceVersionValueWeb) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *DeviceResourceVersionValueWeb) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *DeviceResourceVersionValueWeb) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *DeviceResourceVersionValueWeb) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceResourceVersionValueWeb) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *DeviceResourceVersionValueWeb) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *DeviceResourceVersionValueWeb) SetVersion(v string) {
	o.Version = &v
}

func (o DeviceResourceVersionValueWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceResourceVersionValueWeb struct {
	value *DeviceResourceVersionValueWeb
	isSet bool
}

func (v NullableDeviceResourceVersionValueWeb) Get() *DeviceResourceVersionValueWeb {
	return v.value
}

func (v *NullableDeviceResourceVersionValueWeb) Set(val *DeviceResourceVersionValueWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceResourceVersionValueWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceResourceVersionValueWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceResourceVersionValueWeb(val *DeviceResourceVersionValueWeb) *NullableDeviceResourceVersionValueWeb {
	return &NullableDeviceResourceVersionValueWeb{value: val, isSet: true}
}

func (v NullableDeviceResourceVersionValueWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceResourceVersionValueWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


