/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// CampaignPlanning struct for CampaignPlanning
type CampaignPlanning struct {
	// Date when the campaign is finished
	EndDate string `json:"endDate"`
	// Date from when the campaign starts
	StartDate string `json:"startDate"`
}

// NewCampaignPlanning instantiates a new CampaignPlanning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignPlanning(endDate string, startDate string, ) *CampaignPlanning {
	this := CampaignPlanning{}
	this.EndDate = endDate
	this.StartDate = startDate
	return &this
}

// NewCampaignPlanningWithDefaults instantiates a new CampaignPlanning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignPlanningWithDefaults() *CampaignPlanning {
	this := CampaignPlanning{}
	return &this
}

// GetEndDate returns the EndDate field value
func (o *CampaignPlanning) GetEndDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *CampaignPlanning) GetEndDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *CampaignPlanning) SetEndDate(v string) {
	o.EndDate = v
}

// GetStartDate returns the StartDate field value
func (o *CampaignPlanning) GetStartDate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *CampaignPlanning) GetStartDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *CampaignPlanning) SetStartDate(v string) {
	o.StartDate = v
}

func (o CampaignPlanning) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["endDate"] = o.EndDate
	}
	if true {
		toSerialize["startDate"] = o.StartDate
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignPlanning struct {
	value *CampaignPlanning
	isSet bool
}

func (v NullableCampaignPlanning) Get() *CampaignPlanning {
	return v.value
}

func (v *NullableCampaignPlanning) Set(val *CampaignPlanning) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignPlanning) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignPlanning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignPlanning(val *CampaignPlanning) *NullableCampaignPlanning {
	return &NullableCampaignPlanning{value: val, isSet: true}
}

func (v NullableCampaignPlanning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignPlanning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


