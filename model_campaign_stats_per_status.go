/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// CampaignStatsPerStatus Statistics about devices with a given status
type CampaignStatsPerStatus struct {
	// Number of devices with status 'canceled'
	Canceled int32 `json:"canceled"`
	// Number of devices with status 'failure'
	Failure int32 `json:"failure"`
	// Number of devices with status 'in progress'
	InProgress int32 `json:"inProgress"`
	// Number of devices with status 'not started'
	NotStarted int32 `json:"notStarted"`
	// Number of devices with status 'pending'
	Pending int32 `json:"pending"`
	// Number of devices with status 'success'
	Success int32 `json:"success"`
}

// NewCampaignStatsPerStatus instantiates a new CampaignStatsPerStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignStatsPerStatus(canceled int32, failure int32, inProgress int32, notStarted int32, pending int32, success int32, ) *CampaignStatsPerStatus {
	this := CampaignStatsPerStatus{}
	this.Canceled = canceled
	this.Failure = failure
	this.InProgress = inProgress
	this.NotStarted = notStarted
	this.Pending = pending
	this.Success = success
	return &this
}

// NewCampaignStatsPerStatusWithDefaults instantiates a new CampaignStatsPerStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignStatsPerStatusWithDefaults() *CampaignStatsPerStatus {
	this := CampaignStatsPerStatus{}
	return &this
}

// GetCanceled returns the Canceled field value
func (o *CampaignStatsPerStatus) GetCanceled() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Canceled
}

// GetCanceledOk returns a tuple with the Canceled field value
// and a boolean to check if the value has been set.
func (o *CampaignStatsPerStatus) GetCanceledOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Canceled, true
}

// SetCanceled sets field value
func (o *CampaignStatsPerStatus) SetCanceled(v int32) {
	o.Canceled = v
}

// GetFailure returns the Failure field value
func (o *CampaignStatsPerStatus) GetFailure() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Failure
}

// GetFailureOk returns a tuple with the Failure field value
// and a boolean to check if the value has been set.
func (o *CampaignStatsPerStatus) GetFailureOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Failure, true
}

// SetFailure sets field value
func (o *CampaignStatsPerStatus) SetFailure(v int32) {
	o.Failure = v
}

// GetInProgress returns the InProgress field value
func (o *CampaignStatsPerStatus) GetInProgress() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value
// and a boolean to check if the value has been set.
func (o *CampaignStatsPerStatus) GetInProgressOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InProgress, true
}

// SetInProgress sets field value
func (o *CampaignStatsPerStatus) SetInProgress(v int32) {
	o.InProgress = v
}

// GetNotStarted returns the NotStarted field value
func (o *CampaignStatsPerStatus) GetNotStarted() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.NotStarted
}

// GetNotStartedOk returns a tuple with the NotStarted field value
// and a boolean to check if the value has been set.
func (o *CampaignStatsPerStatus) GetNotStartedOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NotStarted, true
}

// SetNotStarted sets field value
func (o *CampaignStatsPerStatus) SetNotStarted(v int32) {
	o.NotStarted = v
}

// GetPending returns the Pending field value
func (o *CampaignStatsPerStatus) GetPending() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Pending
}

// GetPendingOk returns a tuple with the Pending field value
// and a boolean to check if the value has been set.
func (o *CampaignStatsPerStatus) GetPendingOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Pending, true
}

// SetPending sets field value
func (o *CampaignStatsPerStatus) SetPending(v int32) {
	o.Pending = v
}

// GetSuccess returns the Success field value
func (o *CampaignStatsPerStatus) GetSuccess() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *CampaignStatsPerStatus) GetSuccessOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *CampaignStatsPerStatus) SetSuccess(v int32) {
	o.Success = v
}

func (o CampaignStatsPerStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["canceled"] = o.Canceled
	}
	if true {
		toSerialize["failure"] = o.Failure
	}
	if true {
		toSerialize["inProgress"] = o.InProgress
	}
	if true {
		toSerialize["notStarted"] = o.NotStarted
	}
	if true {
		toSerialize["pending"] = o.Pending
	}
	if true {
		toSerialize["success"] = o.Success
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignStatsPerStatus struct {
	value *CampaignStatsPerStatus
	isSet bool
}

func (v NullableCampaignStatsPerStatus) Get() *CampaignStatsPerStatus {
	return v.value
}

func (v *NullableCampaignStatsPerStatus) Set(val *CampaignStatsPerStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignStatsPerStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignStatsPerStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignStatsPerStatus(val *CampaignStatsPerStatus) *NullableCampaignStatsPerStatus {
	return &NullableCampaignStatsPerStatus{value: val, isSet: true}
}

func (v NullableCampaignStatsPerStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignStatsPerStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


