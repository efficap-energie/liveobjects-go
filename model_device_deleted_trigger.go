/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// DeviceDeletedTrigger struct for DeviceDeletedTrigger
type DeviceDeletedTrigger struct {
	Filter *DeviceDeletedFilter `json:"filter,omitempty"`
	// requested object version
	Version int32 `json:"version"`
}

// NewDeviceDeletedTrigger instantiates a new DeviceDeletedTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceDeletedTrigger(version int32, ) *DeviceDeletedTrigger {
	this := DeviceDeletedTrigger{}
	this.Version = version
	return &this
}

// NewDeviceDeletedTriggerWithDefaults instantiates a new DeviceDeletedTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceDeletedTriggerWithDefaults() *DeviceDeletedTrigger {
	this := DeviceDeletedTrigger{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *DeviceDeletedTrigger) GetFilter() DeviceDeletedFilter {
	if o == nil || o.Filter == nil {
		var ret DeviceDeletedFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceDeletedTrigger) GetFilterOk() (*DeviceDeletedFilter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *DeviceDeletedTrigger) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given DeviceDeletedFilter and assigns it to the Filter field.
func (o *DeviceDeletedTrigger) SetFilter(v DeviceDeletedFilter) {
	o.Filter = &v
}

// GetVersion returns the Version field value
func (o *DeviceDeletedTrigger) GetVersion() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *DeviceDeletedTrigger) GetVersionOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *DeviceDeletedTrigger) SetVersion(v int32) {
	o.Version = v
}

func (o DeviceDeletedTrigger) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceDeletedTrigger struct {
	value *DeviceDeletedTrigger
	isSet bool
}

func (v NullableDeviceDeletedTrigger) Get() *DeviceDeletedTrigger {
	return v.value
}

func (v *NullableDeviceDeletedTrigger) Set(val *DeviceDeletedTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceDeletedTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceDeletedTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceDeletedTrigger(val *DeviceDeletedTrigger) *NullableDeviceDeletedTrigger {
	return &NullableDeviceDeletedTrigger{value: val, isSet: true}
}

func (v NullableDeviceDeletedTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceDeletedTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


