/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// OAuth2ErrorWeb OAuth error response
type OAuth2ErrorWeb struct {
	// Error value
	Error *string `json:"error,omitempty"`
	// Error description
	ErrorDescription *string `json:"error_description,omitempty"`
}

// NewOAuth2ErrorWeb instantiates a new OAuth2ErrorWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuth2ErrorWeb() *OAuth2ErrorWeb {
	this := OAuth2ErrorWeb{}
	return &this
}

// NewOAuth2ErrorWebWithDefaults instantiates a new OAuth2ErrorWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuth2ErrorWebWithDefaults() *OAuth2ErrorWeb {
	this := OAuth2ErrorWeb{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *OAuth2ErrorWeb) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth2ErrorWeb) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *OAuth2ErrorWeb) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *OAuth2ErrorWeb) SetError(v string) {
	o.Error = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *OAuth2ErrorWeb) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuth2ErrorWeb) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *OAuth2ErrorWeb) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *OAuth2ErrorWeb) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

func (o OAuth2ErrorWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.ErrorDescription != nil {
		toSerialize["error_description"] = o.ErrorDescription
	}
	return json.Marshal(toSerialize)
}

type NullableOAuth2ErrorWeb struct {
	value *OAuth2ErrorWeb
	isSet bool
}

func (v NullableOAuth2ErrorWeb) Get() *OAuth2ErrorWeb {
	return v.value
}

func (v *NullableOAuth2ErrorWeb) Set(val *OAuth2ErrorWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuth2ErrorWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuth2ErrorWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuth2ErrorWeb(val *OAuth2ErrorWeb) *NullableOAuth2ErrorWeb {
	return &NullableOAuth2ErrorWeb{value: val, isSet: true}
}

func (v NullableOAuth2ErrorWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuth2ErrorWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


