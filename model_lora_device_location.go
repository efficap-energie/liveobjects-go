/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// LoraDeviceLocation struct for LoraDeviceLocation
type LoraDeviceLocation struct {
	// Last global geolocation tolerance (meter)
	Accuracy *float64 `json:"accuracy,omitempty"`
	// Last geolocation altitude (meter)
	Alt *float64 `json:"alt,omitempty"`
	// Date/time of the last location
	LastUpdateTs *string `json:"lastUpdateTs,omitempty"`
	// Last geolocation latitude (GPS coordinate system)
	Lat *float64 `json:"lat,omitempty"`
	// Last geolocation longitude (GPS coordinate system)
	Lon *float64 `json:"lon,omitempty"`
	// Computing geolocation method
	Provider *string `json:"provider,omitempty"`
}

// NewLoraDeviceLocation instantiates a new LoraDeviceLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoraDeviceLocation() *LoraDeviceLocation {
	this := LoraDeviceLocation{}
	return &this
}

// NewLoraDeviceLocationWithDefaults instantiates a new LoraDeviceLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoraDeviceLocationWithDefaults() *LoraDeviceLocation {
	this := LoraDeviceLocation{}
	return &this
}

// GetAccuracy returns the Accuracy field value if set, zero value otherwise.
func (o *LoraDeviceLocation) GetAccuracy() float64 {
	if o == nil || o.Accuracy == nil {
		var ret float64
		return ret
	}
	return *o.Accuracy
}

// GetAccuracyOk returns a tuple with the Accuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraDeviceLocation) GetAccuracyOk() (*float64, bool) {
	if o == nil || o.Accuracy == nil {
		return nil, false
	}
	return o.Accuracy, true
}

// HasAccuracy returns a boolean if a field has been set.
func (o *LoraDeviceLocation) HasAccuracy() bool {
	if o != nil && o.Accuracy != nil {
		return true
	}

	return false
}

// SetAccuracy gets a reference to the given float64 and assigns it to the Accuracy field.
func (o *LoraDeviceLocation) SetAccuracy(v float64) {
	o.Accuracy = &v
}

// GetAlt returns the Alt field value if set, zero value otherwise.
func (o *LoraDeviceLocation) GetAlt() float64 {
	if o == nil || o.Alt == nil {
		var ret float64
		return ret
	}
	return *o.Alt
}

// GetAltOk returns a tuple with the Alt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraDeviceLocation) GetAltOk() (*float64, bool) {
	if o == nil || o.Alt == nil {
		return nil, false
	}
	return o.Alt, true
}

// HasAlt returns a boolean if a field has been set.
func (o *LoraDeviceLocation) HasAlt() bool {
	if o != nil && o.Alt != nil {
		return true
	}

	return false
}

// SetAlt gets a reference to the given float64 and assigns it to the Alt field.
func (o *LoraDeviceLocation) SetAlt(v float64) {
	o.Alt = &v
}

// GetLastUpdateTs returns the LastUpdateTs field value if set, zero value otherwise.
func (o *LoraDeviceLocation) GetLastUpdateTs() string {
	if o == nil || o.LastUpdateTs == nil {
		var ret string
		return ret
	}
	return *o.LastUpdateTs
}

// GetLastUpdateTsOk returns a tuple with the LastUpdateTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraDeviceLocation) GetLastUpdateTsOk() (*string, bool) {
	if o == nil || o.LastUpdateTs == nil {
		return nil, false
	}
	return o.LastUpdateTs, true
}

// HasLastUpdateTs returns a boolean if a field has been set.
func (o *LoraDeviceLocation) HasLastUpdateTs() bool {
	if o != nil && o.LastUpdateTs != nil {
		return true
	}

	return false
}

// SetLastUpdateTs gets a reference to the given string and assigns it to the LastUpdateTs field.
func (o *LoraDeviceLocation) SetLastUpdateTs(v string) {
	o.LastUpdateTs = &v
}

// GetLat returns the Lat field value if set, zero value otherwise.
func (o *LoraDeviceLocation) GetLat() float64 {
	if o == nil || o.Lat == nil {
		var ret float64
		return ret
	}
	return *o.Lat
}

// GetLatOk returns a tuple with the Lat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraDeviceLocation) GetLatOk() (*float64, bool) {
	if o == nil || o.Lat == nil {
		return nil, false
	}
	return o.Lat, true
}

// HasLat returns a boolean if a field has been set.
func (o *LoraDeviceLocation) HasLat() bool {
	if o != nil && o.Lat != nil {
		return true
	}

	return false
}

// SetLat gets a reference to the given float64 and assigns it to the Lat field.
func (o *LoraDeviceLocation) SetLat(v float64) {
	o.Lat = &v
}

// GetLon returns the Lon field value if set, zero value otherwise.
func (o *LoraDeviceLocation) GetLon() float64 {
	if o == nil || o.Lon == nil {
		var ret float64
		return ret
	}
	return *o.Lon
}

// GetLonOk returns a tuple with the Lon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraDeviceLocation) GetLonOk() (*float64, bool) {
	if o == nil || o.Lon == nil {
		return nil, false
	}
	return o.Lon, true
}

// HasLon returns a boolean if a field has been set.
func (o *LoraDeviceLocation) HasLon() bool {
	if o != nil && o.Lon != nil {
		return true
	}

	return false
}

// SetLon gets a reference to the given float64 and assigns it to the Lon field.
func (o *LoraDeviceLocation) SetLon(v float64) {
	o.Lon = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *LoraDeviceLocation) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraDeviceLocation) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *LoraDeviceLocation) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *LoraDeviceLocation) SetProvider(v string) {
	o.Provider = &v
}

func (o LoraDeviceLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Accuracy != nil {
		toSerialize["accuracy"] = o.Accuracy
	}
	if o.Alt != nil {
		toSerialize["alt"] = o.Alt
	}
	if o.LastUpdateTs != nil {
		toSerialize["lastUpdateTs"] = o.LastUpdateTs
	}
	if o.Lat != nil {
		toSerialize["lat"] = o.Lat
	}
	if o.Lon != nil {
		toSerialize["lon"] = o.Lon
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	return json.Marshal(toSerialize)
}

type NullableLoraDeviceLocation struct {
	value *LoraDeviceLocation
	isSet bool
}

func (v NullableLoraDeviceLocation) Get() *LoraDeviceLocation {
	return v.value
}

func (v *NullableLoraDeviceLocation) Set(val *LoraDeviceLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableLoraDeviceLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableLoraDeviceLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoraDeviceLocation(val *LoraDeviceLocation) *NullableLoraDeviceLocation {
	return &NullableLoraDeviceLocation{value: val, isSet: true}
}

func (v NullableLoraDeviceLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoraDeviceLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


