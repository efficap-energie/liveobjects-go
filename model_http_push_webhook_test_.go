/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// HttpPushWebhookTest struct for HttpPushWebhookTest
type HttpPushWebhookTest struct {
	// A map of header to be passed in the http POST headers
	Headers *map[string][]string `json:"headers,omitempty"`
	// The body of the http POST test request
	RequestBody *string `json:"requestBody,omitempty"`
	// The maximum delay allowed to complete the http POST test request
	RequestTimeout *int64 `json:"requestTimeout,omitempty"`
	// The url of the target service webhook (only the ports 80, 443, 8080, 8443 and 9243 are allowed).
	WebhookUrl *string `json:"webhookUrl,omitempty"`
}

// NewHttpPushWebhookTest instantiates a new HttpPushWebhookTest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpPushWebhookTest() *HttpPushWebhookTest {
	this := HttpPushWebhookTest{}
	return &this
}

// NewHttpPushWebhookTestWithDefaults instantiates a new HttpPushWebhookTest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpPushWebhookTestWithDefaults() *HttpPushWebhookTest {
	this := HttpPushWebhookTest{}
	return &this
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *HttpPushWebhookTest) GetHeaders() map[string][]string {
	if o == nil || o.Headers == nil {
		var ret map[string][]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpPushWebhookTest) GetHeadersOk() (*map[string][]string, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *HttpPushWebhookTest) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string][]string and assigns it to the Headers field.
func (o *HttpPushWebhookTest) SetHeaders(v map[string][]string) {
	o.Headers = &v
}

// GetRequestBody returns the RequestBody field value if set, zero value otherwise.
func (o *HttpPushWebhookTest) GetRequestBody() string {
	if o == nil || o.RequestBody == nil {
		var ret string
		return ret
	}
	return *o.RequestBody
}

// GetRequestBodyOk returns a tuple with the RequestBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpPushWebhookTest) GetRequestBodyOk() (*string, bool) {
	if o == nil || o.RequestBody == nil {
		return nil, false
	}
	return o.RequestBody, true
}

// HasRequestBody returns a boolean if a field has been set.
func (o *HttpPushWebhookTest) HasRequestBody() bool {
	if o != nil && o.RequestBody != nil {
		return true
	}

	return false
}

// SetRequestBody gets a reference to the given string and assigns it to the RequestBody field.
func (o *HttpPushWebhookTest) SetRequestBody(v string) {
	o.RequestBody = &v
}

// GetRequestTimeout returns the RequestTimeout field value if set, zero value otherwise.
func (o *HttpPushWebhookTest) GetRequestTimeout() int64 {
	if o == nil || o.RequestTimeout == nil {
		var ret int64
		return ret
	}
	return *o.RequestTimeout
}

// GetRequestTimeoutOk returns a tuple with the RequestTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpPushWebhookTest) GetRequestTimeoutOk() (*int64, bool) {
	if o == nil || o.RequestTimeout == nil {
		return nil, false
	}
	return o.RequestTimeout, true
}

// HasRequestTimeout returns a boolean if a field has been set.
func (o *HttpPushWebhookTest) HasRequestTimeout() bool {
	if o != nil && o.RequestTimeout != nil {
		return true
	}

	return false
}

// SetRequestTimeout gets a reference to the given int64 and assigns it to the RequestTimeout field.
func (o *HttpPushWebhookTest) SetRequestTimeout(v int64) {
	o.RequestTimeout = &v
}

// GetWebhookUrl returns the WebhookUrl field value if set, zero value otherwise.
func (o *HttpPushWebhookTest) GetWebhookUrl() string {
	if o == nil || o.WebhookUrl == nil {
		var ret string
		return ret
	}
	return *o.WebhookUrl
}

// GetWebhookUrlOk returns a tuple with the WebhookUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpPushWebhookTest) GetWebhookUrlOk() (*string, bool) {
	if o == nil || o.WebhookUrl == nil {
		return nil, false
	}
	return o.WebhookUrl, true
}

// HasWebhookUrl returns a boolean if a field has been set.
func (o *HttpPushWebhookTest) HasWebhookUrl() bool {
	if o != nil && o.WebhookUrl != nil {
		return true
	}

	return false
}

// SetWebhookUrl gets a reference to the given string and assigns it to the WebhookUrl field.
func (o *HttpPushWebhookTest) SetWebhookUrl(v string) {
	o.WebhookUrl = &v
}

func (o HttpPushWebhookTest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.RequestBody != nil {
		toSerialize["requestBody"] = o.RequestBody
	}
	if o.RequestTimeout != nil {
		toSerialize["requestTimeout"] = o.RequestTimeout
	}
	if o.WebhookUrl != nil {
		toSerialize["webhookUrl"] = o.WebhookUrl
	}
	return json.Marshal(toSerialize)
}

type NullableHttpPushWebhookTest struct {
	value *HttpPushWebhookTest
	isSet bool
}

func (v NullableHttpPushWebhookTest) Get() *HttpPushWebhookTest {
	return v.value
}

func (v *NullableHttpPushWebhookTest) Set(val *HttpPushWebhookTest) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpPushWebhookTest) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpPushWebhookTest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpPushWebhookTest(val *HttpPushWebhookTest) *NullableHttpPushWebhookTest {
	return &NullableHttpPushWebhookTest{value: val, isSet: true}
}

func (v NullableHttpPushWebhookTest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpPushWebhookTest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


