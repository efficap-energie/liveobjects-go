/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// BusinessSettings struct for BusinessSettings
type BusinessSettings struct {
	DecoderName *string `json:"decoderName,omitempty"`
	Msisdns *[]Msisdns `json:"msisdns,omitempty"`
	// platform phone number use as source of message
	ServerPhoneNumber string `json:"serverPhoneNumber"`
	// Tenant id
	TenantId string `json:"tenantId"`
}

// NewBusinessSettings instantiates a new BusinessSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusinessSettings(serverPhoneNumber string, tenantId string, ) *BusinessSettings {
	this := BusinessSettings{}
	this.ServerPhoneNumber = serverPhoneNumber
	this.TenantId = tenantId
	return &this
}

// NewBusinessSettingsWithDefaults instantiates a new BusinessSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusinessSettingsWithDefaults() *BusinessSettings {
	this := BusinessSettings{}
	return &this
}

// GetDecoderName returns the DecoderName field value if set, zero value otherwise.
func (o *BusinessSettings) GetDecoderName() string {
	if o == nil || o.DecoderName == nil {
		var ret string
		return ret
	}
	return *o.DecoderName
}

// GetDecoderNameOk returns a tuple with the DecoderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessSettings) GetDecoderNameOk() (*string, bool) {
	if o == nil || o.DecoderName == nil {
		return nil, false
	}
	return o.DecoderName, true
}

// HasDecoderName returns a boolean if a field has been set.
func (o *BusinessSettings) HasDecoderName() bool {
	if o != nil && o.DecoderName != nil {
		return true
	}

	return false
}

// SetDecoderName gets a reference to the given string and assigns it to the DecoderName field.
func (o *BusinessSettings) SetDecoderName(v string) {
	o.DecoderName = &v
}

// GetMsisdns returns the Msisdns field value if set, zero value otherwise.
func (o *BusinessSettings) GetMsisdns() []Msisdns {
	if o == nil || o.Msisdns == nil {
		var ret []Msisdns
		return ret
	}
	return *o.Msisdns
}

// GetMsisdnsOk returns a tuple with the Msisdns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessSettings) GetMsisdnsOk() (*[]Msisdns, bool) {
	if o == nil || o.Msisdns == nil {
		return nil, false
	}
	return o.Msisdns, true
}

// HasMsisdns returns a boolean if a field has been set.
func (o *BusinessSettings) HasMsisdns() bool {
	if o != nil && o.Msisdns != nil {
		return true
	}

	return false
}

// SetMsisdns gets a reference to the given []Msisdns and assigns it to the Msisdns field.
func (o *BusinessSettings) SetMsisdns(v []Msisdns) {
	o.Msisdns = &v
}

// GetServerPhoneNumber returns the ServerPhoneNumber field value
func (o *BusinessSettings) GetServerPhoneNumber() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ServerPhoneNumber
}

// GetServerPhoneNumberOk returns a tuple with the ServerPhoneNumber field value
// and a boolean to check if the value has been set.
func (o *BusinessSettings) GetServerPhoneNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ServerPhoneNumber, true
}

// SetServerPhoneNumber sets field value
func (o *BusinessSettings) SetServerPhoneNumber(v string) {
	o.ServerPhoneNumber = v
}

// GetTenantId returns the TenantId field value
func (o *BusinessSettings) GetTenantId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *BusinessSettings) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *BusinessSettings) SetTenantId(v string) {
	o.TenantId = v
}

func (o BusinessSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DecoderName != nil {
		toSerialize["decoderName"] = o.DecoderName
	}
	if o.Msisdns != nil {
		toSerialize["msisdns"] = o.Msisdns
	}
	if true {
		toSerialize["serverPhoneNumber"] = o.ServerPhoneNumber
	}
	if true {
		toSerialize["tenantId"] = o.TenantId
	}
	return json.Marshal(toSerialize)
}

type NullableBusinessSettings struct {
	value *BusinessSettings
	isSet bool
}

func (v NullableBusinessSettings) Get() *BusinessSettings {
	return v.value
}

func (v *NullableBusinessSettings) Set(val *BusinessSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableBusinessSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableBusinessSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusinessSettings(val *BusinessSettings) *NullableBusinessSettings {
	return &NullableBusinessSettings{value: val, isSet: true}
}

func (v NullableBusinessSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusinessSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


