/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// MetadataResourceConnectors struct for MetadataResourceConnectors
type MetadataResourceConnectors struct {
	// the mandatory connector metadata
	Mandatory *[]string `json:"mandatory,omitempty"`
	// the optional connector metadata
	Optional *[]string `json:"optional,omitempty"`
}

// NewMetadataResourceConnectors instantiates a new MetadataResourceConnectors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataResourceConnectors() *MetadataResourceConnectors {
	this := MetadataResourceConnectors{}
	return &this
}

// NewMetadataResourceConnectorsWithDefaults instantiates a new MetadataResourceConnectors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataResourceConnectorsWithDefaults() *MetadataResourceConnectors {
	this := MetadataResourceConnectors{}
	return &this
}

// GetMandatory returns the Mandatory field value if set, zero value otherwise.
func (o *MetadataResourceConnectors) GetMandatory() []string {
	if o == nil || o.Mandatory == nil {
		var ret []string
		return ret
	}
	return *o.Mandatory
}

// GetMandatoryOk returns a tuple with the Mandatory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataResourceConnectors) GetMandatoryOk() (*[]string, bool) {
	if o == nil || o.Mandatory == nil {
		return nil, false
	}
	return o.Mandatory, true
}

// HasMandatory returns a boolean if a field has been set.
func (o *MetadataResourceConnectors) HasMandatory() bool {
	if o != nil && o.Mandatory != nil {
		return true
	}

	return false
}

// SetMandatory gets a reference to the given []string and assigns it to the Mandatory field.
func (o *MetadataResourceConnectors) SetMandatory(v []string) {
	o.Mandatory = &v
}

// GetOptional returns the Optional field value if set, zero value otherwise.
func (o *MetadataResourceConnectors) GetOptional() []string {
	if o == nil || o.Optional == nil {
		var ret []string
		return ret
	}
	return *o.Optional
}

// GetOptionalOk returns a tuple with the Optional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataResourceConnectors) GetOptionalOk() (*[]string, bool) {
	if o == nil || o.Optional == nil {
		return nil, false
	}
	return o.Optional, true
}

// HasOptional returns a boolean if a field has been set.
func (o *MetadataResourceConnectors) HasOptional() bool {
	if o != nil && o.Optional != nil {
		return true
	}

	return false
}

// SetOptional gets a reference to the given []string and assigns it to the Optional field.
func (o *MetadataResourceConnectors) SetOptional(v []string) {
	o.Optional = &v
}

func (o MetadataResourceConnectors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mandatory != nil {
		toSerialize["mandatory"] = o.Mandatory
	}
	if o.Optional != nil {
		toSerialize["optional"] = o.Optional
	}
	return json.Marshal(toSerialize)
}

type NullableMetadataResourceConnectors struct {
	value *MetadataResourceConnectors
	isSet bool
}

func (v NullableMetadataResourceConnectors) Get() *MetadataResourceConnectors {
	return v.value
}

func (v *NullableMetadataResourceConnectors) Set(val *MetadataResourceConnectors) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataResourceConnectors) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataResourceConnectors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataResourceConnectors(val *MetadataResourceConnectors) *NullableMetadataResourceConnectors {
	return &NullableMetadataResourceConnectors{value: val, isSet: true}
}

func (v NullableMetadataResourceConnectors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataResourceConnectors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


