/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// LoraConnectivityOptions struct for LoraConnectivityOptions
type LoraConnectivityOptions struct {
	// Enable or disable ack UL option
	AckUl bool `json:"ackUl"`
	// Enable or disable TDOA option
	Tdoa *bool `json:"tdoa,omitempty"`
}

// NewLoraConnectivityOptions instantiates a new LoraConnectivityOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoraConnectivityOptions(ackUl bool, ) *LoraConnectivityOptions {
	this := LoraConnectivityOptions{}
	this.AckUl = ackUl
	return &this
}

// NewLoraConnectivityOptionsWithDefaults instantiates a new LoraConnectivityOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoraConnectivityOptionsWithDefaults() *LoraConnectivityOptions {
	this := LoraConnectivityOptions{}
	return &this
}

// GetAckUl returns the AckUl field value
func (o *LoraConnectivityOptions) GetAckUl() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.AckUl
}

// GetAckUlOk returns a tuple with the AckUl field value
// and a boolean to check if the value has been set.
func (o *LoraConnectivityOptions) GetAckUlOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AckUl, true
}

// SetAckUl sets field value
func (o *LoraConnectivityOptions) SetAckUl(v bool) {
	o.AckUl = v
}

// GetTdoa returns the Tdoa field value if set, zero value otherwise.
func (o *LoraConnectivityOptions) GetTdoa() bool {
	if o == nil || o.Tdoa == nil {
		var ret bool
		return ret
	}
	return *o.Tdoa
}

// GetTdoaOk returns a tuple with the Tdoa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraConnectivityOptions) GetTdoaOk() (*bool, bool) {
	if o == nil || o.Tdoa == nil {
		return nil, false
	}
	return o.Tdoa, true
}

// HasTdoa returns a boolean if a field has been set.
func (o *LoraConnectivityOptions) HasTdoa() bool {
	if o != nil && o.Tdoa != nil {
		return true
	}

	return false
}

// SetTdoa gets a reference to the given bool and assigns it to the Tdoa field.
func (o *LoraConnectivityOptions) SetTdoa(v bool) {
	o.Tdoa = &v
}

func (o LoraConnectivityOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ackUl"] = o.AckUl
	}
	if o.Tdoa != nil {
		toSerialize["tdoa"] = o.Tdoa
	}
	return json.Marshal(toSerialize)
}

type NullableLoraConnectivityOptions struct {
	value *LoraConnectivityOptions
	isSet bool
}

func (v NullableLoraConnectivityOptions) Get() *LoraConnectivityOptions {
	return v.value
}

func (v *NullableLoraConnectivityOptions) Set(val *LoraConnectivityOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableLoraConnectivityOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableLoraConnectivityOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoraConnectivityOptions(val *LoraConnectivityOptions) *NullableLoraConnectivityOptions {
	return &NullableLoraConnectivityOptions{value: val, isSet: true}
}

func (v NullableLoraConnectivityOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoraConnectivityOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


