/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// DeviceParametersSetRequest struct for DeviceParametersSetRequest
type DeviceParametersSetRequest struct {
	// Device configuration update. Max number of parameters is 100. Parameter name max length is 128. Parameter value must be valid according to the type and max length is 2000.
	Parameters *map[string]NewDeviceParameterValue `json:"parameters,omitempty"`
}

// NewDeviceParametersSetRequest instantiates a new DeviceParametersSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceParametersSetRequest() *DeviceParametersSetRequest {
	this := DeviceParametersSetRequest{}
	return &this
}

// NewDeviceParametersSetRequestWithDefaults instantiates a new DeviceParametersSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceParametersSetRequestWithDefaults() *DeviceParametersSetRequest {
	this := DeviceParametersSetRequest{}
	return &this
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *DeviceParametersSetRequest) GetParameters() map[string]NewDeviceParameterValue {
	if o == nil || o.Parameters == nil {
		var ret map[string]NewDeviceParameterValue
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceParametersSetRequest) GetParametersOk() (*map[string]NewDeviceParameterValue, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *DeviceParametersSetRequest) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]NewDeviceParameterValue and assigns it to the Parameters field.
func (o *DeviceParametersSetRequest) SetParameters(v map[string]NewDeviceParameterValue) {
	o.Parameters = &v
}

func (o DeviceParametersSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceParametersSetRequest struct {
	value *DeviceParametersSetRequest
	isSet bool
}

func (v NullableDeviceParametersSetRequest) Get() *DeviceParametersSetRequest {
	return v.value
}

func (v *NullableDeviceParametersSetRequest) Set(val *DeviceParametersSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceParametersSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceParametersSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceParametersSetRequest(val *DeviceParametersSetRequest) *NullableDeviceParametersSetRequest {
	return &NullableDeviceParametersSetRequest{value: val, isSet: true}
}

func (v NullableDeviceParametersSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceParametersSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


