/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// Source struct for Source
type Source struct {
	ActionPolicyId *string `json:"actionPolicyId,omitempty"`
	CampaignId *string `json:"campaignId,omitempty"`
	Connector *string `json:"connector,omitempty"`
	DeviceId *string `json:"deviceId,omitempty"`
	EventProcessingRuleId *string `json:"eventProcessingRuleId,omitempty"`
	GatewayId *string `json:"gatewayId,omitempty"`
	NodeId *string `json:"nodeId,omitempty"`
	PipelineId *string `json:"pipelineId,omitempty"`
}

// NewSource instantiates a new Source object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSource() *Source {
	this := Source{}
	return &this
}

// NewSourceWithDefaults instantiates a new Source object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceWithDefaults() *Source {
	this := Source{}
	return &this
}

// GetActionPolicyId returns the ActionPolicyId field value if set, zero value otherwise.
func (o *Source) GetActionPolicyId() string {
	if o == nil || o.ActionPolicyId == nil {
		var ret string
		return ret
	}
	return *o.ActionPolicyId
}

// GetActionPolicyIdOk returns a tuple with the ActionPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetActionPolicyIdOk() (*string, bool) {
	if o == nil || o.ActionPolicyId == nil {
		return nil, false
	}
	return o.ActionPolicyId, true
}

// HasActionPolicyId returns a boolean if a field has been set.
func (o *Source) HasActionPolicyId() bool {
	if o != nil && o.ActionPolicyId != nil {
		return true
	}

	return false
}

// SetActionPolicyId gets a reference to the given string and assigns it to the ActionPolicyId field.
func (o *Source) SetActionPolicyId(v string) {
	o.ActionPolicyId = &v
}

// GetCampaignId returns the CampaignId field value if set, zero value otherwise.
func (o *Source) GetCampaignId() string {
	if o == nil || o.CampaignId == nil {
		var ret string
		return ret
	}
	return *o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetCampaignIdOk() (*string, bool) {
	if o == nil || o.CampaignId == nil {
		return nil, false
	}
	return o.CampaignId, true
}

// HasCampaignId returns a boolean if a field has been set.
func (o *Source) HasCampaignId() bool {
	if o != nil && o.CampaignId != nil {
		return true
	}

	return false
}

// SetCampaignId gets a reference to the given string and assigns it to the CampaignId field.
func (o *Source) SetCampaignId(v string) {
	o.CampaignId = &v
}

// GetConnector returns the Connector field value if set, zero value otherwise.
func (o *Source) GetConnector() string {
	if o == nil || o.Connector == nil {
		var ret string
		return ret
	}
	return *o.Connector
}

// GetConnectorOk returns a tuple with the Connector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetConnectorOk() (*string, bool) {
	if o == nil || o.Connector == nil {
		return nil, false
	}
	return o.Connector, true
}

// HasConnector returns a boolean if a field has been set.
func (o *Source) HasConnector() bool {
	if o != nil && o.Connector != nil {
		return true
	}

	return false
}

// SetConnector gets a reference to the given string and assigns it to the Connector field.
func (o *Source) SetConnector(v string) {
	o.Connector = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *Source) GetDeviceId() string {
	if o == nil || o.DeviceId == nil {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetDeviceIdOk() (*string, bool) {
	if o == nil || o.DeviceId == nil {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *Source) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *Source) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetEventProcessingRuleId returns the EventProcessingRuleId field value if set, zero value otherwise.
func (o *Source) GetEventProcessingRuleId() string {
	if o == nil || o.EventProcessingRuleId == nil {
		var ret string
		return ret
	}
	return *o.EventProcessingRuleId
}

// GetEventProcessingRuleIdOk returns a tuple with the EventProcessingRuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetEventProcessingRuleIdOk() (*string, bool) {
	if o == nil || o.EventProcessingRuleId == nil {
		return nil, false
	}
	return o.EventProcessingRuleId, true
}

// HasEventProcessingRuleId returns a boolean if a field has been set.
func (o *Source) HasEventProcessingRuleId() bool {
	if o != nil && o.EventProcessingRuleId != nil {
		return true
	}

	return false
}

// SetEventProcessingRuleId gets a reference to the given string and assigns it to the EventProcessingRuleId field.
func (o *Source) SetEventProcessingRuleId(v string) {
	o.EventProcessingRuleId = &v
}

// GetGatewayId returns the GatewayId field value if set, zero value otherwise.
func (o *Source) GetGatewayId() string {
	if o == nil || o.GatewayId == nil {
		var ret string
		return ret
	}
	return *o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetGatewayIdOk() (*string, bool) {
	if o == nil || o.GatewayId == nil {
		return nil, false
	}
	return o.GatewayId, true
}

// HasGatewayId returns a boolean if a field has been set.
func (o *Source) HasGatewayId() bool {
	if o != nil && o.GatewayId != nil {
		return true
	}

	return false
}

// SetGatewayId gets a reference to the given string and assigns it to the GatewayId field.
func (o *Source) SetGatewayId(v string) {
	o.GatewayId = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *Source) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *Source) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *Source) SetNodeId(v string) {
	o.NodeId = &v
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *Source) GetPipelineId() string {
	if o == nil || o.PipelineId == nil {
		var ret string
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Source) GetPipelineIdOk() (*string, bool) {
	if o == nil || o.PipelineId == nil {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *Source) HasPipelineId() bool {
	if o != nil && o.PipelineId != nil {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given string and assigns it to the PipelineId field.
func (o *Source) SetPipelineId(v string) {
	o.PipelineId = &v
}

func (o Source) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActionPolicyId != nil {
		toSerialize["actionPolicyId"] = o.ActionPolicyId
	}
	if o.CampaignId != nil {
		toSerialize["campaignId"] = o.CampaignId
	}
	if o.Connector != nil {
		toSerialize["connector"] = o.Connector
	}
	if o.DeviceId != nil {
		toSerialize["deviceId"] = o.DeviceId
	}
	if o.EventProcessingRuleId != nil {
		toSerialize["eventProcessingRuleId"] = o.EventProcessingRuleId
	}
	if o.GatewayId != nil {
		toSerialize["gatewayId"] = o.GatewayId
	}
	if o.NodeId != nil {
		toSerialize["nodeId"] = o.NodeId
	}
	if o.PipelineId != nil {
		toSerialize["pipelineId"] = o.PipelineId
	}
	return json.Marshal(toSerialize)
}

type NullableSource struct {
	value *Source
	isSet bool
}

func (v NullableSource) Get() *Source {
	return v.value
}

func (v *NullableSource) Set(val *Source) {
	v.value = val
	v.isSet = true
}

func (v NullableSource) IsSet() bool {
	return v.isSet
}

func (v *NullableSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSource(val *Source) *NullableSource {
	return &NullableSource{value: val, isSet: true}
}

func (v NullableSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


