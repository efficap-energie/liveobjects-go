/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// SearchDataMessage struct for SearchDataMessage
type SearchDataMessage struct {
	Created *string `json:"created,omitempty"`
	Extra *map[string]string `json:"extra,omitempty"`
	Id *string `json:"id,omitempty"`
	Location *Location `json:"location,omitempty"`
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
	Model *string `json:"model,omitempty"`
	StreamId *string `json:"streamId,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	Value *map[string]interface{} `json:"value,omitempty"`
}

// NewSearchDataMessage instantiates a new SearchDataMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchDataMessage() *SearchDataMessage {
	this := SearchDataMessage{}
	return &this
}

// NewSearchDataMessageWithDefaults instantiates a new SearchDataMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchDataMessageWithDefaults() *SearchDataMessage {
	this := SearchDataMessage{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *SearchDataMessage) GetCreated() string {
	if o == nil || o.Created == nil {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataMessage) GetCreatedOk() (*string, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *SearchDataMessage) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *SearchDataMessage) SetCreated(v string) {
	o.Created = &v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *SearchDataMessage) GetExtra() map[string]string {
	if o == nil || o.Extra == nil {
		var ret map[string]string
		return ret
	}
	return *o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataMessage) GetExtraOk() (*map[string]string, bool) {
	if o == nil || o.Extra == nil {
		return nil, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *SearchDataMessage) HasExtra() bool {
	if o != nil && o.Extra != nil {
		return true
	}

	return false
}

// SetExtra gets a reference to the given map[string]string and assigns it to the Extra field.
func (o *SearchDataMessage) SetExtra(v map[string]string) {
	o.Extra = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SearchDataMessage) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataMessage) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SearchDataMessage) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SearchDataMessage) SetId(v string) {
	o.Id = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *SearchDataMessage) GetLocation() Location {
	if o == nil || o.Location == nil {
		var ret Location
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataMessage) GetLocationOk() (*Location, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *SearchDataMessage) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given Location and assigns it to the Location field.
func (o *SearchDataMessage) SetLocation(v Location) {
	o.Location = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *SearchDataMessage) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataMessage) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *SearchDataMessage) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *SearchDataMessage) SetMetadata(v map[string]interface{}) {
	o.Metadata = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *SearchDataMessage) GetModel() string {
	if o == nil || o.Model == nil {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataMessage) GetModelOk() (*string, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *SearchDataMessage) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *SearchDataMessage) SetModel(v string) {
	o.Model = &v
}

// GetStreamId returns the StreamId field value if set, zero value otherwise.
func (o *SearchDataMessage) GetStreamId() string {
	if o == nil || o.StreamId == nil {
		var ret string
		return ret
	}
	return *o.StreamId
}

// GetStreamIdOk returns a tuple with the StreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataMessage) GetStreamIdOk() (*string, bool) {
	if o == nil || o.StreamId == nil {
		return nil, false
	}
	return o.StreamId, true
}

// HasStreamId returns a boolean if a field has been set.
func (o *SearchDataMessage) HasStreamId() bool {
	if o != nil && o.StreamId != nil {
		return true
	}

	return false
}

// SetStreamId gets a reference to the given string and assigns it to the StreamId field.
func (o *SearchDataMessage) SetStreamId(v string) {
	o.StreamId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SearchDataMessage) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataMessage) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SearchDataMessage) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SearchDataMessage) SetTags(v []string) {
	o.Tags = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *SearchDataMessage) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataMessage) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SearchDataMessage) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *SearchDataMessage) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SearchDataMessage) GetValue() map[string]interface{} {
	if o == nil || o.Value == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchDataMessage) GetValueOk() (*map[string]interface{}, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SearchDataMessage) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given map[string]interface{} and assigns it to the Value field.
func (o *SearchDataMessage) SetValue(v map[string]interface{}) {
	o.Value = &v
}

func (o SearchDataMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Extra != nil {
		toSerialize["extra"] = o.Extra
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Model != nil {
		toSerialize["model"] = o.Model
	}
	if o.StreamId != nil {
		toSerialize["streamId"] = o.StreamId
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableSearchDataMessage struct {
	value *SearchDataMessage
	isSet bool
}

func (v NullableSearchDataMessage) Get() *SearchDataMessage {
	return v.value
}

func (v *NullableSearchDataMessage) Set(val *SearchDataMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchDataMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchDataMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchDataMessage(val *SearchDataMessage) *NullableSearchDataMessage {
	return &NullableSearchDataMessage{value: val, isSet: true}
}

func (v NullableSearchDataMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchDataMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


