/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// GroupCreateRequest struct for GroupCreateRequest
type GroupCreateRequest struct {
	// group description. Expected string (max 255 characters)
	Description *string `json:"description,omitempty"`
	// reference to group's parent (id). Expected string (max 6 characters)
	ParentId *string `json:"parentId,omitempty"`
	// group's local id in path (unique for groups in same parent).Authorized: letter (lowercase and uppercase), accented characters, number, space, dash, underscore and simple quote. A valid path must respect the following regular expression <code>^[\\wÀ-ÖØ-öø-ÿ' -]{1,255}</code>.Expected string (max 255 characters)
	PathNode string `json:"pathNode"`
}

// NewGroupCreateRequest instantiates a new GroupCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupCreateRequest(pathNode string, ) *GroupCreateRequest {
	this := GroupCreateRequest{}
	this.PathNode = pathNode
	return &this
}

// NewGroupCreateRequestWithDefaults instantiates a new GroupCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupCreateRequestWithDefaults() *GroupCreateRequest {
	this := GroupCreateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GroupCreateRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GroupCreateRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GroupCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *GroupCreateRequest) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupCreateRequest) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *GroupCreateRequest) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *GroupCreateRequest) SetParentId(v string) {
	o.ParentId = &v
}

// GetPathNode returns the PathNode field value
func (o *GroupCreateRequest) GetPathNode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.PathNode
}

// GetPathNodeOk returns a tuple with the PathNode field value
// and a boolean to check if the value has been set.
func (o *GroupCreateRequest) GetPathNodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PathNode, true
}

// SetPathNode sets field value
func (o *GroupCreateRequest) SetPathNode(v string) {
	o.PathNode = v
}

func (o GroupCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if true {
		toSerialize["pathNode"] = o.PathNode
	}
	return json.Marshal(toSerialize)
}

type NullableGroupCreateRequest struct {
	value *GroupCreateRequest
	isSet bool
}

func (v NullableGroupCreateRequest) Get() *GroupCreateRequest {
	return v.value
}

func (v *NullableGroupCreateRequest) Set(val *GroupCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupCreateRequest(val *GroupCreateRequest) *NullableGroupCreateRequest {
	return &NullableGroupCreateRequest{value: val, isSet: true}
}

func (v NullableGroupCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


