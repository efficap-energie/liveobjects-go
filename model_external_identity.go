/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// ExternalIdentity user's external identity
type ExternalIdentity struct {
	// external identity identifier
	Id *string `json:"id,omitempty"`
	// external identity login
	Login *string `json:"login,omitempty"`
	// external identity provider
	Provider *string `json:"provider,omitempty"`
}

// NewExternalIdentity instantiates a new ExternalIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalIdentity() *ExternalIdentity {
	this := ExternalIdentity{}
	return &this
}

// NewExternalIdentityWithDefaults instantiates a new ExternalIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalIdentityWithDefaults() *ExternalIdentity {
	this := ExternalIdentity{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExternalIdentity) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalIdentity) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExternalIdentity) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ExternalIdentity) SetId(v string) {
	o.Id = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *ExternalIdentity) GetLogin() string {
	if o == nil || o.Login == nil {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalIdentity) GetLoginOk() (*string, bool) {
	if o == nil || o.Login == nil {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *ExternalIdentity) HasLogin() bool {
	if o != nil && o.Login != nil {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *ExternalIdentity) SetLogin(v string) {
	o.Login = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ExternalIdentity) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalIdentity) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ExternalIdentity) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *ExternalIdentity) SetProvider(v string) {
	o.Provider = &v
}

func (o ExternalIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Login != nil {
		toSerialize["login"] = o.Login
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	return json.Marshal(toSerialize)
}

type NullableExternalIdentity struct {
	value *ExternalIdentity
	isSet bool
}

func (v NullableExternalIdentity) Get() *ExternalIdentity {
	return v.value
}

func (v *NullableExternalIdentity) Set(val *ExternalIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalIdentity(val *ExternalIdentity) *NullableExternalIdentity {
	return &NullableExternalIdentity{value: val, isSet: true}
}

func (v NullableExternalIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


