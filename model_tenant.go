/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// Tenant struct for Tenant
type Tenant struct {
	AccountType *string `json:"accountType,omitempty"`
	AdminInfo *AdminInfo `json:"adminInfo,omitempty"`
	Country *string `json:"country,omitempty"`
	CreationTs *int64 `json:"creationTs,omitempty"`
	DeletionTs *int64 `json:"deletionTs,omitempty"`
	Id *string `json:"id,omitempty"`
	IdentityProvider *string `json:"identityProvider,omitempty"`
	MainUserId *string `json:"mainUserId,omitempty"`
	MasterApiKeyId *string `json:"masterApiKeyId,omitempty"`
	Name *string `json:"name,omitempty"`
	OfferSettings *map[string]SettingsSection `json:"offerSettings,omitempty"`
	ParentId *string `json:"parentId,omitempty"`
	Properties *map[string]string `json:"properties,omitempty"`
	Siret *string `json:"siret,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	TechnicalSettings *map[string]SettingsSection `json:"technicalSettings,omitempty"`
	UserSettings *map[string]SettingsSection `json:"userSettings,omitempty"`
}

// NewTenant instantiates a new Tenant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenant() *Tenant {
	this := Tenant{}
	return &this
}

// NewTenantWithDefaults instantiates a new Tenant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantWithDefaults() *Tenant {
	this := Tenant{}
	return &this
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *Tenant) GetAccountType() string {
	if o == nil || o.AccountType == nil {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetAccountTypeOk() (*string, bool) {
	if o == nil || o.AccountType == nil {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *Tenant) HasAccountType() bool {
	if o != nil && o.AccountType != nil {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *Tenant) SetAccountType(v string) {
	o.AccountType = &v
}

// GetAdminInfo returns the AdminInfo field value if set, zero value otherwise.
func (o *Tenant) GetAdminInfo() AdminInfo {
	if o == nil || o.AdminInfo == nil {
		var ret AdminInfo
		return ret
	}
	return *o.AdminInfo
}

// GetAdminInfoOk returns a tuple with the AdminInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetAdminInfoOk() (*AdminInfo, bool) {
	if o == nil || o.AdminInfo == nil {
		return nil, false
	}
	return o.AdminInfo, true
}

// HasAdminInfo returns a boolean if a field has been set.
func (o *Tenant) HasAdminInfo() bool {
	if o != nil && o.AdminInfo != nil {
		return true
	}

	return false
}

// SetAdminInfo gets a reference to the given AdminInfo and assigns it to the AdminInfo field.
func (o *Tenant) SetAdminInfo(v AdminInfo) {
	o.AdminInfo = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *Tenant) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *Tenant) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *Tenant) SetCountry(v string) {
	o.Country = &v
}

// GetCreationTs returns the CreationTs field value if set, zero value otherwise.
func (o *Tenant) GetCreationTs() int64 {
	if o == nil || o.CreationTs == nil {
		var ret int64
		return ret
	}
	return *o.CreationTs
}

// GetCreationTsOk returns a tuple with the CreationTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetCreationTsOk() (*int64, bool) {
	if o == nil || o.CreationTs == nil {
		return nil, false
	}
	return o.CreationTs, true
}

// HasCreationTs returns a boolean if a field has been set.
func (o *Tenant) HasCreationTs() bool {
	if o != nil && o.CreationTs != nil {
		return true
	}

	return false
}

// SetCreationTs gets a reference to the given int64 and assigns it to the CreationTs field.
func (o *Tenant) SetCreationTs(v int64) {
	o.CreationTs = &v
}

// GetDeletionTs returns the DeletionTs field value if set, zero value otherwise.
func (o *Tenant) GetDeletionTs() int64 {
	if o == nil || o.DeletionTs == nil {
		var ret int64
		return ret
	}
	return *o.DeletionTs
}

// GetDeletionTsOk returns a tuple with the DeletionTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetDeletionTsOk() (*int64, bool) {
	if o == nil || o.DeletionTs == nil {
		return nil, false
	}
	return o.DeletionTs, true
}

// HasDeletionTs returns a boolean if a field has been set.
func (o *Tenant) HasDeletionTs() bool {
	if o != nil && o.DeletionTs != nil {
		return true
	}

	return false
}

// SetDeletionTs gets a reference to the given int64 and assigns it to the DeletionTs field.
func (o *Tenant) SetDeletionTs(v int64) {
	o.DeletionTs = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Tenant) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Tenant) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Tenant) SetId(v string) {
	o.Id = &v
}

// GetIdentityProvider returns the IdentityProvider field value if set, zero value otherwise.
func (o *Tenant) GetIdentityProvider() string {
	if o == nil || o.IdentityProvider == nil {
		var ret string
		return ret
	}
	return *o.IdentityProvider
}

// GetIdentityProviderOk returns a tuple with the IdentityProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetIdentityProviderOk() (*string, bool) {
	if o == nil || o.IdentityProvider == nil {
		return nil, false
	}
	return o.IdentityProvider, true
}

// HasIdentityProvider returns a boolean if a field has been set.
func (o *Tenant) HasIdentityProvider() bool {
	if o != nil && o.IdentityProvider != nil {
		return true
	}

	return false
}

// SetIdentityProvider gets a reference to the given string and assigns it to the IdentityProvider field.
func (o *Tenant) SetIdentityProvider(v string) {
	o.IdentityProvider = &v
}

// GetMainUserId returns the MainUserId field value if set, zero value otherwise.
func (o *Tenant) GetMainUserId() string {
	if o == nil || o.MainUserId == nil {
		var ret string
		return ret
	}
	return *o.MainUserId
}

// GetMainUserIdOk returns a tuple with the MainUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetMainUserIdOk() (*string, bool) {
	if o == nil || o.MainUserId == nil {
		return nil, false
	}
	return o.MainUserId, true
}

// HasMainUserId returns a boolean if a field has been set.
func (o *Tenant) HasMainUserId() bool {
	if o != nil && o.MainUserId != nil {
		return true
	}

	return false
}

// SetMainUserId gets a reference to the given string and assigns it to the MainUserId field.
func (o *Tenant) SetMainUserId(v string) {
	o.MainUserId = &v
}

// GetMasterApiKeyId returns the MasterApiKeyId field value if set, zero value otherwise.
func (o *Tenant) GetMasterApiKeyId() string {
	if o == nil || o.MasterApiKeyId == nil {
		var ret string
		return ret
	}
	return *o.MasterApiKeyId
}

// GetMasterApiKeyIdOk returns a tuple with the MasterApiKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetMasterApiKeyIdOk() (*string, bool) {
	if o == nil || o.MasterApiKeyId == nil {
		return nil, false
	}
	return o.MasterApiKeyId, true
}

// HasMasterApiKeyId returns a boolean if a field has been set.
func (o *Tenant) HasMasterApiKeyId() bool {
	if o != nil && o.MasterApiKeyId != nil {
		return true
	}

	return false
}

// SetMasterApiKeyId gets a reference to the given string and assigns it to the MasterApiKeyId field.
func (o *Tenant) SetMasterApiKeyId(v string) {
	o.MasterApiKeyId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Tenant) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Tenant) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Tenant) SetName(v string) {
	o.Name = &v
}

// GetOfferSettings returns the OfferSettings field value if set, zero value otherwise.
func (o *Tenant) GetOfferSettings() map[string]SettingsSection {
	if o == nil || o.OfferSettings == nil {
		var ret map[string]SettingsSection
		return ret
	}
	return *o.OfferSettings
}

// GetOfferSettingsOk returns a tuple with the OfferSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetOfferSettingsOk() (*map[string]SettingsSection, bool) {
	if o == nil || o.OfferSettings == nil {
		return nil, false
	}
	return o.OfferSettings, true
}

// HasOfferSettings returns a boolean if a field has been set.
func (o *Tenant) HasOfferSettings() bool {
	if o != nil && o.OfferSettings != nil {
		return true
	}

	return false
}

// SetOfferSettings gets a reference to the given map[string]SettingsSection and assigns it to the OfferSettings field.
func (o *Tenant) SetOfferSettings(v map[string]SettingsSection) {
	o.OfferSettings = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *Tenant) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *Tenant) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *Tenant) SetParentId(v string) {
	o.ParentId = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *Tenant) GetProperties() map[string]string {
	if o == nil || o.Properties == nil {
		var ret map[string]string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetPropertiesOk() (*map[string]string, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *Tenant) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]string and assigns it to the Properties field.
func (o *Tenant) SetProperties(v map[string]string) {
	o.Properties = &v
}

// GetSiret returns the Siret field value if set, zero value otherwise.
func (o *Tenant) GetSiret() string {
	if o == nil || o.Siret == nil {
		var ret string
		return ret
	}
	return *o.Siret
}

// GetSiretOk returns a tuple with the Siret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetSiretOk() (*string, bool) {
	if o == nil || o.Siret == nil {
		return nil, false
	}
	return o.Siret, true
}

// HasSiret returns a boolean if a field has been set.
func (o *Tenant) HasSiret() bool {
	if o != nil && o.Siret != nil {
		return true
	}

	return false
}

// SetSiret gets a reference to the given string and assigns it to the Siret field.
func (o *Tenant) SetSiret(v string) {
	o.Siret = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Tenant) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Tenant) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Tenant) SetTags(v []string) {
	o.Tags = &v
}

// GetTechnicalSettings returns the TechnicalSettings field value if set, zero value otherwise.
func (o *Tenant) GetTechnicalSettings() map[string]SettingsSection {
	if o == nil || o.TechnicalSettings == nil {
		var ret map[string]SettingsSection
		return ret
	}
	return *o.TechnicalSettings
}

// GetTechnicalSettingsOk returns a tuple with the TechnicalSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetTechnicalSettingsOk() (*map[string]SettingsSection, bool) {
	if o == nil || o.TechnicalSettings == nil {
		return nil, false
	}
	return o.TechnicalSettings, true
}

// HasTechnicalSettings returns a boolean if a field has been set.
func (o *Tenant) HasTechnicalSettings() bool {
	if o != nil && o.TechnicalSettings != nil {
		return true
	}

	return false
}

// SetTechnicalSettings gets a reference to the given map[string]SettingsSection and assigns it to the TechnicalSettings field.
func (o *Tenant) SetTechnicalSettings(v map[string]SettingsSection) {
	o.TechnicalSettings = &v
}

// GetUserSettings returns the UserSettings field value if set, zero value otherwise.
func (o *Tenant) GetUserSettings() map[string]SettingsSection {
	if o == nil || o.UserSettings == nil {
		var ret map[string]SettingsSection
		return ret
	}
	return *o.UserSettings
}

// GetUserSettingsOk returns a tuple with the UserSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetUserSettingsOk() (*map[string]SettingsSection, bool) {
	if o == nil || o.UserSettings == nil {
		return nil, false
	}
	return o.UserSettings, true
}

// HasUserSettings returns a boolean if a field has been set.
func (o *Tenant) HasUserSettings() bool {
	if o != nil && o.UserSettings != nil {
		return true
	}

	return false
}

// SetUserSettings gets a reference to the given map[string]SettingsSection and assigns it to the UserSettings field.
func (o *Tenant) SetUserSettings(v map[string]SettingsSection) {
	o.UserSettings = &v
}

func (o Tenant) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountType != nil {
		toSerialize["accountType"] = o.AccountType
	}
	if o.AdminInfo != nil {
		toSerialize["adminInfo"] = o.AdminInfo
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.CreationTs != nil {
		toSerialize["creationTs"] = o.CreationTs
	}
	if o.DeletionTs != nil {
		toSerialize["deletionTs"] = o.DeletionTs
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IdentityProvider != nil {
		toSerialize["identityProvider"] = o.IdentityProvider
	}
	if o.MainUserId != nil {
		toSerialize["mainUserId"] = o.MainUserId
	}
	if o.MasterApiKeyId != nil {
		toSerialize["masterApiKeyId"] = o.MasterApiKeyId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OfferSettings != nil {
		toSerialize["offerSettings"] = o.OfferSettings
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.Siret != nil {
		toSerialize["siret"] = o.Siret
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TechnicalSettings != nil {
		toSerialize["technicalSettings"] = o.TechnicalSettings
	}
	if o.UserSettings != nil {
		toSerialize["userSettings"] = o.UserSettings
	}
	return json.Marshal(toSerialize)
}

type NullableTenant struct {
	value *Tenant
	isSet bool
}

func (v NullableTenant) Get() *Tenant {
	return v.value
}

func (v *NullableTenant) Set(val *Tenant) {
	v.value = val
	v.isSet = true
}

func (v NullableTenant) IsSet() bool {
	return v.isSet
}

func (v *NullableTenant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenant(val *Tenant) *NullableTenant {
	return &NullableTenant{value: val, isSet: true}
}

func (v NullableTenant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


