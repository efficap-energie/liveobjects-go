/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// CampaignOptions struct for CampaignOptions
type CampaignOptions struct {
	// Devices matching the target filter can be dynamically added to the campaign
	DynamicallyAddEligibleDevice *bool `json:"dynamicallyAddEligibleDevice,omitempty"`
}

// NewCampaignOptions instantiates a new CampaignOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignOptions() *CampaignOptions {
	this := CampaignOptions{}
	return &this
}

// NewCampaignOptionsWithDefaults instantiates a new CampaignOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignOptionsWithDefaults() *CampaignOptions {
	this := CampaignOptions{}
	return &this
}

// GetDynamicallyAddEligibleDevice returns the DynamicallyAddEligibleDevice field value if set, zero value otherwise.
func (o *CampaignOptions) GetDynamicallyAddEligibleDevice() bool {
	if o == nil || o.DynamicallyAddEligibleDevice == nil {
		var ret bool
		return ret
	}
	return *o.DynamicallyAddEligibleDevice
}

// GetDynamicallyAddEligibleDeviceOk returns a tuple with the DynamicallyAddEligibleDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOptions) GetDynamicallyAddEligibleDeviceOk() (*bool, bool) {
	if o == nil || o.DynamicallyAddEligibleDevice == nil {
		return nil, false
	}
	return o.DynamicallyAddEligibleDevice, true
}

// HasDynamicallyAddEligibleDevice returns a boolean if a field has been set.
func (o *CampaignOptions) HasDynamicallyAddEligibleDevice() bool {
	if o != nil && o.DynamicallyAddEligibleDevice != nil {
		return true
	}

	return false
}

// SetDynamicallyAddEligibleDevice gets a reference to the given bool and assigns it to the DynamicallyAddEligibleDevice field.
func (o *CampaignOptions) SetDynamicallyAddEligibleDevice(v bool) {
	o.DynamicallyAddEligibleDevice = &v
}

func (o CampaignOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DynamicallyAddEligibleDevice != nil {
		toSerialize["dynamicallyAddEligibleDevice"] = o.DynamicallyAddEligibleDevice
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignOptions struct {
	value *CampaignOptions
	isSet bool
}

func (v NullableCampaignOptions) Get() *CampaignOptions {
	return v.value
}

func (v *NullableCampaignOptions) Set(val *CampaignOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignOptions(val *CampaignOptions) *NullableCampaignOptions {
	return &NullableCampaignOptions{value: val, isSet: true}
}

func (v NullableCampaignOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


