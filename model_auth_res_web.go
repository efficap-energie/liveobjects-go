/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// AuthResWeb struct for AuthResWeb
type AuthResWeb struct {
	Admin *bool `json:"admin,omitempty"`
	ApiKey *ApiKey `json:"apiKey,omitempty"`
}

// NewAuthResWeb instantiates a new AuthResWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthResWeb() *AuthResWeb {
	this := AuthResWeb{}
	return &this
}

// NewAuthResWebWithDefaults instantiates a new AuthResWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthResWebWithDefaults() *AuthResWeb {
	this := AuthResWeb{}
	return &this
}

// GetAdmin returns the Admin field value if set, zero value otherwise.
func (o *AuthResWeb) GetAdmin() bool {
	if o == nil || o.Admin == nil {
		var ret bool
		return ret
	}
	return *o.Admin
}

// GetAdminOk returns a tuple with the Admin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthResWeb) GetAdminOk() (*bool, bool) {
	if o == nil || o.Admin == nil {
		return nil, false
	}
	return o.Admin, true
}

// HasAdmin returns a boolean if a field has been set.
func (o *AuthResWeb) HasAdmin() bool {
	if o != nil && o.Admin != nil {
		return true
	}

	return false
}

// SetAdmin gets a reference to the given bool and assigns it to the Admin field.
func (o *AuthResWeb) SetAdmin(v bool) {
	o.Admin = &v
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *AuthResWeb) GetApiKey() ApiKey {
	if o == nil || o.ApiKey == nil {
		var ret ApiKey
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthResWeb) GetApiKeyOk() (*ApiKey, bool) {
	if o == nil || o.ApiKey == nil {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *AuthResWeb) HasApiKey() bool {
	if o != nil && o.ApiKey != nil {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given ApiKey and assigns it to the ApiKey field.
func (o *AuthResWeb) SetApiKey(v ApiKey) {
	o.ApiKey = &v
}

func (o AuthResWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Admin != nil {
		toSerialize["admin"] = o.Admin
	}
	if o.ApiKey != nil {
		toSerialize["apiKey"] = o.ApiKey
	}
	return json.Marshal(toSerialize)
}

type NullableAuthResWeb struct {
	value *AuthResWeb
	isSet bool
}

func (v NullableAuthResWeb) Get() *AuthResWeb {
	return v.value
}

func (v *NullableAuthResWeb) Set(val *AuthResWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthResWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthResWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthResWeb(val *AuthResWeb) *NullableAuthResWeb {
	return &NullableAuthResWeb{value: val, isSet: true}
}

func (v NullableAuthResWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthResWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


