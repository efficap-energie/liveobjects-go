/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// UpdatePasswordWithTokenReqWeb body of user update password With token request
type UpdatePasswordWithTokenReqWeb struct {
	// security captcha got from user
	Captcha string `json:"captcha"`
	// token security captcha waited
	CaptchaToken string `json:"captchaToken"`
	// tenant company
	Company string `json:"company"`
	// tenant main user first name
	FirstName string `json:"firstName"`
	// tenant main user last name
	LastName string `json:"lastName"`
	// user email
	Login string `json:"login"`
	// new user password
	Password string `json:"password"`
	// tenant main user phone number
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// token identifier to for mail change
	TokenId string `json:"tokenId"`
}

// NewUpdatePasswordWithTokenReqWeb instantiates a new UpdatePasswordWithTokenReqWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePasswordWithTokenReqWeb(captcha string, captchaToken string, company string, firstName string, lastName string, login string, password string, tokenId string, ) *UpdatePasswordWithTokenReqWeb {
	this := UpdatePasswordWithTokenReqWeb{}
	this.Captcha = captcha
	this.CaptchaToken = captchaToken
	this.Company = company
	this.FirstName = firstName
	this.LastName = lastName
	this.Login = login
	this.Password = password
	this.TokenId = tokenId
	return &this
}

// NewUpdatePasswordWithTokenReqWebWithDefaults instantiates a new UpdatePasswordWithTokenReqWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePasswordWithTokenReqWebWithDefaults() *UpdatePasswordWithTokenReqWeb {
	this := UpdatePasswordWithTokenReqWeb{}
	return &this
}

// GetCaptcha returns the Captcha field value
func (o *UpdatePasswordWithTokenReqWeb) GetCaptcha() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Captcha
}

// GetCaptchaOk returns a tuple with the Captcha field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordWithTokenReqWeb) GetCaptchaOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Captcha, true
}

// SetCaptcha sets field value
func (o *UpdatePasswordWithTokenReqWeb) SetCaptcha(v string) {
	o.Captcha = v
}

// GetCaptchaToken returns the CaptchaToken field value
func (o *UpdatePasswordWithTokenReqWeb) GetCaptchaToken() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CaptchaToken
}

// GetCaptchaTokenOk returns a tuple with the CaptchaToken field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordWithTokenReqWeb) GetCaptchaTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CaptchaToken, true
}

// SetCaptchaToken sets field value
func (o *UpdatePasswordWithTokenReqWeb) SetCaptchaToken(v string) {
	o.CaptchaToken = v
}

// GetCompany returns the Company field value
func (o *UpdatePasswordWithTokenReqWeb) GetCompany() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordWithTokenReqWeb) GetCompanyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *UpdatePasswordWithTokenReqWeb) SetCompany(v string) {
	o.Company = v
}

// GetFirstName returns the FirstName field value
func (o *UpdatePasswordWithTokenReqWeb) GetFirstName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordWithTokenReqWeb) GetFirstNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *UpdatePasswordWithTokenReqWeb) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *UpdatePasswordWithTokenReqWeb) GetLastName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordWithTokenReqWeb) GetLastNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *UpdatePasswordWithTokenReqWeb) SetLastName(v string) {
	o.LastName = v
}

// GetLogin returns the Login field value
func (o *UpdatePasswordWithTokenReqWeb) GetLogin() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Login
}

// GetLoginOk returns a tuple with the Login field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordWithTokenReqWeb) GetLoginOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Login, true
}

// SetLogin sets field value
func (o *UpdatePasswordWithTokenReqWeb) SetLogin(v string) {
	o.Login = v
}

// GetPassword returns the Password field value
func (o *UpdatePasswordWithTokenReqWeb) GetPassword() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordWithTokenReqWeb) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *UpdatePasswordWithTokenReqWeb) SetPassword(v string) {
	o.Password = v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *UpdatePasswordWithTokenReqWeb) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePasswordWithTokenReqWeb) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *UpdatePasswordWithTokenReqWeb) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *UpdatePasswordWithTokenReqWeb) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetTokenId returns the TokenId field value
func (o *UpdatePasswordWithTokenReqWeb) GetTokenId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordWithTokenReqWeb) GetTokenIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenId, true
}

// SetTokenId sets field value
func (o *UpdatePasswordWithTokenReqWeb) SetTokenId(v string) {
	o.TokenId = v
}

func (o UpdatePasswordWithTokenReqWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["captcha"] = o.Captcha
	}
	if true {
		toSerialize["captchaToken"] = o.CaptchaToken
	}
	if true {
		toSerialize["company"] = o.Company
	}
	if true {
		toSerialize["firstName"] = o.FirstName
	}
	if true {
		toSerialize["lastName"] = o.LastName
	}
	if true {
		toSerialize["login"] = o.Login
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if o.PhoneNumber != nil {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if true {
		toSerialize["tokenId"] = o.TokenId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdatePasswordWithTokenReqWeb struct {
	value *UpdatePasswordWithTokenReqWeb
	isSet bool
}

func (v NullableUpdatePasswordWithTokenReqWeb) Get() *UpdatePasswordWithTokenReqWeb {
	return v.value
}

func (v *NullableUpdatePasswordWithTokenReqWeb) Set(val *UpdatePasswordWithTokenReqWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePasswordWithTokenReqWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePasswordWithTokenReqWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePasswordWithTokenReqWeb(val *UpdatePasswordWithTokenReqWeb) *NullableUpdatePasswordWithTokenReqWeb {
	return &NullableUpdatePasswordWithTokenReqWeb{value: val, isSet: true}
}

func (v NullableUpdatePasswordWithTokenReqWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePasswordWithTokenReqWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


