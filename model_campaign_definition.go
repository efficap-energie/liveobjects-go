/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// CampaignDefinition struct for CampaignDefinition
type CampaignDefinition struct {
	// Campaign description
	Description *string `json:"description,omitempty"`
	// Campaign name
	Name string `json:"name"`
	// List of operations to be executed
	Operations []CampaignOperation `json:"operations"`
	Options *CampaignOptions `json:"options,omitempty"`
	Planning CampaignPlanning `json:"planning"`
	Targets DeviceSelector `json:"targets"`
}

// NewCampaignDefinition instantiates a new CampaignDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignDefinition(name string, operations []CampaignOperation, planning CampaignPlanning, targets DeviceSelector, ) *CampaignDefinition {
	this := CampaignDefinition{}
	this.Name = name
	this.Operations = operations
	this.Planning = planning
	this.Targets = targets
	return &this
}

// NewCampaignDefinitionWithDefaults instantiates a new CampaignDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignDefinitionWithDefaults() *CampaignDefinition {
	this := CampaignDefinition{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CampaignDefinition) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDefinition) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CampaignDefinition) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CampaignDefinition) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *CampaignDefinition) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CampaignDefinition) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CampaignDefinition) SetName(v string) {
	o.Name = v
}

// GetOperations returns the Operations field value
func (o *CampaignDefinition) GetOperations() []CampaignOperation {
	if o == nil  {
		var ret []CampaignOperation
		return ret
	}

	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value
// and a boolean to check if the value has been set.
func (o *CampaignDefinition) GetOperationsOk() (*[]CampaignOperation, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Operations, true
}

// SetOperations sets field value
func (o *CampaignDefinition) SetOperations(v []CampaignOperation) {
	o.Operations = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CampaignDefinition) GetOptions() CampaignOptions {
	if o == nil || o.Options == nil {
		var ret CampaignOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignDefinition) GetOptionsOk() (*CampaignOptions, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CampaignDefinition) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given CampaignOptions and assigns it to the Options field.
func (o *CampaignDefinition) SetOptions(v CampaignOptions) {
	o.Options = &v
}

// GetPlanning returns the Planning field value
func (o *CampaignDefinition) GetPlanning() CampaignPlanning {
	if o == nil  {
		var ret CampaignPlanning
		return ret
	}

	return o.Planning
}

// GetPlanningOk returns a tuple with the Planning field value
// and a boolean to check if the value has been set.
func (o *CampaignDefinition) GetPlanningOk() (*CampaignPlanning, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Planning, true
}

// SetPlanning sets field value
func (o *CampaignDefinition) SetPlanning(v CampaignPlanning) {
	o.Planning = v
}

// GetTargets returns the Targets field value
func (o *CampaignDefinition) GetTargets() DeviceSelector {
	if o == nil  {
		var ret DeviceSelector
		return ret
	}

	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value
// and a boolean to check if the value has been set.
func (o *CampaignDefinition) GetTargetsOk() (*DeviceSelector, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Targets, true
}

// SetTargets sets field value
func (o *CampaignDefinition) SetTargets(v DeviceSelector) {
	o.Targets = v
}

func (o CampaignDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["operations"] = o.Operations
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if true {
		toSerialize["planning"] = o.Planning
	}
	if true {
		toSerialize["targets"] = o.Targets
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignDefinition struct {
	value *CampaignDefinition
	isSet bool
}

func (v NullableCampaignDefinition) Get() *CampaignDefinition {
	return v.value
}

func (v *NullableCampaignDefinition) Set(val *CampaignDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignDefinition(val *CampaignDefinition) *NullableCampaignDefinition {
	return &NullableCampaignDefinition{value: val, isSet: true}
}

func (v NullableCampaignDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


