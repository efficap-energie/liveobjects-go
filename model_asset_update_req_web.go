/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// AssetUpdateReqWeb request to update the details of a registered asset
type AssetUpdateReqWeb struct {
	// user-readable description of the asset. Expected string (max 500 characters)
	Description *string `json:"description,omitempty"`
	// identifier of the group this asset is associated with. Expected string (max 6 characters)
	GroupId *string `json:"groupId,omitempty"`
	// path of the group this asset is associated with. Authorized: letter (lowercase and uppercase), accented characters, number, space, dash, underscore and simple quote. A valid path must respect the following regular expression <code>^[\\wÀ-ÖØ-öø-ÿ' -]{1,255}</code>.Expected string (max 255 characters)
	GroupPath *string `json:"groupPath,omitempty"`
	// asset user-readable name (for display in web portal). Expected string (max 255 characters)
	Name *string `json:"name,omitempty"`
	// map of key/value string pairs detailed properties of the device. Max number of properties depends of your offer settings. A property name must not include following characters <code>$.</code> and max length is 128. Invalid property names are : 'class', '_class'. Property value max length is 256.
	Properties *map[string]string `json:"properties,omitempty"`
	// series of tags associated with the asset. Max number of tags depends of your offer settings. Tag value max length is 32.
	Tags *[]string `json:"tags,omitempty"`
}

// NewAssetUpdateReqWeb instantiates a new AssetUpdateReqWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetUpdateReqWeb() *AssetUpdateReqWeb {
	this := AssetUpdateReqWeb{}
	return &this
}

// NewAssetUpdateReqWebWithDefaults instantiates a new AssetUpdateReqWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetUpdateReqWebWithDefaults() *AssetUpdateReqWeb {
	this := AssetUpdateReqWeb{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AssetUpdateReqWeb) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetUpdateReqWeb) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AssetUpdateReqWeb) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AssetUpdateReqWeb) SetDescription(v string) {
	o.Description = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *AssetUpdateReqWeb) GetGroupId() string {
	if o == nil || o.GroupId == nil {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetUpdateReqWeb) GetGroupIdOk() (*string, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *AssetUpdateReqWeb) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *AssetUpdateReqWeb) SetGroupId(v string) {
	o.GroupId = &v
}

// GetGroupPath returns the GroupPath field value if set, zero value otherwise.
func (o *AssetUpdateReqWeb) GetGroupPath() string {
	if o == nil || o.GroupPath == nil {
		var ret string
		return ret
	}
	return *o.GroupPath
}

// GetGroupPathOk returns a tuple with the GroupPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetUpdateReqWeb) GetGroupPathOk() (*string, bool) {
	if o == nil || o.GroupPath == nil {
		return nil, false
	}
	return o.GroupPath, true
}

// HasGroupPath returns a boolean if a field has been set.
func (o *AssetUpdateReqWeb) HasGroupPath() bool {
	if o != nil && o.GroupPath != nil {
		return true
	}

	return false
}

// SetGroupPath gets a reference to the given string and assigns it to the GroupPath field.
func (o *AssetUpdateReqWeb) SetGroupPath(v string) {
	o.GroupPath = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AssetUpdateReqWeb) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetUpdateReqWeb) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AssetUpdateReqWeb) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AssetUpdateReqWeb) SetName(v string) {
	o.Name = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *AssetUpdateReqWeb) GetProperties() map[string]string {
	if o == nil || o.Properties == nil {
		var ret map[string]string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetUpdateReqWeb) GetPropertiesOk() (*map[string]string, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *AssetUpdateReqWeb) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]string and assigns it to the Properties field.
func (o *AssetUpdateReqWeb) SetProperties(v map[string]string) {
	o.Properties = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *AssetUpdateReqWeb) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetUpdateReqWeb) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *AssetUpdateReqWeb) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *AssetUpdateReqWeb) SetTags(v []string) {
	o.Tags = &v
}

func (o AssetUpdateReqWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	if o.GroupPath != nil {
		toSerialize["groupPath"] = o.GroupPath
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableAssetUpdateReqWeb struct {
	value *AssetUpdateReqWeb
	isSet bool
}

func (v NullableAssetUpdateReqWeb) Get() *AssetUpdateReqWeb {
	return v.value
}

func (v *NullableAssetUpdateReqWeb) Set(val *AssetUpdateReqWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetUpdateReqWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetUpdateReqWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetUpdateReqWeb(val *AssetUpdateReqWeb) *NullableAssetUpdateReqWeb {
	return &NullableAssetUpdateReqWeb{value: val, isSet: true}
}

func (v NullableAssetUpdateReqWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetUpdateReqWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


