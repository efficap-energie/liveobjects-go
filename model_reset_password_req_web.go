/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// ResetPasswordReqWeb body of user reset password request
type ResetPasswordReqWeb struct {
	// Security captcha got from user
	Captcha string `json:"captcha"`
	// Security captcha waited token
	CaptchaToken string `json:"captchaToken"`
	// the user login
	UserLogin string `json:"userLogin"`
}

// NewResetPasswordReqWeb instantiates a new ResetPasswordReqWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetPasswordReqWeb(captcha string, captchaToken string, userLogin string, ) *ResetPasswordReqWeb {
	this := ResetPasswordReqWeb{}
	this.Captcha = captcha
	this.CaptchaToken = captchaToken
	this.UserLogin = userLogin
	return &this
}

// NewResetPasswordReqWebWithDefaults instantiates a new ResetPasswordReqWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetPasswordReqWebWithDefaults() *ResetPasswordReqWeb {
	this := ResetPasswordReqWeb{}
	return &this
}

// GetCaptcha returns the Captcha field value
func (o *ResetPasswordReqWeb) GetCaptcha() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Captcha
}

// GetCaptchaOk returns a tuple with the Captcha field value
// and a boolean to check if the value has been set.
func (o *ResetPasswordReqWeb) GetCaptchaOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Captcha, true
}

// SetCaptcha sets field value
func (o *ResetPasswordReqWeb) SetCaptcha(v string) {
	o.Captcha = v
}

// GetCaptchaToken returns the CaptchaToken field value
func (o *ResetPasswordReqWeb) GetCaptchaToken() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.CaptchaToken
}

// GetCaptchaTokenOk returns a tuple with the CaptchaToken field value
// and a boolean to check if the value has been set.
func (o *ResetPasswordReqWeb) GetCaptchaTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CaptchaToken, true
}

// SetCaptchaToken sets field value
func (o *ResetPasswordReqWeb) SetCaptchaToken(v string) {
	o.CaptchaToken = v
}

// GetUserLogin returns the UserLogin field value
func (o *ResetPasswordReqWeb) GetUserLogin() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.UserLogin
}

// GetUserLoginOk returns a tuple with the UserLogin field value
// and a boolean to check if the value has been set.
func (o *ResetPasswordReqWeb) GetUserLoginOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UserLogin, true
}

// SetUserLogin sets field value
func (o *ResetPasswordReqWeb) SetUserLogin(v string) {
	o.UserLogin = v
}

func (o ResetPasswordReqWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["captcha"] = o.Captcha
	}
	if true {
		toSerialize["captchaToken"] = o.CaptchaToken
	}
	if true {
		toSerialize["userLogin"] = o.UserLogin
	}
	return json.Marshal(toSerialize)
}

type NullableResetPasswordReqWeb struct {
	value *ResetPasswordReqWeb
	isSet bool
}

func (v NullableResetPasswordReqWeb) Get() *ResetPasswordReqWeb {
	return v.value
}

func (v *NullableResetPasswordReqWeb) Set(val *ResetPasswordReqWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableResetPasswordReqWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableResetPasswordReqWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetPasswordReqWeb(val *ResetPasswordReqWeb) *NullableResetPasswordReqWeb {
	return &NullableResetPasswordReqWeb{value: val, isSet: true}
}

func (v NullableResetPasswordReqWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetPasswordReqWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


