/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// ApiKeyUpdateReqWeb ApiKey in Update Request
type ApiKeyUpdateReqWeb struct {
	// Status
	Active *bool `json:"active,omitempty"`
	ClientCert *ClientCertificatesConfiguration `json:"clientCert,omitempty"`
	// Timestamp until which the debug mode will be activated
	DebugModeEndTs *int64 `json:"debugModeEndTs,omitempty"`
	// Short description of the key. Expected string (limited to 140 first characters)
	Description *string `json:"description,omitempty"`
	// Timestamp from which the key is valid
	From *int64 `json:"from,omitempty"`
	// Title of the key. Expected string (limited to 24 first characters)
	Label *string `json:"label,omitempty"`
	// Specify the request is for a MasterKey (only update available for admin)
	MasterKey *bool `json:"masterKey,omitempty"`
	// Request a random value regeneration
	RegenerateValue *bool `json:"regenerateValue,omitempty"`
	// list of API key associated Roles. Basic roles are \"USER_R\", \"USER_W\", \"API_KEY_R\", \"API_KEY_W\" or any role string supplied at tenant account creation time. Expected array of role name (max all roles, role value max 255 characters)
	Roles *[]string `json:"roles,omitempty"`
	Scope *ScopeApplication `json:"scope,omitempty"`
	// Maximum inactivity period (ms)
	SessionTtl *int64 `json:"sessionTtl,omitempty"`
	// identifier of tenant account this API key belongs to. Expected identifier (max 24 characters)
	TenantId *string `json:"tenantId,omitempty"`
	// Timestamp until which the key is valid
	To *int64 `json:"to,omitempty"`
}

// NewApiKeyUpdateReqWeb instantiates a new ApiKeyUpdateReqWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyUpdateReqWeb() *ApiKeyUpdateReqWeb {
	this := ApiKeyUpdateReqWeb{}
	return &this
}

// NewApiKeyUpdateReqWebWithDefaults instantiates a new ApiKeyUpdateReqWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyUpdateReqWebWithDefaults() *ApiKeyUpdateReqWeb {
	this := ApiKeyUpdateReqWeb{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *ApiKeyUpdateReqWeb) SetActive(v bool) {
	o.Active = &v
}

// GetClientCert returns the ClientCert field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetClientCert() ClientCertificatesConfiguration {
	if o == nil || o.ClientCert == nil {
		var ret ClientCertificatesConfiguration
		return ret
	}
	return *o.ClientCert
}

// GetClientCertOk returns a tuple with the ClientCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetClientCertOk() (*ClientCertificatesConfiguration, bool) {
	if o == nil || o.ClientCert == nil {
		return nil, false
	}
	return o.ClientCert, true
}

// HasClientCert returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasClientCert() bool {
	if o != nil && o.ClientCert != nil {
		return true
	}

	return false
}

// SetClientCert gets a reference to the given ClientCertificatesConfiguration and assigns it to the ClientCert field.
func (o *ApiKeyUpdateReqWeb) SetClientCert(v ClientCertificatesConfiguration) {
	o.ClientCert = &v
}

// GetDebugModeEndTs returns the DebugModeEndTs field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetDebugModeEndTs() int64 {
	if o == nil || o.DebugModeEndTs == nil {
		var ret int64
		return ret
	}
	return *o.DebugModeEndTs
}

// GetDebugModeEndTsOk returns a tuple with the DebugModeEndTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetDebugModeEndTsOk() (*int64, bool) {
	if o == nil || o.DebugModeEndTs == nil {
		return nil, false
	}
	return o.DebugModeEndTs, true
}

// HasDebugModeEndTs returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasDebugModeEndTs() bool {
	if o != nil && o.DebugModeEndTs != nil {
		return true
	}

	return false
}

// SetDebugModeEndTs gets a reference to the given int64 and assigns it to the DebugModeEndTs field.
func (o *ApiKeyUpdateReqWeb) SetDebugModeEndTs(v int64) {
	o.DebugModeEndTs = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApiKeyUpdateReqWeb) SetDescription(v string) {
	o.Description = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetFrom() int64 {
	if o == nil || o.From == nil {
		var ret int64
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetFromOk() (*int64, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given int64 and assigns it to the From field.
func (o *ApiKeyUpdateReqWeb) SetFrom(v int64) {
	o.From = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ApiKeyUpdateReqWeb) SetLabel(v string) {
	o.Label = &v
}

// GetMasterKey returns the MasterKey field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetMasterKey() bool {
	if o == nil || o.MasterKey == nil {
		var ret bool
		return ret
	}
	return *o.MasterKey
}

// GetMasterKeyOk returns a tuple with the MasterKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetMasterKeyOk() (*bool, bool) {
	if o == nil || o.MasterKey == nil {
		return nil, false
	}
	return o.MasterKey, true
}

// HasMasterKey returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasMasterKey() bool {
	if o != nil && o.MasterKey != nil {
		return true
	}

	return false
}

// SetMasterKey gets a reference to the given bool and assigns it to the MasterKey field.
func (o *ApiKeyUpdateReqWeb) SetMasterKey(v bool) {
	o.MasterKey = &v
}

// GetRegenerateValue returns the RegenerateValue field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetRegenerateValue() bool {
	if o == nil || o.RegenerateValue == nil {
		var ret bool
		return ret
	}
	return *o.RegenerateValue
}

// GetRegenerateValueOk returns a tuple with the RegenerateValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetRegenerateValueOk() (*bool, bool) {
	if o == nil || o.RegenerateValue == nil {
		return nil, false
	}
	return o.RegenerateValue, true
}

// HasRegenerateValue returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasRegenerateValue() bool {
	if o != nil && o.RegenerateValue != nil {
		return true
	}

	return false
}

// SetRegenerateValue gets a reference to the given bool and assigns it to the RegenerateValue field.
func (o *ApiKeyUpdateReqWeb) SetRegenerateValue(v bool) {
	o.RegenerateValue = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetRoles() []string {
	if o == nil || o.Roles == nil {
		var ret []string
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetRolesOk() (*[]string, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *ApiKeyUpdateReqWeb) SetRoles(v []string) {
	o.Roles = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetScope() ScopeApplication {
	if o == nil || o.Scope == nil {
		var ret ScopeApplication
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetScopeOk() (*ScopeApplication, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given ScopeApplication and assigns it to the Scope field.
func (o *ApiKeyUpdateReqWeb) SetScope(v ScopeApplication) {
	o.Scope = &v
}

// GetSessionTtl returns the SessionTtl field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetSessionTtl() int64 {
	if o == nil || o.SessionTtl == nil {
		var ret int64
		return ret
	}
	return *o.SessionTtl
}

// GetSessionTtlOk returns a tuple with the SessionTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetSessionTtlOk() (*int64, bool) {
	if o == nil || o.SessionTtl == nil {
		return nil, false
	}
	return o.SessionTtl, true
}

// HasSessionTtl returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasSessionTtl() bool {
	if o != nil && o.SessionTtl != nil {
		return true
	}

	return false
}

// SetSessionTtl gets a reference to the given int64 and assigns it to the SessionTtl field.
func (o *ApiKeyUpdateReqWeb) SetSessionTtl(v int64) {
	o.SessionTtl = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ApiKeyUpdateReqWeb) SetTenantId(v string) {
	o.TenantId = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *ApiKeyUpdateReqWeb) GetTo() int64 {
	if o == nil || o.To == nil {
		var ret int64
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeyUpdateReqWeb) GetToOk() (*int64, bool) {
	if o == nil || o.To == nil {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *ApiKeyUpdateReqWeb) HasTo() bool {
	if o != nil && o.To != nil {
		return true
	}

	return false
}

// SetTo gets a reference to the given int64 and assigns it to the To field.
func (o *ApiKeyUpdateReqWeb) SetTo(v int64) {
	o.To = &v
}

func (o ApiKeyUpdateReqWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.ClientCert != nil {
		toSerialize["clientCert"] = o.ClientCert
	}
	if o.DebugModeEndTs != nil {
		toSerialize["debugModeEndTs"] = o.DebugModeEndTs
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.MasterKey != nil {
		toSerialize["masterKey"] = o.MasterKey
	}
	if o.RegenerateValue != nil {
		toSerialize["regenerateValue"] = o.RegenerateValue
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.SessionTtl != nil {
		toSerialize["sessionTtl"] = o.SessionTtl
	}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullableApiKeyUpdateReqWeb struct {
	value *ApiKeyUpdateReqWeb
	isSet bool
}

func (v NullableApiKeyUpdateReqWeb) Get() *ApiKeyUpdateReqWeb {
	return v.value
}

func (v *NullableApiKeyUpdateReqWeb) Set(val *ApiKeyUpdateReqWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyUpdateReqWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyUpdateReqWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyUpdateReqWeb(val *ApiKeyUpdateReqWeb) *NullableApiKeyUpdateReqWeb {
	return &NullableApiKeyUpdateReqWeb{value: val, isSet: true}
}

func (v NullableApiKeyUpdateReqWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyUpdateReqWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


