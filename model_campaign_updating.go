/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// CampaignUpdating struct for CampaignUpdating
type CampaignUpdating struct {
	// Campaign description
	Description *string `json:"description,omitempty"`
	// Campaign name
	Name *string `json:"name,omitempty"`
	// List of operations to be executed
	Operations *[]CampaignOperation `json:"operations,omitempty"`
	Options *CampaignOptions `json:"options,omitempty"`
	Planning *CampaignPlanning `json:"planning,omitempty"`
	Targets *DeviceSelector `json:"targets,omitempty"`
}

// NewCampaignUpdating instantiates a new CampaignUpdating object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignUpdating() *CampaignUpdating {
	this := CampaignUpdating{}
	return &this
}

// NewCampaignUpdatingWithDefaults instantiates a new CampaignUpdating object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignUpdatingWithDefaults() *CampaignUpdating {
	this := CampaignUpdating{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CampaignUpdating) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdating) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CampaignUpdating) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CampaignUpdating) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CampaignUpdating) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdating) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CampaignUpdating) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CampaignUpdating) SetName(v string) {
	o.Name = &v
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *CampaignUpdating) GetOperations() []CampaignOperation {
	if o == nil || o.Operations == nil {
		var ret []CampaignOperation
		return ret
	}
	return *o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdating) GetOperationsOk() (*[]CampaignOperation, bool) {
	if o == nil || o.Operations == nil {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *CampaignUpdating) HasOperations() bool {
	if o != nil && o.Operations != nil {
		return true
	}

	return false
}

// SetOperations gets a reference to the given []CampaignOperation and assigns it to the Operations field.
func (o *CampaignUpdating) SetOperations(v []CampaignOperation) {
	o.Operations = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CampaignUpdating) GetOptions() CampaignOptions {
	if o == nil || o.Options == nil {
		var ret CampaignOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdating) GetOptionsOk() (*CampaignOptions, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CampaignUpdating) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given CampaignOptions and assigns it to the Options field.
func (o *CampaignUpdating) SetOptions(v CampaignOptions) {
	o.Options = &v
}

// GetPlanning returns the Planning field value if set, zero value otherwise.
func (o *CampaignUpdating) GetPlanning() CampaignPlanning {
	if o == nil || o.Planning == nil {
		var ret CampaignPlanning
		return ret
	}
	return *o.Planning
}

// GetPlanningOk returns a tuple with the Planning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdating) GetPlanningOk() (*CampaignPlanning, bool) {
	if o == nil || o.Planning == nil {
		return nil, false
	}
	return o.Planning, true
}

// HasPlanning returns a boolean if a field has been set.
func (o *CampaignUpdating) HasPlanning() bool {
	if o != nil && o.Planning != nil {
		return true
	}

	return false
}

// SetPlanning gets a reference to the given CampaignPlanning and assigns it to the Planning field.
func (o *CampaignUpdating) SetPlanning(v CampaignPlanning) {
	o.Planning = &v
}

// GetTargets returns the Targets field value if set, zero value otherwise.
func (o *CampaignUpdating) GetTargets() DeviceSelector {
	if o == nil || o.Targets == nil {
		var ret DeviceSelector
		return ret
	}
	return *o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignUpdating) GetTargetsOk() (*DeviceSelector, bool) {
	if o == nil || o.Targets == nil {
		return nil, false
	}
	return o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *CampaignUpdating) HasTargets() bool {
	if o != nil && o.Targets != nil {
		return true
	}

	return false
}

// SetTargets gets a reference to the given DeviceSelector and assigns it to the Targets field.
func (o *CampaignUpdating) SetTargets(v DeviceSelector) {
	o.Targets = &v
}

func (o CampaignUpdating) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Operations != nil {
		toSerialize["operations"] = o.Operations
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Planning != nil {
		toSerialize["planning"] = o.Planning
	}
	if o.Targets != nil {
		toSerialize["targets"] = o.Targets
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignUpdating struct {
	value *CampaignUpdating
	isSet bool
}

func (v NullableCampaignUpdating) Get() *CampaignUpdating {
	return v.value
}

func (v *NullableCampaignUpdating) Set(val *CampaignUpdating) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignUpdating) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignUpdating) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignUpdating(val *CampaignUpdating) *NullableCampaignUpdating {
	return &NullableCampaignUpdating{value: val, isSet: true}
}

func (v NullableCampaignUpdating) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignUpdating) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


