/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// ResourceVersionAddReqWeb body of add resource version
type ResourceVersionAddReqWeb struct {
	// The Base64-encoded MD5 checksum of the version's raw file (non Base64-encoded)Expected string (max 255 characters)
	Checksum string `json:"checksum"`
	// set of the versions from which a resource update to the version can be done. Max number of versions is 100. A version max length is 255. 
	CompatibleVersions *[]string `json:"compatibleVersions,omitempty"`
	// the version's description. Expected string (max 255 characters)
	Description *string `json:"description,omitempty"`
	// the version's Base64-encoded binary. File max size is 10MB
	File string `json:"file"`
	// the resource version id. Expected string (max 255 characters)
	ResourceVersionId string `json:"resourceVersionId"`
}

// NewResourceVersionAddReqWeb instantiates a new ResourceVersionAddReqWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceVersionAddReqWeb(checksum string, file string, resourceVersionId string, ) *ResourceVersionAddReqWeb {
	this := ResourceVersionAddReqWeb{}
	this.Checksum = checksum
	this.File = file
	this.ResourceVersionId = resourceVersionId
	return &this
}

// NewResourceVersionAddReqWebWithDefaults instantiates a new ResourceVersionAddReqWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceVersionAddReqWebWithDefaults() *ResourceVersionAddReqWeb {
	this := ResourceVersionAddReqWeb{}
	return &this
}

// GetChecksum returns the Checksum field value
func (o *ResourceVersionAddReqWeb) GetChecksum() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value
// and a boolean to check if the value has been set.
func (o *ResourceVersionAddReqWeb) GetChecksumOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Checksum, true
}

// SetChecksum sets field value
func (o *ResourceVersionAddReqWeb) SetChecksum(v string) {
	o.Checksum = v
}

// GetCompatibleVersions returns the CompatibleVersions field value if set, zero value otherwise.
func (o *ResourceVersionAddReqWeb) GetCompatibleVersions() []string {
	if o == nil || o.CompatibleVersions == nil {
		var ret []string
		return ret
	}
	return *o.CompatibleVersions
}

// GetCompatibleVersionsOk returns a tuple with the CompatibleVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersionAddReqWeb) GetCompatibleVersionsOk() (*[]string, bool) {
	if o == nil || o.CompatibleVersions == nil {
		return nil, false
	}
	return o.CompatibleVersions, true
}

// HasCompatibleVersions returns a boolean if a field has been set.
func (o *ResourceVersionAddReqWeb) HasCompatibleVersions() bool {
	if o != nil && o.CompatibleVersions != nil {
		return true
	}

	return false
}

// SetCompatibleVersions gets a reference to the given []string and assigns it to the CompatibleVersions field.
func (o *ResourceVersionAddReqWeb) SetCompatibleVersions(v []string) {
	o.CompatibleVersions = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceVersionAddReqWeb) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersionAddReqWeb) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceVersionAddReqWeb) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceVersionAddReqWeb) SetDescription(v string) {
	o.Description = &v
}

// GetFile returns the File field value
func (o *ResourceVersionAddReqWeb) GetFile() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.File
}

// GetFileOk returns a tuple with the File field value
// and a boolean to check if the value has been set.
func (o *ResourceVersionAddReqWeb) GetFileOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.File, true
}

// SetFile sets field value
func (o *ResourceVersionAddReqWeb) SetFile(v string) {
	o.File = v
}

// GetResourceVersionId returns the ResourceVersionId field value
func (o *ResourceVersionAddReqWeb) GetResourceVersionId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ResourceVersionId
}

// GetResourceVersionIdOk returns a tuple with the ResourceVersionId field value
// and a boolean to check if the value has been set.
func (o *ResourceVersionAddReqWeb) GetResourceVersionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceVersionId, true
}

// SetResourceVersionId sets field value
func (o *ResourceVersionAddReqWeb) SetResourceVersionId(v string) {
	o.ResourceVersionId = v
}

func (o ResourceVersionAddReqWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["checksum"] = o.Checksum
	}
	if o.CompatibleVersions != nil {
		toSerialize["compatibleVersions"] = o.CompatibleVersions
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["file"] = o.File
	}
	if true {
		toSerialize["resourceVersionId"] = o.ResourceVersionId
	}
	return json.Marshal(toSerialize)
}

type NullableResourceVersionAddReqWeb struct {
	value *ResourceVersionAddReqWeb
	isSet bool
}

func (v NullableResourceVersionAddReqWeb) Get() *ResourceVersionAddReqWeb {
	return v.value
}

func (v *NullableResourceVersionAddReqWeb) Set(val *ResourceVersionAddReqWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceVersionAddReqWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceVersionAddReqWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceVersionAddReqWeb(val *ResourceVersionAddReqWeb) *NullableResourceVersionAddReqWeb {
	return &NullableResourceVersionAddReqWeb{value: val, isSet: true}
}

func (v NullableResourceVersionAddReqWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceVersionAddReqWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


