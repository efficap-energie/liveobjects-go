/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// LoraDeviceCreateReqWeb struct for LoraDeviceCreateReqWeb
type LoraDeviceCreateReqWeb struct {
	// LoRa device activation type
	ActivationType string `json:"activationType"`
	// Application identifier (AppEUI)
	AppEUI string `json:"appEUI"`
	// Application Key (AppKey)
	AppKey string `json:"appKey"`
	ConnectivityOptions *LoraConnectivityOptionsWeb `json:"connectivityOptions,omitempty"`
	// Device connectivity plan.
	ConnectivityPlan *string `json:"connectivityPlan,omitempty"`
	// LoRa End-device identifier (DevEUI)
	DevEUI string `json:"devEUI"`
	// LoraDeviceUpdateReqWeb status
	DeviceStatus string `json:"deviceStatus"`
	// LoRa device encoding
	Encoding *string `json:"encoding,omitempty"`
	// LoRa device name
	Name string `json:"name"`
	// LoRa device profile
	Profile string `json:"profile"`
	// List of tags, used to tag uplink from this device
	Tags *[]string `json:"tags,omitempty"`
}

// NewLoraDeviceCreateReqWeb instantiates a new LoraDeviceCreateReqWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoraDeviceCreateReqWeb(activationType string, appEUI string, appKey string, devEUI string, deviceStatus string, name string, profile string, ) *LoraDeviceCreateReqWeb {
	this := LoraDeviceCreateReqWeb{}
	this.ActivationType = activationType
	this.AppEUI = appEUI
	this.AppKey = appKey
	this.DevEUI = devEUI
	this.DeviceStatus = deviceStatus
	this.Name = name
	this.Profile = profile
	return &this
}

// NewLoraDeviceCreateReqWebWithDefaults instantiates a new LoraDeviceCreateReqWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoraDeviceCreateReqWebWithDefaults() *LoraDeviceCreateReqWeb {
	this := LoraDeviceCreateReqWeb{}
	return &this
}

// GetActivationType returns the ActivationType field value
func (o *LoraDeviceCreateReqWeb) GetActivationType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ActivationType
}

// GetActivationTypeOk returns a tuple with the ActivationType field value
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetActivationTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ActivationType, true
}

// SetActivationType sets field value
func (o *LoraDeviceCreateReqWeb) SetActivationType(v string) {
	o.ActivationType = v
}

// GetAppEUI returns the AppEUI field value
func (o *LoraDeviceCreateReqWeb) GetAppEUI() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AppEUI
}

// GetAppEUIOk returns a tuple with the AppEUI field value
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetAppEUIOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AppEUI, true
}

// SetAppEUI sets field value
func (o *LoraDeviceCreateReqWeb) SetAppEUI(v string) {
	o.AppEUI = v
}

// GetAppKey returns the AppKey field value
func (o *LoraDeviceCreateReqWeb) GetAppKey() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.AppKey
}

// GetAppKeyOk returns a tuple with the AppKey field value
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetAppKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AppKey, true
}

// SetAppKey sets field value
func (o *LoraDeviceCreateReqWeb) SetAppKey(v string) {
	o.AppKey = v
}

// GetConnectivityOptions returns the ConnectivityOptions field value if set, zero value otherwise.
func (o *LoraDeviceCreateReqWeb) GetConnectivityOptions() LoraConnectivityOptionsWeb {
	if o == nil || o.ConnectivityOptions == nil {
		var ret LoraConnectivityOptionsWeb
		return ret
	}
	return *o.ConnectivityOptions
}

// GetConnectivityOptionsOk returns a tuple with the ConnectivityOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetConnectivityOptionsOk() (*LoraConnectivityOptionsWeb, bool) {
	if o == nil || o.ConnectivityOptions == nil {
		return nil, false
	}
	return o.ConnectivityOptions, true
}

// HasConnectivityOptions returns a boolean if a field has been set.
func (o *LoraDeviceCreateReqWeb) HasConnectivityOptions() bool {
	if o != nil && o.ConnectivityOptions != nil {
		return true
	}

	return false
}

// SetConnectivityOptions gets a reference to the given LoraConnectivityOptionsWeb and assigns it to the ConnectivityOptions field.
func (o *LoraDeviceCreateReqWeb) SetConnectivityOptions(v LoraConnectivityOptionsWeb) {
	o.ConnectivityOptions = &v
}

// GetConnectivityPlan returns the ConnectivityPlan field value if set, zero value otherwise.
func (o *LoraDeviceCreateReqWeb) GetConnectivityPlan() string {
	if o == nil || o.ConnectivityPlan == nil {
		var ret string
		return ret
	}
	return *o.ConnectivityPlan
}

// GetConnectivityPlanOk returns a tuple with the ConnectivityPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetConnectivityPlanOk() (*string, bool) {
	if o == nil || o.ConnectivityPlan == nil {
		return nil, false
	}
	return o.ConnectivityPlan, true
}

// HasConnectivityPlan returns a boolean if a field has been set.
func (o *LoraDeviceCreateReqWeb) HasConnectivityPlan() bool {
	if o != nil && o.ConnectivityPlan != nil {
		return true
	}

	return false
}

// SetConnectivityPlan gets a reference to the given string and assigns it to the ConnectivityPlan field.
func (o *LoraDeviceCreateReqWeb) SetConnectivityPlan(v string) {
	o.ConnectivityPlan = &v
}

// GetDevEUI returns the DevEUI field value
func (o *LoraDeviceCreateReqWeb) GetDevEUI() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DevEUI
}

// GetDevEUIOk returns a tuple with the DevEUI field value
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetDevEUIOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DevEUI, true
}

// SetDevEUI sets field value
func (o *LoraDeviceCreateReqWeb) SetDevEUI(v string) {
	o.DevEUI = v
}

// GetDeviceStatus returns the DeviceStatus field value
func (o *LoraDeviceCreateReqWeb) GetDeviceStatus() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DeviceStatus
}

// GetDeviceStatusOk returns a tuple with the DeviceStatus field value
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetDeviceStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DeviceStatus, true
}

// SetDeviceStatus sets field value
func (o *LoraDeviceCreateReqWeb) SetDeviceStatus(v string) {
	o.DeviceStatus = v
}

// GetEncoding returns the Encoding field value if set, zero value otherwise.
func (o *LoraDeviceCreateReqWeb) GetEncoding() string {
	if o == nil || o.Encoding == nil {
		var ret string
		return ret
	}
	return *o.Encoding
}

// GetEncodingOk returns a tuple with the Encoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetEncodingOk() (*string, bool) {
	if o == nil || o.Encoding == nil {
		return nil, false
	}
	return o.Encoding, true
}

// HasEncoding returns a boolean if a field has been set.
func (o *LoraDeviceCreateReqWeb) HasEncoding() bool {
	if o != nil && o.Encoding != nil {
		return true
	}

	return false
}

// SetEncoding gets a reference to the given string and assigns it to the Encoding field.
func (o *LoraDeviceCreateReqWeb) SetEncoding(v string) {
	o.Encoding = &v
}

// GetName returns the Name field value
func (o *LoraDeviceCreateReqWeb) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LoraDeviceCreateReqWeb) SetName(v string) {
	o.Name = v
}

// GetProfile returns the Profile field value
func (o *LoraDeviceCreateReqWeb) GetProfile() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Profile
}

// GetProfileOk returns a tuple with the Profile field value
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetProfileOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Profile, true
}

// SetProfile sets field value
func (o *LoraDeviceCreateReqWeb) SetProfile(v string) {
	o.Profile = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *LoraDeviceCreateReqWeb) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraDeviceCreateReqWeb) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *LoraDeviceCreateReqWeb) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *LoraDeviceCreateReqWeb) SetTags(v []string) {
	o.Tags = &v
}

func (o LoraDeviceCreateReqWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["activationType"] = o.ActivationType
	}
	if true {
		toSerialize["appEUI"] = o.AppEUI
	}
	if true {
		toSerialize["appKey"] = o.AppKey
	}
	if o.ConnectivityOptions != nil {
		toSerialize["connectivityOptions"] = o.ConnectivityOptions
	}
	if o.ConnectivityPlan != nil {
		toSerialize["connectivityPlan"] = o.ConnectivityPlan
	}
	if true {
		toSerialize["devEUI"] = o.DevEUI
	}
	if true {
		toSerialize["deviceStatus"] = o.DeviceStatus
	}
	if o.Encoding != nil {
		toSerialize["encoding"] = o.Encoding
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["profile"] = o.Profile
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableLoraDeviceCreateReqWeb struct {
	value *LoraDeviceCreateReqWeb
	isSet bool
}

func (v NullableLoraDeviceCreateReqWeb) Get() *LoraDeviceCreateReqWeb {
	return v.value
}

func (v *NullableLoraDeviceCreateReqWeb) Set(val *LoraDeviceCreateReqWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableLoraDeviceCreateReqWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableLoraDeviceCreateReqWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoraDeviceCreateReqWeb(val *LoraDeviceCreateReqWeb) *NullableLoraDeviceCreateReqWeb {
	return &NullableLoraDeviceCreateReqWeb{value: val, isSet: true}
}

func (v NullableLoraDeviceCreateReqWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoraDeviceCreateReqWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


