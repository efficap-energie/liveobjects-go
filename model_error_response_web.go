/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// ErrorResponseWeb Generic Error in Response
type ErrorResponseWeb struct {
	// Error code
	Code string `json:"code"`
	// Detailed error description
	Details *string `json:"details,omitempty"`
	// Unique identifier of this error instance
	Id string `json:"id"`
	// Short error description
	Message string `json:"message"`
}

// NewErrorResponseWeb instantiates a new ErrorResponseWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponseWeb(code string, id string, message string, ) *ErrorResponseWeb {
	this := ErrorResponseWeb{}
	this.Code = code
	this.Id = id
	this.Message = message
	return &this
}

// NewErrorResponseWebWithDefaults instantiates a new ErrorResponseWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponseWebWithDefaults() *ErrorResponseWeb {
	this := ErrorResponseWeb{}
	return &this
}

// GetCode returns the Code field value
func (o *ErrorResponseWeb) GetCode() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ErrorResponseWeb) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ErrorResponseWeb) SetCode(v string) {
	o.Code = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *ErrorResponseWeb) GetDetails() string {
	if o == nil || o.Details == nil {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseWeb) GetDetailsOk() (*string, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ErrorResponseWeb) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *ErrorResponseWeb) SetDetails(v string) {
	o.Details = &v
}

// GetId returns the Id field value
func (o *ErrorResponseWeb) GetId() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ErrorResponseWeb) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ErrorResponseWeb) SetId(v string) {
	o.Id = v
}

// GetMessage returns the Message field value
func (o *ErrorResponseWeb) GetMessage() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ErrorResponseWeb) GetMessageOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ErrorResponseWeb) SetMessage(v string) {
	o.Message = v
}

func (o ErrorResponseWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableErrorResponseWeb struct {
	value *ErrorResponseWeb
	isSet bool
}

func (v NullableErrorResponseWeb) Get() *ErrorResponseWeb {
	return v.value
}

func (v *NullableErrorResponseWeb) Set(val *ErrorResponseWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponseWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponseWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponseWeb(val *ErrorResponseWeb) *NullableErrorResponseWeb {
	return &NullableErrorResponseWeb{value: val, isSet: true}
}

func (v NullableErrorResponseWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponseWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


