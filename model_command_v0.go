/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// CommandV0 struct for CommandV0
type CommandV0 struct {
	AssetId *string `json:"assetId,omitempty"`
	AssetIdNamespace *string `json:"assetIdNamespace,omitempty"`
	CreationTs *int64 `json:"creationTs,omitempty"`
	Id *string `json:"id,omitempty"`
	NotifyTo *string `json:"notifyTo,omitempty"`
	ReqData *map[string]string `json:"reqData,omitempty"`
	ReqEvent *string `json:"reqEvent,omitempty"`
	ReqPayload *[]string `json:"reqPayload,omitempty"`
	ResData *map[string]string `json:"resData,omitempty"`
	ResPayload *[]string `json:"resPayload,omitempty"`
	Status *string `json:"status,omitempty"`
	UpdateTs *int64 `json:"updateTs,omitempty"`
}

// NewCommandV0 instantiates a new CommandV0 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommandV0() *CommandV0 {
	this := CommandV0{}
	return &this
}

// NewCommandV0WithDefaults instantiates a new CommandV0 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommandV0WithDefaults() *CommandV0 {
	this := CommandV0{}
	return &this
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *CommandV0) GetAssetId() string {
	if o == nil || o.AssetId == nil {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetAssetIdOk() (*string, bool) {
	if o == nil || o.AssetId == nil {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *CommandV0) HasAssetId() bool {
	if o != nil && o.AssetId != nil {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *CommandV0) SetAssetId(v string) {
	o.AssetId = &v
}

// GetAssetIdNamespace returns the AssetIdNamespace field value if set, zero value otherwise.
func (o *CommandV0) GetAssetIdNamespace() string {
	if o == nil || o.AssetIdNamespace == nil {
		var ret string
		return ret
	}
	return *o.AssetIdNamespace
}

// GetAssetIdNamespaceOk returns a tuple with the AssetIdNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetAssetIdNamespaceOk() (*string, bool) {
	if o == nil || o.AssetIdNamespace == nil {
		return nil, false
	}
	return o.AssetIdNamespace, true
}

// HasAssetIdNamespace returns a boolean if a field has been set.
func (o *CommandV0) HasAssetIdNamespace() bool {
	if o != nil && o.AssetIdNamespace != nil {
		return true
	}

	return false
}

// SetAssetIdNamespace gets a reference to the given string and assigns it to the AssetIdNamespace field.
func (o *CommandV0) SetAssetIdNamespace(v string) {
	o.AssetIdNamespace = &v
}

// GetCreationTs returns the CreationTs field value if set, zero value otherwise.
func (o *CommandV0) GetCreationTs() int64 {
	if o == nil || o.CreationTs == nil {
		var ret int64
		return ret
	}
	return *o.CreationTs
}

// GetCreationTsOk returns a tuple with the CreationTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetCreationTsOk() (*int64, bool) {
	if o == nil || o.CreationTs == nil {
		return nil, false
	}
	return o.CreationTs, true
}

// HasCreationTs returns a boolean if a field has been set.
func (o *CommandV0) HasCreationTs() bool {
	if o != nil && o.CreationTs != nil {
		return true
	}

	return false
}

// SetCreationTs gets a reference to the given int64 and assigns it to the CreationTs field.
func (o *CommandV0) SetCreationTs(v int64) {
	o.CreationTs = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommandV0) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommandV0) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommandV0) SetId(v string) {
	o.Id = &v
}

// GetNotifyTo returns the NotifyTo field value if set, zero value otherwise.
func (o *CommandV0) GetNotifyTo() string {
	if o == nil || o.NotifyTo == nil {
		var ret string
		return ret
	}
	return *o.NotifyTo
}

// GetNotifyToOk returns a tuple with the NotifyTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetNotifyToOk() (*string, bool) {
	if o == nil || o.NotifyTo == nil {
		return nil, false
	}
	return o.NotifyTo, true
}

// HasNotifyTo returns a boolean if a field has been set.
func (o *CommandV0) HasNotifyTo() bool {
	if o != nil && o.NotifyTo != nil {
		return true
	}

	return false
}

// SetNotifyTo gets a reference to the given string and assigns it to the NotifyTo field.
func (o *CommandV0) SetNotifyTo(v string) {
	o.NotifyTo = &v
}

// GetReqData returns the ReqData field value if set, zero value otherwise.
func (o *CommandV0) GetReqData() map[string]string {
	if o == nil || o.ReqData == nil {
		var ret map[string]string
		return ret
	}
	return *o.ReqData
}

// GetReqDataOk returns a tuple with the ReqData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetReqDataOk() (*map[string]string, bool) {
	if o == nil || o.ReqData == nil {
		return nil, false
	}
	return o.ReqData, true
}

// HasReqData returns a boolean if a field has been set.
func (o *CommandV0) HasReqData() bool {
	if o != nil && o.ReqData != nil {
		return true
	}

	return false
}

// SetReqData gets a reference to the given map[string]string and assigns it to the ReqData field.
func (o *CommandV0) SetReqData(v map[string]string) {
	o.ReqData = &v
}

// GetReqEvent returns the ReqEvent field value if set, zero value otherwise.
func (o *CommandV0) GetReqEvent() string {
	if o == nil || o.ReqEvent == nil {
		var ret string
		return ret
	}
	return *o.ReqEvent
}

// GetReqEventOk returns a tuple with the ReqEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetReqEventOk() (*string, bool) {
	if o == nil || o.ReqEvent == nil {
		return nil, false
	}
	return o.ReqEvent, true
}

// HasReqEvent returns a boolean if a field has been set.
func (o *CommandV0) HasReqEvent() bool {
	if o != nil && o.ReqEvent != nil {
		return true
	}

	return false
}

// SetReqEvent gets a reference to the given string and assigns it to the ReqEvent field.
func (o *CommandV0) SetReqEvent(v string) {
	o.ReqEvent = &v
}

// GetReqPayload returns the ReqPayload field value if set, zero value otherwise.
func (o *CommandV0) GetReqPayload() []string {
	if o == nil || o.ReqPayload == nil {
		var ret []string
		return ret
	}
	return *o.ReqPayload
}

// GetReqPayloadOk returns a tuple with the ReqPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetReqPayloadOk() (*[]string, bool) {
	if o == nil || o.ReqPayload == nil {
		return nil, false
	}
	return o.ReqPayload, true
}

// HasReqPayload returns a boolean if a field has been set.
func (o *CommandV0) HasReqPayload() bool {
	if o != nil && o.ReqPayload != nil {
		return true
	}

	return false
}

// SetReqPayload gets a reference to the given []string and assigns it to the ReqPayload field.
func (o *CommandV0) SetReqPayload(v []string) {
	o.ReqPayload = &v
}

// GetResData returns the ResData field value if set, zero value otherwise.
func (o *CommandV0) GetResData() map[string]string {
	if o == nil || o.ResData == nil {
		var ret map[string]string
		return ret
	}
	return *o.ResData
}

// GetResDataOk returns a tuple with the ResData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetResDataOk() (*map[string]string, bool) {
	if o == nil || o.ResData == nil {
		return nil, false
	}
	return o.ResData, true
}

// HasResData returns a boolean if a field has been set.
func (o *CommandV0) HasResData() bool {
	if o != nil && o.ResData != nil {
		return true
	}

	return false
}

// SetResData gets a reference to the given map[string]string and assigns it to the ResData field.
func (o *CommandV0) SetResData(v map[string]string) {
	o.ResData = &v
}

// GetResPayload returns the ResPayload field value if set, zero value otherwise.
func (o *CommandV0) GetResPayload() []string {
	if o == nil || o.ResPayload == nil {
		var ret []string
		return ret
	}
	return *o.ResPayload
}

// GetResPayloadOk returns a tuple with the ResPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetResPayloadOk() (*[]string, bool) {
	if o == nil || o.ResPayload == nil {
		return nil, false
	}
	return o.ResPayload, true
}

// HasResPayload returns a boolean if a field has been set.
func (o *CommandV0) HasResPayload() bool {
	if o != nil && o.ResPayload != nil {
		return true
	}

	return false
}

// SetResPayload gets a reference to the given []string and assigns it to the ResPayload field.
func (o *CommandV0) SetResPayload(v []string) {
	o.ResPayload = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CommandV0) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CommandV0) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CommandV0) SetStatus(v string) {
	o.Status = &v
}

// GetUpdateTs returns the UpdateTs field value if set, zero value otherwise.
func (o *CommandV0) GetUpdateTs() int64 {
	if o == nil || o.UpdateTs == nil {
		var ret int64
		return ret
	}
	return *o.UpdateTs
}

// GetUpdateTsOk returns a tuple with the UpdateTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandV0) GetUpdateTsOk() (*int64, bool) {
	if o == nil || o.UpdateTs == nil {
		return nil, false
	}
	return o.UpdateTs, true
}

// HasUpdateTs returns a boolean if a field has been set.
func (o *CommandV0) HasUpdateTs() bool {
	if o != nil && o.UpdateTs != nil {
		return true
	}

	return false
}

// SetUpdateTs gets a reference to the given int64 and assigns it to the UpdateTs field.
func (o *CommandV0) SetUpdateTs(v int64) {
	o.UpdateTs = &v
}

func (o CommandV0) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssetId != nil {
		toSerialize["assetId"] = o.AssetId
	}
	if o.AssetIdNamespace != nil {
		toSerialize["assetIdNamespace"] = o.AssetIdNamespace
	}
	if o.CreationTs != nil {
		toSerialize["creationTs"] = o.CreationTs
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.NotifyTo != nil {
		toSerialize["notifyTo"] = o.NotifyTo
	}
	if o.ReqData != nil {
		toSerialize["reqData"] = o.ReqData
	}
	if o.ReqEvent != nil {
		toSerialize["reqEvent"] = o.ReqEvent
	}
	if o.ReqPayload != nil {
		toSerialize["reqPayload"] = o.ReqPayload
	}
	if o.ResData != nil {
		toSerialize["resData"] = o.ResData
	}
	if o.ResPayload != nil {
		toSerialize["resPayload"] = o.ResPayload
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UpdateTs != nil {
		toSerialize["updateTs"] = o.UpdateTs
	}
	return json.Marshal(toSerialize)
}

type NullableCommandV0 struct {
	value *CommandV0
	isSet bool
}

func (v NullableCommandV0) Get() *CommandV0 {
	return v.value
}

func (v *NullableCommandV0) Set(val *CommandV0) {
	v.value = val
	v.isSet = true
}

func (v NullableCommandV0) IsSet() bool {
	return v.isSet
}

func (v *NullableCommandV0) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommandV0(val *CommandV0) *NullableCommandV0 {
	return &NullableCommandV0{value: val, isSet: true}
}

func (v NullableCommandV0) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommandV0) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


