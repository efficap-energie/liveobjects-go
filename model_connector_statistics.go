/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// ConnectorStatistics struct for ConnectorStatistics
type ConnectorStatistics struct {
	Counters *map[string]int64 `json:"counters,omitempty"`
	Entries *map[string]int64 `json:"entries,omitempty"`
	Inventories *map[string]int64 `json:"inventories,omitempty"`
	LastUpdatedDateTs *string `json:"lastUpdatedDateTs,omitempty"`
}

// NewConnectorStatistics instantiates a new ConnectorStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorStatistics() *ConnectorStatistics {
	this := ConnectorStatistics{}
	return &this
}

// NewConnectorStatisticsWithDefaults instantiates a new ConnectorStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorStatisticsWithDefaults() *ConnectorStatistics {
	this := ConnectorStatistics{}
	return &this
}

// GetCounters returns the Counters field value if set, zero value otherwise.
func (o *ConnectorStatistics) GetCounters() map[string]int64 {
	if o == nil || o.Counters == nil {
		var ret map[string]int64
		return ret
	}
	return *o.Counters
}

// GetCountersOk returns a tuple with the Counters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorStatistics) GetCountersOk() (*map[string]int64, bool) {
	if o == nil || o.Counters == nil {
		return nil, false
	}
	return o.Counters, true
}

// HasCounters returns a boolean if a field has been set.
func (o *ConnectorStatistics) HasCounters() bool {
	if o != nil && o.Counters != nil {
		return true
	}

	return false
}

// SetCounters gets a reference to the given map[string]int64 and assigns it to the Counters field.
func (o *ConnectorStatistics) SetCounters(v map[string]int64) {
	o.Counters = &v
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *ConnectorStatistics) GetEntries() map[string]int64 {
	if o == nil || o.Entries == nil {
		var ret map[string]int64
		return ret
	}
	return *o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorStatistics) GetEntriesOk() (*map[string]int64, bool) {
	if o == nil || o.Entries == nil {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *ConnectorStatistics) HasEntries() bool {
	if o != nil && o.Entries != nil {
		return true
	}

	return false
}

// SetEntries gets a reference to the given map[string]int64 and assigns it to the Entries field.
func (o *ConnectorStatistics) SetEntries(v map[string]int64) {
	o.Entries = &v
}

// GetInventories returns the Inventories field value if set, zero value otherwise.
func (o *ConnectorStatistics) GetInventories() map[string]int64 {
	if o == nil || o.Inventories == nil {
		var ret map[string]int64
		return ret
	}
	return *o.Inventories
}

// GetInventoriesOk returns a tuple with the Inventories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorStatistics) GetInventoriesOk() (*map[string]int64, bool) {
	if o == nil || o.Inventories == nil {
		return nil, false
	}
	return o.Inventories, true
}

// HasInventories returns a boolean if a field has been set.
func (o *ConnectorStatistics) HasInventories() bool {
	if o != nil && o.Inventories != nil {
		return true
	}

	return false
}

// SetInventories gets a reference to the given map[string]int64 and assigns it to the Inventories field.
func (o *ConnectorStatistics) SetInventories(v map[string]int64) {
	o.Inventories = &v
}

// GetLastUpdatedDateTs returns the LastUpdatedDateTs field value if set, zero value otherwise.
func (o *ConnectorStatistics) GetLastUpdatedDateTs() string {
	if o == nil || o.LastUpdatedDateTs == nil {
		var ret string
		return ret
	}
	return *o.LastUpdatedDateTs
}

// GetLastUpdatedDateTsOk returns a tuple with the LastUpdatedDateTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorStatistics) GetLastUpdatedDateTsOk() (*string, bool) {
	if o == nil || o.LastUpdatedDateTs == nil {
		return nil, false
	}
	return o.LastUpdatedDateTs, true
}

// HasLastUpdatedDateTs returns a boolean if a field has been set.
func (o *ConnectorStatistics) HasLastUpdatedDateTs() bool {
	if o != nil && o.LastUpdatedDateTs != nil {
		return true
	}

	return false
}

// SetLastUpdatedDateTs gets a reference to the given string and assigns it to the LastUpdatedDateTs field.
func (o *ConnectorStatistics) SetLastUpdatedDateTs(v string) {
	o.LastUpdatedDateTs = &v
}

func (o ConnectorStatistics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Counters != nil {
		toSerialize["counters"] = o.Counters
	}
	if o.Entries != nil {
		toSerialize["entries"] = o.Entries
	}
	if o.Inventories != nil {
		toSerialize["inventories"] = o.Inventories
	}
	if o.LastUpdatedDateTs != nil {
		toSerialize["lastUpdatedDateTs"] = o.LastUpdatedDateTs
	}
	return json.Marshal(toSerialize)
}

type NullableConnectorStatistics struct {
	value *ConnectorStatistics
	isSet bool
}

func (v NullableConnectorStatistics) Get() *ConnectorStatistics {
	return v.value
}

func (v *NullableConnectorStatistics) Set(val *ConnectorStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorStatistics(val *ConnectorStatistics) *NullableConnectorStatistics {
	return &NullableConnectorStatistics{value: val, isSet: true}
}

func (v NullableConnectorStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


