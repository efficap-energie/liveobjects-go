/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// LoraGatewayData struct for LoraGatewayData
type LoraGatewayData struct {
	// Description
	Description *string `json:"description,omitempty"`
	Location *LoraGatewayLocation `json:"location,omitempty"`
	// Name of the gateway
	Name *string `json:"name,omitempty"`
}

// NewLoraGatewayData instantiates a new LoraGatewayData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoraGatewayData() *LoraGatewayData {
	this := LoraGatewayData{}
	return &this
}

// NewLoraGatewayDataWithDefaults instantiates a new LoraGatewayData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoraGatewayDataWithDefaults() *LoraGatewayData {
	this := LoraGatewayData{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LoraGatewayData) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraGatewayData) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LoraGatewayData) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LoraGatewayData) SetDescription(v string) {
	o.Description = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *LoraGatewayData) GetLocation() LoraGatewayLocation {
	if o == nil || o.Location == nil {
		var ret LoraGatewayLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraGatewayData) GetLocationOk() (*LoraGatewayLocation, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *LoraGatewayData) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given LoraGatewayLocation and assigns it to the Location field.
func (o *LoraGatewayData) SetLocation(v LoraGatewayLocation) {
	o.Location = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LoraGatewayData) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoraGatewayData) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LoraGatewayData) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LoraGatewayData) SetName(v string) {
	o.Name = &v
}

func (o LoraGatewayData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableLoraGatewayData struct {
	value *LoraGatewayData
	isSet bool
}

func (v NullableLoraGatewayData) Get() *LoraGatewayData {
	return v.value
}

func (v *NullableLoraGatewayData) Set(val *LoraGatewayData) {
	v.value = val
	v.isSet = true
}

func (v NullableLoraGatewayData) IsSet() bool {
	return v.isSet
}

func (v *NullableLoraGatewayData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoraGatewayData(val *LoraGatewayData) *NullableLoraGatewayData {
	return &NullableLoraGatewayData{value: val, isSet: true}
}

func (v NullableLoraGatewayData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoraGatewayData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


