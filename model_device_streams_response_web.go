/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// DeviceStreamsResponseWeb struct for DeviceStreamsResponseWeb
type DeviceStreamsResponseWeb struct {
	// id of the stream
	StreamId *string `json:"streamId,omitempty"`
	// number of messages sent by the device into this stream
	Count *int32 `json:"count,omitempty"`
	// date of the last message sent by the device into this stream
	LastUpdate *string `json:"lastUpdate,omitempty"`
}

// NewDeviceStreamsResponseWeb instantiates a new DeviceStreamsResponseWeb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceStreamsResponseWeb() *DeviceStreamsResponseWeb {
	this := DeviceStreamsResponseWeb{}
	return &this
}

// NewDeviceStreamsResponseWebWithDefaults instantiates a new DeviceStreamsResponseWeb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceStreamsResponseWebWithDefaults() *DeviceStreamsResponseWeb {
	this := DeviceStreamsResponseWeb{}
	return &this
}

// GetStreamId returns the StreamId field value if set, zero value otherwise.
func (o *DeviceStreamsResponseWeb) GetStreamId() string {
	if o == nil || o.StreamId == nil {
		var ret string
		return ret
	}
	return *o.StreamId
}

// GetStreamIdOk returns a tuple with the StreamId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceStreamsResponseWeb) GetStreamIdOk() (*string, bool) {
	if o == nil || o.StreamId == nil {
		return nil, false
	}
	return o.StreamId, true
}

// HasStreamId returns a boolean if a field has been set.
func (o *DeviceStreamsResponseWeb) HasStreamId() bool {
	if o != nil && o.StreamId != nil {
		return true
	}

	return false
}

// SetStreamId gets a reference to the given string and assigns it to the StreamId field.
func (o *DeviceStreamsResponseWeb) SetStreamId(v string) {
	o.StreamId = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *DeviceStreamsResponseWeb) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceStreamsResponseWeb) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *DeviceStreamsResponseWeb) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *DeviceStreamsResponseWeb) SetCount(v int32) {
	o.Count = &v
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *DeviceStreamsResponseWeb) GetLastUpdate() string {
	if o == nil || o.LastUpdate == nil {
		var ret string
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceStreamsResponseWeb) GetLastUpdateOk() (*string, bool) {
	if o == nil || o.LastUpdate == nil {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *DeviceStreamsResponseWeb) HasLastUpdate() bool {
	if o != nil && o.LastUpdate != nil {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given string and assigns it to the LastUpdate field.
func (o *DeviceStreamsResponseWeb) SetLastUpdate(v string) {
	o.LastUpdate = &v
}

func (o DeviceStreamsResponseWeb) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StreamId != nil {
		toSerialize["streamId"] = o.StreamId
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.LastUpdate != nil {
		toSerialize["lastUpdate"] = o.LastUpdate
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceStreamsResponseWeb struct {
	value *DeviceStreamsResponseWeb
	isSet bool
}

func (v NullableDeviceStreamsResponseWeb) Get() *DeviceStreamsResponseWeb {
	return v.value
}

func (v *NullableDeviceStreamsResponseWeb) Set(val *DeviceStreamsResponseWeb) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceStreamsResponseWeb) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceStreamsResponseWeb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceStreamsResponseWeb(val *DeviceStreamsResponseWeb) *NullableDeviceStreamsResponseWeb {
	return &NullableDeviceStreamsResponseWeb{value: val, isSet: true}
}

func (v NullableDeviceStreamsResponseWeb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceStreamsResponseWeb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


