/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// CampaignOperationState struct for CampaignOperationState
type CampaignOperationState struct {
	// Type of operation
	Action string `json:"action"`
	// Optional current number of retries made for the operation
	CurrentRetry *int32 `json:"currentRetry,omitempty"`
	// Date when the operation was finished
	Ended *string `json:"ended,omitempty"`
	Error *CampaignOperationStateError `json:"error,omitempty"`
	// Optional identifier associated to the current underlying operation (e.g. commandId,...)
	OperationId *string `json:"operationId,omitempty"`
	// Current status returned by the underlying operation
	OperationStatus *string `json:"operationStatus,omitempty"`
	// Date when the operation was started
	Started *string `json:"started,omitempty"`
	// Date when the operation status was updated for the last time
	Updated *string `json:"updated,omitempty"`
}

// NewCampaignOperationState instantiates a new CampaignOperationState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignOperationState(action string, ) *CampaignOperationState {
	this := CampaignOperationState{}
	this.Action = action
	return &this
}

// NewCampaignOperationStateWithDefaults instantiates a new CampaignOperationState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignOperationStateWithDefaults() *CampaignOperationState {
	this := CampaignOperationState{}
	return &this
}

// GetAction returns the Action field value
func (o *CampaignOperationState) GetAction() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *CampaignOperationState) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *CampaignOperationState) SetAction(v string) {
	o.Action = v
}

// GetCurrentRetry returns the CurrentRetry field value if set, zero value otherwise.
func (o *CampaignOperationState) GetCurrentRetry() int32 {
	if o == nil || o.CurrentRetry == nil {
		var ret int32
		return ret
	}
	return *o.CurrentRetry
}

// GetCurrentRetryOk returns a tuple with the CurrentRetry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOperationState) GetCurrentRetryOk() (*int32, bool) {
	if o == nil || o.CurrentRetry == nil {
		return nil, false
	}
	return o.CurrentRetry, true
}

// HasCurrentRetry returns a boolean if a field has been set.
func (o *CampaignOperationState) HasCurrentRetry() bool {
	if o != nil && o.CurrentRetry != nil {
		return true
	}

	return false
}

// SetCurrentRetry gets a reference to the given int32 and assigns it to the CurrentRetry field.
func (o *CampaignOperationState) SetCurrentRetry(v int32) {
	o.CurrentRetry = &v
}

// GetEnded returns the Ended field value if set, zero value otherwise.
func (o *CampaignOperationState) GetEnded() string {
	if o == nil || o.Ended == nil {
		var ret string
		return ret
	}
	return *o.Ended
}

// GetEndedOk returns a tuple with the Ended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOperationState) GetEndedOk() (*string, bool) {
	if o == nil || o.Ended == nil {
		return nil, false
	}
	return o.Ended, true
}

// HasEnded returns a boolean if a field has been set.
func (o *CampaignOperationState) HasEnded() bool {
	if o != nil && o.Ended != nil {
		return true
	}

	return false
}

// SetEnded gets a reference to the given string and assigns it to the Ended field.
func (o *CampaignOperationState) SetEnded(v string) {
	o.Ended = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *CampaignOperationState) GetError() CampaignOperationStateError {
	if o == nil || o.Error == nil {
		var ret CampaignOperationStateError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOperationState) GetErrorOk() (*CampaignOperationStateError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *CampaignOperationState) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given CampaignOperationStateError and assigns it to the Error field.
func (o *CampaignOperationState) SetError(v CampaignOperationStateError) {
	o.Error = &v
}

// GetOperationId returns the OperationId field value if set, zero value otherwise.
func (o *CampaignOperationState) GetOperationId() string {
	if o == nil || o.OperationId == nil {
		var ret string
		return ret
	}
	return *o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOperationState) GetOperationIdOk() (*string, bool) {
	if o == nil || o.OperationId == nil {
		return nil, false
	}
	return o.OperationId, true
}

// HasOperationId returns a boolean if a field has been set.
func (o *CampaignOperationState) HasOperationId() bool {
	if o != nil && o.OperationId != nil {
		return true
	}

	return false
}

// SetOperationId gets a reference to the given string and assigns it to the OperationId field.
func (o *CampaignOperationState) SetOperationId(v string) {
	o.OperationId = &v
}

// GetOperationStatus returns the OperationStatus field value if set, zero value otherwise.
func (o *CampaignOperationState) GetOperationStatus() string {
	if o == nil || o.OperationStatus == nil {
		var ret string
		return ret
	}
	return *o.OperationStatus
}

// GetOperationStatusOk returns a tuple with the OperationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOperationState) GetOperationStatusOk() (*string, bool) {
	if o == nil || o.OperationStatus == nil {
		return nil, false
	}
	return o.OperationStatus, true
}

// HasOperationStatus returns a boolean if a field has been set.
func (o *CampaignOperationState) HasOperationStatus() bool {
	if o != nil && o.OperationStatus != nil {
		return true
	}

	return false
}

// SetOperationStatus gets a reference to the given string and assigns it to the OperationStatus field.
func (o *CampaignOperationState) SetOperationStatus(v string) {
	o.OperationStatus = &v
}

// GetStarted returns the Started field value if set, zero value otherwise.
func (o *CampaignOperationState) GetStarted() string {
	if o == nil || o.Started == nil {
		var ret string
		return ret
	}
	return *o.Started
}

// GetStartedOk returns a tuple with the Started field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOperationState) GetStartedOk() (*string, bool) {
	if o == nil || o.Started == nil {
		return nil, false
	}
	return o.Started, true
}

// HasStarted returns a boolean if a field has been set.
func (o *CampaignOperationState) HasStarted() bool {
	if o != nil && o.Started != nil {
		return true
	}

	return false
}

// SetStarted gets a reference to the given string and assigns it to the Started field.
func (o *CampaignOperationState) SetStarted(v string) {
	o.Started = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CampaignOperationState) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOperationState) GetUpdatedOk() (*string, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CampaignOperationState) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *CampaignOperationState) SetUpdated(v string) {
	o.Updated = &v
}

func (o CampaignOperationState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action
	}
	if o.CurrentRetry != nil {
		toSerialize["currentRetry"] = o.CurrentRetry
	}
	if o.Ended != nil {
		toSerialize["ended"] = o.Ended
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.OperationId != nil {
		toSerialize["operationId"] = o.OperationId
	}
	if o.OperationStatus != nil {
		toSerialize["operationStatus"] = o.OperationStatus
	}
	if o.Started != nil {
		toSerialize["started"] = o.Started
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignOperationState struct {
	value *CampaignOperationState
	isSet bool
}

func (v NullableCampaignOperationState) Get() *CampaignOperationState {
	return v.value
}

func (v *NullableCampaignOperationState) Set(val *CampaignOperationState) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignOperationState) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignOperationState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignOperationState(val *CampaignOperationState) *NullableCampaignOperationState {
	return &NullableCampaignOperationState{value: val, isSet: true}
}

func (v NullableCampaignOperationState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignOperationState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


