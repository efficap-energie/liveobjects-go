/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// CsvPayloadDescriptionTestRequest struct for CsvPayloadDescriptionTestRequest
type CsvPayloadDescriptionTestRequest struct {
	// the colums description of the csv format
	Columns []CsvColumn `json:"columns"`
	CsvPayload *string `json:"csvPayload,omitempty"`
	MathEvalEnabled *bool `json:"mathEvalEnabled,omitempty"`
	Options *CsvOptions `json:"options,omitempty"`
	Template *string `json:"template,omitempty"`
}

// NewCsvPayloadDescriptionTestRequest instantiates a new CsvPayloadDescriptionTestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCsvPayloadDescriptionTestRequest(columns []CsvColumn, ) *CsvPayloadDescriptionTestRequest {
	this := CsvPayloadDescriptionTestRequest{}
	this.Columns = columns
	return &this
}

// NewCsvPayloadDescriptionTestRequestWithDefaults instantiates a new CsvPayloadDescriptionTestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCsvPayloadDescriptionTestRequestWithDefaults() *CsvPayloadDescriptionTestRequest {
	this := CsvPayloadDescriptionTestRequest{}
	return &this
}

// GetColumns returns the Columns field value
func (o *CsvPayloadDescriptionTestRequest) GetColumns() []CsvColumn {
	if o == nil  {
		var ret []CsvColumn
		return ret
	}

	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value
// and a boolean to check if the value has been set.
func (o *CsvPayloadDescriptionTestRequest) GetColumnsOk() (*[]CsvColumn, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Columns, true
}

// SetColumns sets field value
func (o *CsvPayloadDescriptionTestRequest) SetColumns(v []CsvColumn) {
	o.Columns = v
}

// GetCsvPayload returns the CsvPayload field value if set, zero value otherwise.
func (o *CsvPayloadDescriptionTestRequest) GetCsvPayload() string {
	if o == nil || o.CsvPayload == nil {
		var ret string
		return ret
	}
	return *o.CsvPayload
}

// GetCsvPayloadOk returns a tuple with the CsvPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CsvPayloadDescriptionTestRequest) GetCsvPayloadOk() (*string, bool) {
	if o == nil || o.CsvPayload == nil {
		return nil, false
	}
	return o.CsvPayload, true
}

// HasCsvPayload returns a boolean if a field has been set.
func (o *CsvPayloadDescriptionTestRequest) HasCsvPayload() bool {
	if o != nil && o.CsvPayload != nil {
		return true
	}

	return false
}

// SetCsvPayload gets a reference to the given string and assigns it to the CsvPayload field.
func (o *CsvPayloadDescriptionTestRequest) SetCsvPayload(v string) {
	o.CsvPayload = &v
}

// GetMathEvalEnabled returns the MathEvalEnabled field value if set, zero value otherwise.
func (o *CsvPayloadDescriptionTestRequest) GetMathEvalEnabled() bool {
	if o == nil || o.MathEvalEnabled == nil {
		var ret bool
		return ret
	}
	return *o.MathEvalEnabled
}

// GetMathEvalEnabledOk returns a tuple with the MathEvalEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CsvPayloadDescriptionTestRequest) GetMathEvalEnabledOk() (*bool, bool) {
	if o == nil || o.MathEvalEnabled == nil {
		return nil, false
	}
	return o.MathEvalEnabled, true
}

// HasMathEvalEnabled returns a boolean if a field has been set.
func (o *CsvPayloadDescriptionTestRequest) HasMathEvalEnabled() bool {
	if o != nil && o.MathEvalEnabled != nil {
		return true
	}

	return false
}

// SetMathEvalEnabled gets a reference to the given bool and assigns it to the MathEvalEnabled field.
func (o *CsvPayloadDescriptionTestRequest) SetMathEvalEnabled(v bool) {
	o.MathEvalEnabled = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CsvPayloadDescriptionTestRequest) GetOptions() CsvOptions {
	if o == nil || o.Options == nil {
		var ret CsvOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CsvPayloadDescriptionTestRequest) GetOptionsOk() (*CsvOptions, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CsvPayloadDescriptionTestRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given CsvOptions and assigns it to the Options field.
func (o *CsvPayloadDescriptionTestRequest) SetOptions(v CsvOptions) {
	o.Options = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *CsvPayloadDescriptionTestRequest) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CsvPayloadDescriptionTestRequest) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *CsvPayloadDescriptionTestRequest) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *CsvPayloadDescriptionTestRequest) SetTemplate(v string) {
	o.Template = &v
}

func (o CsvPayloadDescriptionTestRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["columns"] = o.Columns
	}
	if o.CsvPayload != nil {
		toSerialize["csvPayload"] = o.CsvPayload
	}
	if o.MathEvalEnabled != nil {
		toSerialize["mathEvalEnabled"] = o.MathEvalEnabled
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	return json.Marshal(toSerialize)
}

type NullableCsvPayloadDescriptionTestRequest struct {
	value *CsvPayloadDescriptionTestRequest
	isSet bool
}

func (v NullableCsvPayloadDescriptionTestRequest) Get() *CsvPayloadDescriptionTestRequest {
	return v.value
}

func (v *NullableCsvPayloadDescriptionTestRequest) Set(val *CsvPayloadDescriptionTestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCsvPayloadDescriptionTestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCsvPayloadDescriptionTestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCsvPayloadDescriptionTestRequest(val *CsvPayloadDescriptionTestRequest) *NullableCsvPayloadDescriptionTestRequest {
	return &NullableCsvPayloadDescriptionTestRequest{value: val, isSet: true}
}

func (v NullableCsvPayloadDescriptionTestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCsvPayloadDescriptionTestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


