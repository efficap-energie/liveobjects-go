/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// BinaryPayloadDescription binary decoder provisioning information
type BinaryPayloadDescription struct {
	// decoder activation. Default is false.
	Enabled bool `json:"enabled"`
	// unique decoder name. Will be used to trigger the decoding function
	Encoding string `json:"encoding"`
	// the JBBP binary payload format with LO additional tokens (float, utf8)
	Format string `json:"format"`
	// id of the decoder. Should be null when used for POST. Required for update.
	Id *string `json:"id,omitempty"`
	// applying math evaluation on templated decoded result
	MathEvalEnabled *bool `json:"mathEvalEnabled,omitempty"`
	Metadata *PayloadDescriptionMetadata `json:"metadata,omitempty"`
	// if empty, the decoded data will use the value of 'model' field from encoded data. If set, this value will be used to override 'model' field in decoded data.
	Model *string `json:"model,omitempty"`
	// tags used for filtering
	Tags *[]string `json:"tags,omitempty"`
	// decoding result optional template
	Template *string `json:"template,omitempty"`
	// decoder type : csv, binary, javascript
	Type *string `json:"type,omitempty"`
	// date of the last update. ISO 8601 date time.
	Updated *string `json:"updated,omitempty"`
}

// NewBinaryPayloadDescription instantiates a new BinaryPayloadDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBinaryPayloadDescription(enabled bool, encoding string, format string, ) *BinaryPayloadDescription {
	this := BinaryPayloadDescription{}
	this.Enabled = enabled
	this.Encoding = encoding
	this.Format = format
	return &this
}

// NewBinaryPayloadDescriptionWithDefaults instantiates a new BinaryPayloadDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBinaryPayloadDescriptionWithDefaults() *BinaryPayloadDescription {
	this := BinaryPayloadDescription{}
	return &this
}

// GetEnabled returns the Enabled field value
func (o *BinaryPayloadDescription) GetEnabled() bool {
	if o == nil  {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *BinaryPayloadDescription) SetEnabled(v bool) {
	o.Enabled = v
}

// GetEncoding returns the Encoding field value
func (o *BinaryPayloadDescription) GetEncoding() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Encoding
}

// GetEncodingOk returns a tuple with the Encoding field value
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetEncodingOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Encoding, true
}

// SetEncoding sets field value
func (o *BinaryPayloadDescription) SetEncoding(v string) {
	o.Encoding = v
}

// GetFormat returns the Format field value
func (o *BinaryPayloadDescription) GetFormat() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetFormatOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *BinaryPayloadDescription) SetFormat(v string) {
	o.Format = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BinaryPayloadDescription) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BinaryPayloadDescription) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BinaryPayloadDescription) SetId(v string) {
	o.Id = &v
}

// GetMathEvalEnabled returns the MathEvalEnabled field value if set, zero value otherwise.
func (o *BinaryPayloadDescription) GetMathEvalEnabled() bool {
	if o == nil || o.MathEvalEnabled == nil {
		var ret bool
		return ret
	}
	return *o.MathEvalEnabled
}

// GetMathEvalEnabledOk returns a tuple with the MathEvalEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetMathEvalEnabledOk() (*bool, bool) {
	if o == nil || o.MathEvalEnabled == nil {
		return nil, false
	}
	return o.MathEvalEnabled, true
}

// HasMathEvalEnabled returns a boolean if a field has been set.
func (o *BinaryPayloadDescription) HasMathEvalEnabled() bool {
	if o != nil && o.MathEvalEnabled != nil {
		return true
	}

	return false
}

// SetMathEvalEnabled gets a reference to the given bool and assigns it to the MathEvalEnabled field.
func (o *BinaryPayloadDescription) SetMathEvalEnabled(v bool) {
	o.MathEvalEnabled = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *BinaryPayloadDescription) GetMetadata() PayloadDescriptionMetadata {
	if o == nil || o.Metadata == nil {
		var ret PayloadDescriptionMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetMetadataOk() (*PayloadDescriptionMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BinaryPayloadDescription) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given PayloadDescriptionMetadata and assigns it to the Metadata field.
func (o *BinaryPayloadDescription) SetMetadata(v PayloadDescriptionMetadata) {
	o.Metadata = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *BinaryPayloadDescription) GetModel() string {
	if o == nil || o.Model == nil {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetModelOk() (*string, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *BinaryPayloadDescription) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *BinaryPayloadDescription) SetModel(v string) {
	o.Model = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *BinaryPayloadDescription) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *BinaryPayloadDescription) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *BinaryPayloadDescription) SetTags(v []string) {
	o.Tags = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *BinaryPayloadDescription) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *BinaryPayloadDescription) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *BinaryPayloadDescription) SetTemplate(v string) {
	o.Template = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BinaryPayloadDescription) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BinaryPayloadDescription) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BinaryPayloadDescription) SetType(v string) {
	o.Type = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *BinaryPayloadDescription) GetUpdated() string {
	if o == nil || o.Updated == nil {
		var ret string
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BinaryPayloadDescription) GetUpdatedOk() (*string, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *BinaryPayloadDescription) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given string and assigns it to the Updated field.
func (o *BinaryPayloadDescription) SetUpdated(v string) {
	o.Updated = &v
}

func (o BinaryPayloadDescription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["encoding"] = o.Encoding
	}
	if true {
		toSerialize["format"] = o.Format
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MathEvalEnabled != nil {
		toSerialize["mathEvalEnabled"] = o.MathEvalEnabled
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Model != nil {
		toSerialize["model"] = o.Model
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	return json.Marshal(toSerialize)
}

type NullableBinaryPayloadDescription struct {
	value *BinaryPayloadDescription
	isSet bool
}

func (v NullableBinaryPayloadDescription) Get() *BinaryPayloadDescription {
	return v.value
}

func (v *NullableBinaryPayloadDescription) Set(val *BinaryPayloadDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableBinaryPayloadDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableBinaryPayloadDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBinaryPayloadDescription(val *BinaryPayloadDescription) *NullableBinaryPayloadDescription {
	return &NullableBinaryPayloadDescription{value: val, isSet: true}
}

func (v NullableBinaryPayloadDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBinaryPayloadDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


