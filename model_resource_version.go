/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// ResourceVersion struct for ResourceVersion
type ResourceVersion struct {
	Checksum *string `json:"checksum,omitempty"`
	CompatibleVersions *[]string `json:"compatibleVersions,omitempty"`
	CreationTs *int64 `json:"creationTs,omitempty"`
	Description *string `json:"description,omitempty"`
	File *string `json:"file,omitempty"`
	ResourceId *string `json:"resourceId,omitempty"`
	ResourceVersionId *string `json:"resourceVersionId,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
	UpdateTs *int64 `json:"updateTs,omitempty"`
}

// NewResourceVersion instantiates a new ResourceVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceVersion() *ResourceVersion {
	this := ResourceVersion{}
	return &this
}

// NewResourceVersionWithDefaults instantiates a new ResourceVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceVersionWithDefaults() *ResourceVersion {
	this := ResourceVersion{}
	return &this
}

// GetChecksum returns the Checksum field value if set, zero value otherwise.
func (o *ResourceVersion) GetChecksum() string {
	if o == nil || o.Checksum == nil {
		var ret string
		return ret
	}
	return *o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersion) GetChecksumOk() (*string, bool) {
	if o == nil || o.Checksum == nil {
		return nil, false
	}
	return o.Checksum, true
}

// HasChecksum returns a boolean if a field has been set.
func (o *ResourceVersion) HasChecksum() bool {
	if o != nil && o.Checksum != nil {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given string and assigns it to the Checksum field.
func (o *ResourceVersion) SetChecksum(v string) {
	o.Checksum = &v
}

// GetCompatibleVersions returns the CompatibleVersions field value if set, zero value otherwise.
func (o *ResourceVersion) GetCompatibleVersions() []string {
	if o == nil || o.CompatibleVersions == nil {
		var ret []string
		return ret
	}
	return *o.CompatibleVersions
}

// GetCompatibleVersionsOk returns a tuple with the CompatibleVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersion) GetCompatibleVersionsOk() (*[]string, bool) {
	if o == nil || o.CompatibleVersions == nil {
		return nil, false
	}
	return o.CompatibleVersions, true
}

// HasCompatibleVersions returns a boolean if a field has been set.
func (o *ResourceVersion) HasCompatibleVersions() bool {
	if o != nil && o.CompatibleVersions != nil {
		return true
	}

	return false
}

// SetCompatibleVersions gets a reference to the given []string and assigns it to the CompatibleVersions field.
func (o *ResourceVersion) SetCompatibleVersions(v []string) {
	o.CompatibleVersions = &v
}

// GetCreationTs returns the CreationTs field value if set, zero value otherwise.
func (o *ResourceVersion) GetCreationTs() int64 {
	if o == nil || o.CreationTs == nil {
		var ret int64
		return ret
	}
	return *o.CreationTs
}

// GetCreationTsOk returns a tuple with the CreationTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersion) GetCreationTsOk() (*int64, bool) {
	if o == nil || o.CreationTs == nil {
		return nil, false
	}
	return o.CreationTs, true
}

// HasCreationTs returns a boolean if a field has been set.
func (o *ResourceVersion) HasCreationTs() bool {
	if o != nil && o.CreationTs != nil {
		return true
	}

	return false
}

// SetCreationTs gets a reference to the given int64 and assigns it to the CreationTs field.
func (o *ResourceVersion) SetCreationTs(v int64) {
	o.CreationTs = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceVersion) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersion) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceVersion) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceVersion) SetDescription(v string) {
	o.Description = &v
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *ResourceVersion) GetFile() string {
	if o == nil || o.File == nil {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersion) GetFileOk() (*string, bool) {
	if o == nil || o.File == nil {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *ResourceVersion) HasFile() bool {
	if o != nil && o.File != nil {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *ResourceVersion) SetFile(v string) {
	o.File = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *ResourceVersion) GetResourceId() string {
	if o == nil || o.ResourceId == nil {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersion) GetResourceIdOk() (*string, bool) {
	if o == nil || o.ResourceId == nil {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *ResourceVersion) HasResourceId() bool {
	if o != nil && o.ResourceId != nil {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *ResourceVersion) SetResourceId(v string) {
	o.ResourceId = &v
}

// GetResourceVersionId returns the ResourceVersionId field value if set, zero value otherwise.
func (o *ResourceVersion) GetResourceVersionId() string {
	if o == nil || o.ResourceVersionId == nil {
		var ret string
		return ret
	}
	return *o.ResourceVersionId
}

// GetResourceVersionIdOk returns a tuple with the ResourceVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersion) GetResourceVersionIdOk() (*string, bool) {
	if o == nil || o.ResourceVersionId == nil {
		return nil, false
	}
	return o.ResourceVersionId, true
}

// HasResourceVersionId returns a boolean if a field has been set.
func (o *ResourceVersion) HasResourceVersionId() bool {
	if o != nil && o.ResourceVersionId != nil {
		return true
	}

	return false
}

// SetResourceVersionId gets a reference to the given string and assigns it to the ResourceVersionId field.
func (o *ResourceVersion) SetResourceVersionId(v string) {
	o.ResourceVersionId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ResourceVersion) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersion) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ResourceVersion) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ResourceVersion) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUpdateTs returns the UpdateTs field value if set, zero value otherwise.
func (o *ResourceVersion) GetUpdateTs() int64 {
	if o == nil || o.UpdateTs == nil {
		var ret int64
		return ret
	}
	return *o.UpdateTs
}

// GetUpdateTsOk returns a tuple with the UpdateTs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceVersion) GetUpdateTsOk() (*int64, bool) {
	if o == nil || o.UpdateTs == nil {
		return nil, false
	}
	return o.UpdateTs, true
}

// HasUpdateTs returns a boolean if a field has been set.
func (o *ResourceVersion) HasUpdateTs() bool {
	if o != nil && o.UpdateTs != nil {
		return true
	}

	return false
}

// SetUpdateTs gets a reference to the given int64 and assigns it to the UpdateTs field.
func (o *ResourceVersion) SetUpdateTs(v int64) {
	o.UpdateTs = &v
}

func (o ResourceVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Checksum != nil {
		toSerialize["checksum"] = o.Checksum
	}
	if o.CompatibleVersions != nil {
		toSerialize["compatibleVersions"] = o.CompatibleVersions
	}
	if o.CreationTs != nil {
		toSerialize["creationTs"] = o.CreationTs
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.File != nil {
		toSerialize["file"] = o.File
	}
	if o.ResourceId != nil {
		toSerialize["resourceId"] = o.ResourceId
	}
	if o.ResourceVersionId != nil {
		toSerialize["resourceVersionId"] = o.ResourceVersionId
	}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	if o.UpdateTs != nil {
		toSerialize["updateTs"] = o.UpdateTs
	}
	return json.Marshal(toSerialize)
}

type NullableResourceVersion struct {
	value *ResourceVersion
	isSet bool
}

func (v NullableResourceVersion) Get() *ResourceVersion {
	return v.value
}

func (v *NullableResourceVersion) Set(val *ResourceVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceVersion(val *ResourceVersion) *NullableResourceVersion {
	return &NullableResourceVersion{value: val, isSet: true}
}

func (v NullableResourceVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


