/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// AuditLogMessage a log message that described a functionnal event
type AuditLogMessage struct {
	// category of the log message.
	Category string `json:"category"`
	// log message's specific content
	Content *map[string]interface{} `json:"content,omitempty"`
	// date of storage of the log message. ISO 8601 date time.
	Created string `json:"created"`
	// high level description of the log message
	Description string `json:"description"`
	// detailed description of log the message
	DetailedDescription *string `json:"detailedDescription,omitempty"`
	// level of the log message.
	Level string `json:"level"`
	Source *Source `json:"source,omitempty"`
	// subcategory of the log message.
	Subcategory string `json:"subcategory"`
	// timestamp of the log message. ISO 8601 date time.
	Timestamp string `json:"timestamp"`
	// specific type of the log message.
	Type string `json:"type"`
}

// NewAuditLogMessage instantiates a new AuditLogMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogMessage(category string, created string, description string, level string, subcategory string, timestamp string, type_ string, ) *AuditLogMessage {
	this := AuditLogMessage{}
	this.Category = category
	this.Created = created
	this.Description = description
	this.Level = level
	this.Subcategory = subcategory
	this.Timestamp = timestamp
	this.Type = type_
	return &this
}

// NewAuditLogMessageWithDefaults instantiates a new AuditLogMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogMessageWithDefaults() *AuditLogMessage {
	this := AuditLogMessage{}
	return &this
}

// GetCategory returns the Category field value
func (o *AuditLogMessage) GetCategory() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *AuditLogMessage) GetCategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *AuditLogMessage) SetCategory(v string) {
	o.Category = v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *AuditLogMessage) GetContent() map[string]interface{} {
	if o == nil || o.Content == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogMessage) GetContentOk() (*map[string]interface{}, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *AuditLogMessage) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given map[string]interface{} and assigns it to the Content field.
func (o *AuditLogMessage) SetContent(v map[string]interface{}) {
	o.Content = &v
}

// GetCreated returns the Created field value
func (o *AuditLogMessage) GetCreated() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *AuditLogMessage) GetCreatedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *AuditLogMessage) SetCreated(v string) {
	o.Created = v
}

// GetDescription returns the Description field value
func (o *AuditLogMessage) GetDescription() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AuditLogMessage) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AuditLogMessage) SetDescription(v string) {
	o.Description = v
}

// GetDetailedDescription returns the DetailedDescription field value if set, zero value otherwise.
func (o *AuditLogMessage) GetDetailedDescription() string {
	if o == nil || o.DetailedDescription == nil {
		var ret string
		return ret
	}
	return *o.DetailedDescription
}

// GetDetailedDescriptionOk returns a tuple with the DetailedDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogMessage) GetDetailedDescriptionOk() (*string, bool) {
	if o == nil || o.DetailedDescription == nil {
		return nil, false
	}
	return o.DetailedDescription, true
}

// HasDetailedDescription returns a boolean if a field has been set.
func (o *AuditLogMessage) HasDetailedDescription() bool {
	if o != nil && o.DetailedDescription != nil {
		return true
	}

	return false
}

// SetDetailedDescription gets a reference to the given string and assigns it to the DetailedDescription field.
func (o *AuditLogMessage) SetDetailedDescription(v string) {
	o.DetailedDescription = &v
}

// GetLevel returns the Level field value
func (o *AuditLogMessage) GetLevel() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *AuditLogMessage) GetLevelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *AuditLogMessage) SetLevel(v string) {
	o.Level = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *AuditLogMessage) GetSource() Source {
	if o == nil || o.Source == nil {
		var ret Source
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogMessage) GetSourceOk() (*Source, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *AuditLogMessage) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given Source and assigns it to the Source field.
func (o *AuditLogMessage) SetSource(v Source) {
	o.Source = &v
}

// GetSubcategory returns the Subcategory field value
func (o *AuditLogMessage) GetSubcategory() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Subcategory
}

// GetSubcategoryOk returns a tuple with the Subcategory field value
// and a boolean to check if the value has been set.
func (o *AuditLogMessage) GetSubcategoryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Subcategory, true
}

// SetSubcategory sets field value
func (o *AuditLogMessage) SetSubcategory(v string) {
	o.Subcategory = v
}

// GetTimestamp returns the Timestamp field value
func (o *AuditLogMessage) GetTimestamp() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *AuditLogMessage) GetTimestampOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *AuditLogMessage) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetType returns the Type field value
func (o *AuditLogMessage) GetType() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AuditLogMessage) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AuditLogMessage) SetType(v string) {
	o.Type = v
}

func (o AuditLogMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["category"] = o.Category
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.DetailedDescription != nil {
		toSerialize["detailedDescription"] = o.DetailedDescription
	}
	if true {
		toSerialize["level"] = o.Level
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if true {
		toSerialize["subcategory"] = o.Subcategory
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableAuditLogMessage struct {
	value *AuditLogMessage
	isSet bool
}

func (v NullableAuditLogMessage) Get() *AuditLogMessage {
	return v.value
}

func (v *NullableAuditLogMessage) Set(val *AuditLogMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogMessage(val *AuditLogMessage) *NullableAuditLogMessage {
	return &NullableAuditLogMessage{value: val, isSet: true}
}

func (v NullableAuditLogMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


