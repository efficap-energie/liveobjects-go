/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// CampaignOperation struct for CampaignOperation
type CampaignOperation struct {
	// Type of operation
	Action string `json:"action"`
	// Version of operation (default:0)
	Version *int32 `json:"version,omitempty"`
}

// NewCampaignOperation instantiates a new CampaignOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignOperation(action string, ) *CampaignOperation {
	this := CampaignOperation{}
	this.Action = action
	return &this
}

// NewCampaignOperationWithDefaults instantiates a new CampaignOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignOperationWithDefaults() *CampaignOperation {
	this := CampaignOperation{}
	return &this
}

// GetAction returns the Action field value
func (o *CampaignOperation) GetAction() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *CampaignOperation) GetActionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *CampaignOperation) SetAction(v string) {
	o.Action = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CampaignOperation) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOperation) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CampaignOperation) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *CampaignOperation) SetVersion(v int32) {
	o.Version = &v
}

func (o CampaignOperation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["action"] = o.Action
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableCampaignOperation struct {
	value *CampaignOperation
	isSet bool
}

func (v NullableCampaignOperation) Get() *CampaignOperation {
	return v.value
}

func (v *NullableCampaignOperation) Set(val *CampaignOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignOperation(val *CampaignOperation) *NullableCampaignOperation {
	return &NullableCampaignOperation{value: val, isSet: true}
}

func (v NullableCampaignOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


