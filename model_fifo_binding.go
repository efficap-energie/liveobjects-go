/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// FifoBinding struct for FifoBinding
type FifoBinding struct {
	// Destination Fifo Name
	DestFifoName string `json:"destFifoName"`
	// routing Key filter
	RoutingKeyFilter string `json:"routingKeyFilter"`
}

// NewFifoBinding instantiates a new FifoBinding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFifoBinding(destFifoName string, routingKeyFilter string, ) *FifoBinding {
	this := FifoBinding{}
	this.DestFifoName = destFifoName
	this.RoutingKeyFilter = routingKeyFilter
	return &this
}

// NewFifoBindingWithDefaults instantiates a new FifoBinding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFifoBindingWithDefaults() *FifoBinding {
	this := FifoBinding{}
	return &this
}

// GetDestFifoName returns the DestFifoName field value
func (o *FifoBinding) GetDestFifoName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.DestFifoName
}

// GetDestFifoNameOk returns a tuple with the DestFifoName field value
// and a boolean to check if the value has been set.
func (o *FifoBinding) GetDestFifoNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DestFifoName, true
}

// SetDestFifoName sets field value
func (o *FifoBinding) SetDestFifoName(v string) {
	o.DestFifoName = v
}

// GetRoutingKeyFilter returns the RoutingKeyFilter field value
func (o *FifoBinding) GetRoutingKeyFilter() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.RoutingKeyFilter
}

// GetRoutingKeyFilterOk returns a tuple with the RoutingKeyFilter field value
// and a boolean to check if the value has been set.
func (o *FifoBinding) GetRoutingKeyFilterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RoutingKeyFilter, true
}

// SetRoutingKeyFilter sets field value
func (o *FifoBinding) SetRoutingKeyFilter(v string) {
	o.RoutingKeyFilter = v
}

func (o FifoBinding) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["destFifoName"] = o.DestFifoName
	}
	if true {
		toSerialize["routingKeyFilter"] = o.RoutingKeyFilter
	}
	return json.Marshal(toSerialize)
}

type NullableFifoBinding struct {
	value *FifoBinding
	isSet bool
}

func (v NullableFifoBinding) Get() *FifoBinding {
	return v.value
}

func (v *NullableFifoBinding) Set(val *FifoBinding) {
	v.value = val
	v.isSet = true
}

func (v NullableFifoBinding) IsSet() bool {
	return v.isSet
}

func (v *NullableFifoBinding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFifoBinding(val *FifoBinding) *NullableFifoBinding {
	return &NullableFifoBinding{value: val, isSet: true}
}

func (v NullableFifoBinding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFifoBinding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


