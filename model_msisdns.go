/*
 * Live Objects REST API Guide v2.13.3
 *
 * API description for Live Objects service
 *
 * API version: 2.13.3
 * Contact: liveobjects.support@orange.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package liveobjects

import (
	"encoding/json"
)

// Msisdns struct for Msisdns
type Msisdns struct {
	// device's SIM Card identifier ex: \"33666666667\"
	Msisdn string `json:"msisdn"`
}

// NewMsisdns instantiates a new Msisdns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMsisdns(msisdn string, ) *Msisdns {
	this := Msisdns{}
	this.Msisdn = msisdn
	return &this
}

// NewMsisdnsWithDefaults instantiates a new Msisdns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMsisdnsWithDefaults() *Msisdns {
	this := Msisdns{}
	return &this
}

// GetMsisdn returns the Msisdn field value
func (o *Msisdns) GetMsisdn() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Msisdn
}

// GetMsisdnOk returns a tuple with the Msisdn field value
// and a boolean to check if the value has been set.
func (o *Msisdns) GetMsisdnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Msisdn, true
}

// SetMsisdn sets field value
func (o *Msisdns) SetMsisdn(v string) {
	o.Msisdn = v
}

func (o Msisdns) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["msisdn"] = o.Msisdn
	}
	return json.Marshal(toSerialize)
}

type NullableMsisdns struct {
	value *Msisdns
	isSet bool
}

func (v NullableMsisdns) Get() *Msisdns {
	return v.value
}

func (v *NullableMsisdns) Set(val *Msisdns) {
	v.value = val
	v.isSet = true
}

func (v NullableMsisdns) IsSet() bool {
	return v.isSet
}

func (v *NullableMsisdns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMsisdns(val *Msisdns) *NullableMsisdns {
	return &NullableMsisdns{value: val, isSet: true}
}

func (v NullableMsisdns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMsisdns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


